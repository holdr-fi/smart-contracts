{
    "id": "9908f3000243f07fcfd582b40b4db2e1",
    "_format": "hh-sol-build-info-1",
    "solcVersion": "0.7.1",
    "solcLongVersion": "0.7.1+commit.f4a555be",
    "input": {
      "language": "Solidity",
      "sources": {
        "solace_swap/contracts/BalancerBribe.sol": {
          "content": "// Sources flattened with hardhat v2.8.3 https://hardhat.org\n\n// File @openzeppelin/contracts/access/IAccessControl.sol@v4.4.2\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n\n\n// File @openzeppelin/contracts/utils/Context.sol@v4.4.2\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/Strings.sol@v4.4.2\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.7.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/introspection/IERC165.sol@v4.4.2\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n\n// File @openzeppelin/contracts/utils/introspection/ERC165.sol@v4.4.2\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n\n// File @openzeppelin/contracts/access/AccessControl.sol@v4.4.2\n\n\n// OpenZeppelin Contracts v4.4.1 (access/AccessControl.sol)\n\npragma solidity ^0.7.0;\n\n\n\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role, _msgSender());\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.4.2\n\n\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n\n// File contracts/interfaces/IBribeVault.sol\n\n\npragma solidity ^0.7.0;\n\ninterface IBribeVault {\n    function depositBribeERC20(\n        bytes32 bribeIdentifier,\n        bytes32 rewardIdentifier,\n        address token,\n        uint256 amount,\n        address briber\n    ) external;\n\n    function getBribe(bytes32 bribeIdentifier)\n        external\n        view\n        returns (address token, uint256 amount);\n\n    function depositBribe(\n        bytes32 bribeIdentifier,\n        bytes32 rewardIdentifier,\n        address briber\n    ) external payable;\n}\n\n\n// File contracts/BribeBase.sol\n\n\npragma solidity ^0.7.0;\n\n\n\ncontract BribeBase is AccessControl, ReentrancyGuard {\n    address public immutable BRIBE_VAULT;\n    bytes32 public constant TEAM_ROLE = keccak256(\"TEAM_ROLE\");\n\n    // Used for generating the bribe and reward identifiers\n    bytes32 public immutable PROTOCOL;\n\n    // Arbitrary bytes mapped to deadlines\n    mapping(bytes32 => uint256) public proposalDeadlines;\n\n    // Voter addresses mapped to addresses which will claim rewards on their behalf\n    mapping(address => address) public rewardForwarding;\n\n    // Tracks whitelisted tokens\n    mapping(address => uint256) public indexOfWhitelistedToken;\n    address[] public allWhitelistedTokens;\n\n    event GrantTeamRole(address teamMember);\n    event RevokeTeamRole(address teamMember);\n    event SetProposal(bytes32 indexed proposal, uint256 deadline);\n    event DepositBribe(\n        bytes32 indexed proposal,\n        address indexed token,\n        uint256 amount,\n        bytes32 bribeIdentifier,\n        bytes32 rewardIdentifier,\n        address indexed briber\n    );\n    event SetRewardForwarding(address from, address to);\n    event AddWhitelistTokens(address[] tokens);\n    event RemoveWhitelistTokens(address[] tokens);\n\n    constructor(address _BRIBE_VAULT, string memory _PROTOCOL) {\n        require(_BRIBE_VAULT != address(0), \"Invalid _BRIBE_VAULT\");\n        BRIBE_VAULT = _BRIBE_VAULT;\n\n        require(bytes(_PROTOCOL).length != 0, \"Invalid _PROTOCOL\");\n        PROTOCOL = keccak256(abi.encodePacked(_PROTOCOL));\n\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    modifier onlyAuthorized() {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, msg.sender) ||\n                hasRole(TEAM_ROLE, msg.sender),\n            \"Not authorized\"\n        );\n        _;\n    }\n\n    /**\n        @notice Grant the team role to an address\n        @param  teamMember  address  Address to grant the teamMember role\n     */\n    function grantTeamRole(address teamMember)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(teamMember != address(0), \"Invalid teamMember\");\n        _grantRole(TEAM_ROLE, teamMember);\n\n        emit GrantTeamRole(teamMember);\n    }\n\n    /**\n        @notice Revoke the team role from an address\n        @param  teamMember  address  Address to revoke the teamMember role\n     */\n    function revokeTeamRole(address teamMember)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(hasRole(TEAM_ROLE, teamMember), \"Invalid teamMember\");\n        _revokeRole(TEAM_ROLE, teamMember);\n\n        emit RevokeTeamRole(teamMember);\n    }\n\n    /**\n        @notice Return the list of currently whitelisted token addresses\n     */\n    function getWhitelistedTokens() external view returns (address[] memory) {\n        return allWhitelistedTokens;\n    }\n\n    /**\n        @notice Return whether the specified token is whitelisted\n        @param  token  address Token address to be checked\n     */\n    function isWhitelistedToken(address token) public view returns (bool) {\n        if (allWhitelistedTokens.length == 0) {\n            return false;\n        }\n\n        return\n            indexOfWhitelistedToken[token] != 0 ||\n            allWhitelistedTokens[0] == token;\n    }\n\n    /**\n        @notice Add whitelist tokens\n        @param  tokens  address[]  Tokens to add to whitelist\n     */\n    function addWhitelistTokens(address[] calldata tokens)\n        external\n        onlyAuthorized\n    {\n        for (uint256 i; i < tokens.length; ++i) {\n            require(tokens[i] != address(0), \"Invalid token\");\n            require(tokens[i] != BRIBE_VAULT, \"Cannot whitelist BRIBE_VAULT\");\n            require(\n                !isWhitelistedToken(tokens[i]),\n                \"Token already whitelisted\"\n            );\n\n            // Perform creation op for the unordered key set\n            allWhitelistedTokens.push(tokens[i]);\n            indexOfWhitelistedToken[tokens[i]] =\n                allWhitelistedTokens.length -\n                1;\n        }\n\n        emit AddWhitelistTokens(tokens);\n    }\n\n    /**\n        @notice Remove whitelist tokens\n        @param  tokens  address[]  Tokens to remove from whitelist\n     */\n    function removeWhitelistTokens(address[] calldata tokens)\n        external\n        onlyAuthorized\n    {\n        for (uint256 i; i < tokens.length; ++i) {\n            require(isWhitelistedToken(tokens[i]), \"Token not whitelisted\");\n\n            // Perform deletion op for the unordered key set\n            // by swapping the affected row to the end/tail of the list\n            uint256 index = indexOfWhitelistedToken[tokens[i]];\n            address tail = allWhitelistedTokens[\n                allWhitelistedTokens.length - 1\n            ];\n\n            allWhitelistedTokens[index] = tail;\n            indexOfWhitelistedToken[tail] = index;\n\n            delete indexOfWhitelistedToken[tokens[i]];\n            allWhitelistedTokens.pop();\n        }\n\n        emit RemoveWhitelistTokens(tokens);\n    }\n\n    /**\n        @notice Set a single proposal\n        @param  proposal  bytes32  Proposal\n        @param  deadline  uint256  Proposal deadline\n     */\n    function _setProposal(bytes32 proposal, uint256 deadline) internal {\n        require(proposal != bytes32(0), \"Invalid proposal\");\n        require(deadline > block.timestamp, \"Deadline must be in the future\");\n\n        proposalDeadlines[proposal] = deadline;\n\n        emit SetProposal(proposal, deadline);\n    }\n\n    /**\n        @notice Generate the BribeVault identifier based on a scheme\n        @param  proposal          bytes32  Proposal\n        @param  proposalDeadline  uint256  Proposal deadline\n        @param  token             address  Token\n        @return identifier        bytes32  BribeVault identifier\n     */\n    function generateBribeVaultIdentifier(\n        bytes32 proposal,\n        uint256 proposalDeadline,\n        address token\n    ) public view returns (bytes32 identifier) {\n        return\n            keccak256(\n                abi.encodePacked(PROTOCOL, proposal, proposalDeadline, token)\n            );\n    }\n\n    /**\n        @notice Generate the reward identifier based on a scheme\n        @param  proposalDeadline  uint256  Proposal deadline\n        @param  token             address  Token\n        @return identifier        bytes32  Reward identifier\n     */\n    function generateRewardIdentifier(uint256 proposalDeadline, address token)\n        public\n        view\n        returns (bytes32 identifier)\n    {\n        return keccak256(abi.encodePacked(PROTOCOL, proposalDeadline, token));\n    }\n\n    /**\n        @notice Get bribe from BribeVault\n        @param  proposal          bytes32  Proposal\n        @param  proposalDeadline  uint256  Proposal deadline\n        @param  token             address  Token\n        @return bribeToken        address  Token address\n        @return bribeAmount       address  Token amount\n     */\n    function getBribe(\n        bytes32 proposal,\n        uint256 proposalDeadline,\n        address token\n    ) external view returns (address bribeToken, uint256 bribeAmount) {\n        return\n            IBribeVault(BRIBE_VAULT).getBribe(\n                generateBribeVaultIdentifier(proposal, proposalDeadline, token)\n            );\n    }\n\n    /**\n        @notice Deposit bribe for a proposal (ERC20 tokens only)\n        @param  proposal  bytes32  Proposal\n        @param  token     address  Token\n        @param  amount    uint256  Token amount\n     */\n    function depositBribeERC20(\n        bytes32 proposal,\n        address token,\n        uint256 amount\n    ) external nonReentrant {\n        uint256 proposalDeadline = proposalDeadlines[proposal];\n        require(\n            proposalDeadlines[proposal] > block.timestamp,\n            \"Proposal deadline has passed\"\n        );\n        require(token != address(0), \"Invalid token\");\n        require(isWhitelistedToken(token), \"Token is not whitelisted\");\n        require(amount != 0, \"Bribe amount must be greater than 0\");\n\n        bytes32 bribeIdentifier = generateBribeVaultIdentifier(\n            proposal,\n            proposalDeadline,\n            token\n        );\n        bytes32 rewardIdentifier = generateRewardIdentifier(\n            proposalDeadline,\n            token\n        );\n\n        IBribeVault(BRIBE_VAULT).depositBribeERC20(\n            bribeIdentifier,\n            rewardIdentifier,\n            token,\n            amount,\n            msg.sender\n        );\n\n        emit DepositBribe(\n            proposal,\n            token,\n            amount,\n            bribeIdentifier,\n            rewardIdentifier,\n            msg.sender\n        );\n    }\n\n    /**\n        @notice Deposit bribe for a proposal (native token only)\n        @param  proposal  bytes32  Proposal\n     */\n    function depositBribe(bytes32 proposal) external payable nonReentrant {\n        uint256 proposalDeadline = proposalDeadlines[proposal];\n        require(\n            proposalDeadlines[proposal] > block.timestamp,\n            \"Proposal deadline has passed\"\n        );\n        require(msg.value != 0, \"Bribe amount must be greater than 0\");\n\n        bytes32 bribeIdentifier = generateBribeVaultIdentifier(\n            proposal,\n            proposalDeadline,\n            BRIBE_VAULT\n        );\n        bytes32 rewardIdentifier = generateRewardIdentifier(\n            proposalDeadline,\n            BRIBE_VAULT\n        );\n\n        // NOTE: Native token bribes have BRIBE_VAULT set as the address\n        IBribeVault(BRIBE_VAULT).depositBribe{value: msg.value}(\n            bribeIdentifier,\n            rewardIdentifier,\n            msg.sender\n        );\n\n        emit DepositBribe(\n            proposal,\n            BRIBE_VAULT,\n            msg.value,\n            bribeIdentifier,\n            rewardIdentifier,\n            msg.sender\n        );\n    }\n\n    /**\n        @notice Voters can opt in or out of reward-forwarding\n        @notice Opt-in: A voter sets another address to forward rewards to\n        @notice Opt-out: A voter sets their own address or the zero address\n        @param  to  address  Account that rewards will be sent to\n     */\n    function setRewardForwarding(address to) external {\n        rewardForwarding[msg.sender] = to;\n\n        emit SetRewardForwarding(msg.sender, to);\n    }\n}\n\n\n// File contracts/BalancerBribe.sol\n\npragma solidity ^0.7.0;\n\ncontract BalancerBribe is BribeBase {\n    address[] public gauges;\n    mapping(address => uint256) public indexOfGauge;\n\n    constructor(address _BRIBE_VAULT)\n        BribeBase(_BRIBE_VAULT, \"BALANCER\")\n    {}\n\n    /**\n        @notice Set a single proposal for a liquidity gauge\n        @param  gauge     address  Gauge address\n        @param  deadline  uint256  Proposal deadline\n     */\n    function setGaugeProposal(address gauge, uint256 deadline)\n        public\n        onlyAuthorized\n    {\n        require(gauge != address(0), \"Invalid gauge\");\n\n        // Add new gauge to list and track index\n        if (\n            gauges.length == 0 ||\n            (indexOfGauge[gauge] == 0 && gauges[0] != gauge)\n        ) {\n            gauges.push(gauge);\n            indexOfGauge[gauge] = gauges.length - 1;\n        }\n\n        _setProposal(keccak256(abi.encodePacked(gauge)), deadline);\n    }\n\n    /**\n        @notice Set multiple proposals for many gauges\n        @param  gauges_    address[]  Gauge addresses\n        @param  deadlines  uint256[]  Proposal deadlines\n     */\n    function setGaugeProposals(\n        address[] calldata gauges_,\n        uint256[] calldata deadlines\n    ) external onlyAuthorized {\n        uint256 gaugeLen = gauges_.length;\n        require(gaugeLen != 0, \"Invalid gauges_\");\n        require(gaugeLen == deadlines.length, \"Arrays length mismatch\");\n\n        for (uint256 i; i < gaugeLen; ++i) {\n            setGaugeProposal(gauges_[i], deadlines[i]);\n        }\n    }\n\n    /**\n        @notice Get list of gauges\n     */\n    function getGauges() external view returns (address[] memory) {\n        return gauges;\n    }\n}"
        }
      },
      "settings": {
        "optimizer": {
          "enabled": true,
          "runs": 1500
        },
        "outputSelection": {
          "*": {
            "*": [
              "abi",
              "evm.bytecode",
              "evm.deployedBytecode",
              "evm.methodIdentifiers",
              "metadata"
            ],
            "": [
              "ast"
            ]
          }
        }
      }
    },
    "output": {
      "sources": {
        "solace_swap/contracts/BalancerBribe.sol": {
          "ast": {
            "absolutePath": "solace_swap/contracts/BalancerBribe.sol",
            "exportedSymbols": {
              "AccessControl": [
                632
              ],
              "BalancerBribe": [
                1530
              ],
              "BribeBase": [
                1381
              ],
              "Context": [
                94
              ],
              "ERC165": [
                329
              ],
              "IAccessControl": [
                73
              ],
              "IBribeVault": [
                704
              ],
              "IERC165": [
                307
              ],
              "ReentrancyGuard": [
                671
              ],
              "Strings": [
                296
              ]
            },
            "id": 1531,
            "license": "MIT",
            "nodeType": "SourceUnit",
            "nodes": [
              {
                "id": 1,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "222:23:0"
              },
              {
                "id": 2,
                "literals": [
                  "experimental",
                  "ABIEncoderV2"
                ],
                "nodeType": "PragmaDirective",
                "src": "246:33:0"
              },
              {
                "abstract": false,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "interface",
                "documentation": {
                  "id": 3,
                  "nodeType": "StructuredDocumentation",
                  "src": "281:89:0",
                  "text": " @dev External interface of AccessControl declared to support ERC165 detection."
                },
                "fullyImplemented": false,
                "id": 73,
                "linearizedBaseContracts": [
                  73
                ],
                "name": "IAccessControl",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "anonymous": false,
                    "documentation": {
                      "id": 4,
                      "nodeType": "StructuredDocumentation",
                      "src": "402:292:0",
                      "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
                    },
                    "id": 12,
                    "name": "RoleAdminChanged",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 11,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 6,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 12,
                          "src": "722:20:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 5,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "722:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 8,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "previousAdminRole",
                          "nodeType": "VariableDeclaration",
                          "scope": 12,
                          "src": "744:33:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 7,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "744:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 10,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "newAdminRole",
                          "nodeType": "VariableDeclaration",
                          "scope": 12,
                          "src": "779:28:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 9,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "779:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "721:87:0"
                    },
                    "src": "699:110:0"
                  },
                  {
                    "anonymous": false,
                    "documentation": {
                      "id": 13,
                      "nodeType": "StructuredDocumentation",
                      "src": "815:212:0",
                      "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
                    },
                    "id": 21,
                    "name": "RoleGranted",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 20,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 15,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 21,
                          "src": "1050:20:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 14,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1050:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 17,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 21,
                          "src": "1072:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 16,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1072:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 19,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "sender",
                          "nodeType": "VariableDeclaration",
                          "scope": 21,
                          "src": "1097:22:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 18,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1097:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "1049:71:0"
                    },
                    "src": "1032:89:0"
                  },
                  {
                    "anonymous": false,
                    "documentation": {
                      "id": 22,
                      "nodeType": "StructuredDocumentation",
                      "src": "1127:275:0",
                      "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                    },
                    "id": 30,
                    "name": "RoleRevoked",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 29,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 24,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 30,
                          "src": "1425:20:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 23,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1425:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 26,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 30,
                          "src": "1447:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 25,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1447:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 28,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "sender",
                          "nodeType": "VariableDeclaration",
                          "scope": 30,
                          "src": "1472:22:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 27,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1472:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "1424:71:0"
                    },
                    "src": "1407:89:0"
                  },
                  {
                    "documentation": {
                      "id": 31,
                      "nodeType": "StructuredDocumentation",
                      "src": "1502:76:0",
                      "text": " @dev Returns `true` if `account` has been granted `role`."
                    },
                    "functionSelector": "91d14854",
                    "id": 40,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "hasRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 36,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 33,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 40,
                          "src": "1600:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 32,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1600:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 35,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 40,
                          "src": "1614:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 34,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1614:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "1599:31:0"
                    },
                    "returnParameters": {
                      "id": 39,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 38,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 40,
                          "src": "1654:4:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 37,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1654:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "1653:6:0"
                    },
                    "scope": 73,
                    "src": "1583:77:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "documentation": {
                      "id": 41,
                      "nodeType": "StructuredDocumentation",
                      "src": "1666:184:0",
                      "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                    },
                    "functionSelector": "248a9ca3",
                    "id": 48,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "getRoleAdmin",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 44,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 43,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 48,
                          "src": "1877:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 42,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1877:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "1876:14:0"
                    },
                    "returnParameters": {
                      "id": 47,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 46,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 48,
                          "src": "1914:7:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 45,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1914:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "1913:9:0"
                    },
                    "scope": 73,
                    "src": "1855:68:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "documentation": {
                      "id": 49,
                      "nodeType": "StructuredDocumentation",
                      "src": "1929:239:0",
                      "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                    },
                    "functionSelector": "2f2ff15d",
                    "id": 56,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "grantRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 54,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 51,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 56,
                          "src": "2192:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 50,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2192:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 53,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 56,
                          "src": "2206:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 52,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2206:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "2191:31:0"
                    },
                    "returnParameters": {
                      "id": 55,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "2231:0:0"
                    },
                    "scope": 73,
                    "src": "2173:59:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "documentation": {
                      "id": 57,
                      "nodeType": "StructuredDocumentation",
                      "src": "2238:223:0",
                      "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                    },
                    "functionSelector": "d547741f",
                    "id": 64,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "revokeRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 62,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 59,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 64,
                          "src": "2486:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 58,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2486:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 61,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 64,
                          "src": "2500:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 60,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2500:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "2485:31:0"
                    },
                    "returnParameters": {
                      "id": 63,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "2525:0:0"
                    },
                    "scope": 73,
                    "src": "2466:60:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "documentation": {
                      "id": 65,
                      "nodeType": "StructuredDocumentation",
                      "src": "2532:480:0",
                      "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
                    },
                    "functionSelector": "36568abe",
                    "id": 72,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "renounceRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 70,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 67,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 72,
                          "src": "3039:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 66,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3039:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 69,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 72,
                          "src": "3053:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 68,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3053:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "3038:31:0"
                    },
                    "returnParameters": {
                      "id": 71,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "3078:0:0"
                    },
                    "scope": 73,
                    "src": "3017:62:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  }
                ],
                "scope": 1531,
                "src": "371:2710:0"
              },
              {
                "id": 74,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "3197:23:0"
              },
              {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                  "id": 75,
                  "nodeType": "StructuredDocumentation",
                  "src": "3222:496:0",
                  "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
                },
                "fullyImplemented": true,
                "id": 94,
                "linearizedBaseContracts": [
                  94
                ],
                "name": "Context",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "body": {
                      "id": 83,
                      "nodeType": "Block",
                      "src": "3813:34:0",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "id": 80,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3830:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 81,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3830:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "functionReturnParameters": 79,
                          "id": 82,
                          "nodeType": "Return",
                          "src": "3823:17:0"
                        }
                      ]
                    },
                    "id": 84,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "_msgSender",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 76,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "3770:2:0"
                    },
                    "returnParameters": {
                      "id": 79,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 78,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 84,
                          "src": "3804:7:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 77,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3804:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "3803:9:0"
                    },
                    "scope": 94,
                    "src": "3751:96:0",
                    "stateMutability": "view",
                    "virtual": true,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 92,
                      "nodeType": "Block",
                      "src": "3920:32:0",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "id": 89,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3937:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "src": "3937:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "functionReturnParameters": 88,
                          "id": 91,
                          "nodeType": "Return",
                          "src": "3930:15:0"
                        }
                      ]
                    },
                    "id": 93,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "_msgData",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 85,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "3870:2:0"
                    },
                    "returnParameters": {
                      "id": 88,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 87,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 93,
                          "src": "3904:14:0",
                          "stateVariable": false,
                          "storageLocation": "calldata",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 86,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3904:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "3903:16:0"
                    },
                    "scope": 94,
                    "src": "3853:99:0",
                    "stateMutability": "view",
                    "virtual": true,
                    "visibility": "internal"
                  }
                ],
                "scope": 1531,
                "src": "3719:235:0"
              },
              {
                "id": 95,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "4070:23:0"
              },
              {
                "abstract": false,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "library",
                "documentation": {
                  "id": 96,
                  "nodeType": "StructuredDocumentation",
                  "src": "4095:34:0",
                  "text": " @dev String operations."
                },
                "fullyImplemented": true,
                "id": 296,
                "linearizedBaseContracts": [
                  296
                ],
                "name": "Strings",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "constant": true,
                    "id": 99,
                    "mutability": "constant",
                    "name": "_HEX_SYMBOLS",
                    "nodeType": "VariableDeclaration",
                    "scope": 296,
                    "src": "4152:58:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    },
                    "typeName": {
                      "id": 97,
                      "name": "bytes16",
                      "nodeType": "ElementaryTypeName",
                      "src": "4152:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "value": {
                      "hexValue": "30313233343536373839616263646566",
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4192:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
                        "typeString": "literal_string \"0123456789abcdef\""
                      },
                      "value": "0123456789abcdef"
                    },
                    "visibility": "private"
                  },
                  {
                    "body": {
                      "id": 177,
                      "nodeType": "Block",
                      "src": "4383:632:0",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 107,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "4585:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4594:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4585:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 113,
                          "nodeType": "IfStatement",
                          "src": "4581:51:0",
                          "trueBody": {
                            "id": 112,
                            "nodeType": "Block",
                            "src": "4597:35:0",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "30",
                                  "id": 110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4618:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                },
                                "functionReturnParameters": 106,
                                "id": 111,
                                "nodeType": "Return",
                                "src": "4611:10:0"
                              }
                            ]
                          }
                        },
                        {
                          "assignments": [
                            115
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 115,
                              "mutability": "mutable",
                              "name": "temp",
                              "nodeType": "VariableDeclaration",
                              "scope": 177,
                              "src": "4641:12:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 114,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4641:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 117,
                          "initialValue": {
                            "id": 116,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "4656:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4641:20:0"
                        },
                        {
                          "assignments": [
                            119
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 119,
                              "mutability": "mutable",
                              "name": "digits",
                              "nodeType": "VariableDeclaration",
                              "scope": 177,
                              "src": "4671:14:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 118,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4671:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 120,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4671:14:0"
                        },
                        {
                          "body": {
                            "id": 131,
                            "nodeType": "Block",
                            "src": "4713:57:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "4727:8:0",
                                  "subExpression": {
                                    "id": 124,
                                    "name": "digits",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 119,
                                    "src": "4727:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 126,
                                "nodeType": "ExpressionStatement",
                                "src": "4727:8:0"
                              },
                              {
                                "expression": {
                                  "id": 129,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 127,
                                    "name": "temp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 115,
                                    "src": "4749:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "/=",
                                  "rightHandSide": {
                                    "hexValue": "3130",
                                    "id": 128,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4757:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "src": "4749:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 130,
                                "nodeType": "ExpressionStatement",
                                "src": "4749:10:0"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 121,
                              "name": "temp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "4702:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4710:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4702:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 132,
                          "nodeType": "WhileStatement",
                          "src": "4695:75:0"
                        },
                        {
                          "assignments": [
                            134
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 134,
                              "mutability": "mutable",
                              "name": "buffer",
                              "nodeType": "VariableDeclaration",
                              "scope": 177,
                              "src": "4779:19:0",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes"
                              },
                              "typeName": {
                                "id": 133,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4779:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 139,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 137,
                                "name": "digits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 119,
                                "src": "4811:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "4801:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 135,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4805:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4801:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4779:39:0"
                        },
                        {
                          "body": {
                            "id": 170,
                            "nodeType": "Block",
                            "src": "4847:131:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 143,
                                    "name": "digits",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 119,
                                    "src": "4861:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "-=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 144,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4871:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "4861:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 146,
                                "nodeType": "ExpressionStatement",
                                "src": "4861:11:0"
                              },
                              {
                                "expression": {
                                  "id": 164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 147,
                                      "name": "buffer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 134,
                                      "src": "4886:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 149,
                                    "indexExpression": {
                                      "id": 148,
                                      "name": "digits",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 119,
                                      "src": "4893:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "4886:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 161,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3438",
                                              "id": 154,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "4916:2:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_48_by_1",
                                                "typeString": "int_const 48"
                                              },
                                              "value": "48"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 159,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 157,
                                                    "name": "value",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 102,
                                                    "src": "4929:5:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "%",
                                                  "rightExpression": {
                                                    "hexValue": "3130",
                                                    "id": 158,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4937:2:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_10_by_1",
                                                      "typeString": "int_const 10"
                                                    },
                                                    "value": "10"
                                                  },
                                                  "src": "4929:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "id": 156,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4921:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 155,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4921:7:0",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 160,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4921:19:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4916:24:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 153,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4910:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 152,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4910:5:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 162,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4910:31:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 151,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4903:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes1_$",
                                        "typeString": "type(bytes1)"
                                      },
                                      "typeName": {
                                        "id": 150,
                                        "name": "bytes1",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4903:6:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4903:39:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  },
                                  "src": "4886:56:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "id": 165,
                                "nodeType": "ExpressionStatement",
                                "src": "4886:56:0"
                              },
                              {
                                "expression": {
                                  "id": 168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 166,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102,
                                    "src": "4956:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "/=",
                                  "rightHandSide": {
                                    "hexValue": "3130",
                                    "id": 167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4965:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "src": "4956:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 169,
                                "nodeType": "ExpressionStatement",
                                "src": "4956:11:0"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 140,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "4835:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4844:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4835:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 171,
                          "nodeType": "WhileStatement",
                          "src": "4828:150:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 174,
                                "name": "buffer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 134,
                                "src": "5001:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4994:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 172,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "4994:6:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4994:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "functionReturnParameters": 106,
                          "id": 176,
                          "nodeType": "Return",
                          "src": "4987:21:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 100,
                      "nodeType": "StructuredDocumentation",
                      "src": "4217:90:0",
                      "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
                    },
                    "id": 178,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "toString",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 103,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 102,
                          "mutability": "mutable",
                          "name": "value",
                          "nodeType": "VariableDeclaration",
                          "scope": 178,
                          "src": "4330:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 101,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4330:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "4329:15:0"
                    },
                    "returnParameters": {
                      "id": 106,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 105,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 178,
                          "src": "4368:13:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                          },
                          "typeName": {
                            "id": 104,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "4368:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "4367:15:0"
                    },
                    "scope": 296,
                    "src": "4312:703:0",
                    "stateMutability": "pure",
                    "virtual": false,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 218,
                      "nodeType": "Block",
                      "src": "5194:255:0",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 186,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "5208:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5217:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5208:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 192,
                          "nodeType": "IfStatement",
                          "src": "5204:54:0",
                          "trueBody": {
                            "id": 191,
                            "nodeType": "Block",
                            "src": "5220:38:0",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "30783030",
                                  "id": 189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5241:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
                                    "typeString": "literal_string \"0x00\""
                                  },
                                  "value": "0x00"
                                },
                                "functionReturnParameters": 185,
                                "id": 190,
                                "nodeType": "Return",
                                "src": "5234:13:0"
                              }
                            ]
                          }
                        },
                        {
                          "assignments": [
                            194
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 194,
                              "mutability": "mutable",
                              "name": "temp",
                              "nodeType": "VariableDeclaration",
                              "scope": 218,
                              "src": "5267:12:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 193,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5267:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 196,
                          "initialValue": {
                            "id": 195,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "5282:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5267:20:0"
                        },
                        {
                          "assignments": [
                            198
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 198,
                              "mutability": "mutable",
                              "name": "length",
                              "nodeType": "VariableDeclaration",
                              "scope": 218,
                              "src": "5297:14:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 197,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5297:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 200,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5314:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5297:18:0"
                        },
                        {
                          "body": {
                            "id": 211,
                            "nodeType": "Block",
                            "src": "5343:57:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "5357:8:0",
                                  "subExpression": {
                                    "id": 204,
                                    "name": "length",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "5357:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 206,
                                "nodeType": "ExpressionStatement",
                                "src": "5357:8:0"
                              },
                              {
                                "expression": {
                                  "id": 209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 207,
                                    "name": "temp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 194,
                                    "src": "5379:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": ">>=",
                                  "rightHandSide": {
                                    "hexValue": "38",
                                    "id": 208,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5388:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_8_by_1",
                                      "typeString": "int_const 8"
                                    },
                                    "value": "8"
                                  },
                                  "src": "5379:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 210,
                                "nodeType": "ExpressionStatement",
                                "src": "5379:10:0"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 201,
                              "name": "temp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5332:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5340:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5332:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 212,
                          "nodeType": "WhileStatement",
                          "src": "5325:75:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 214,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 181,
                                "src": "5428:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 215,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "5435:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 213,
                              "name": "toHexString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                219,
                                295
                              ],
                              "referencedDeclaration": 295,
                              "src": "5416:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256,uint256) pure returns (string memory)"
                              }
                            },
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5416:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "functionReturnParameters": 185,
                          "id": 217,
                          "nodeType": "Return",
                          "src": "5409:33:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 179,
                      "nodeType": "StructuredDocumentation",
                      "src": "5021:94:0",
                      "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
                    },
                    "id": 219,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "toHexString",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 182,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 181,
                          "mutability": "mutable",
                          "name": "value",
                          "nodeType": "VariableDeclaration",
                          "scope": 219,
                          "src": "5141:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 180,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5141:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "5140:15:0"
                    },
                    "returnParameters": {
                      "id": 185,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 184,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 219,
                          "src": "5179:13:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                          },
                          "typeName": {
                            "id": 183,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "5179:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "5178:15:0"
                    },
                    "scope": 296,
                    "src": "5120:329:0",
                    "stateMutability": "pure",
                    "virtual": false,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 294,
                      "nodeType": "Block",
                      "src": "5662:351:0",
                      "statements": [
                        {
                          "assignments": [
                            230
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 230,
                              "mutability": "mutable",
                              "name": "buffer",
                              "nodeType": "VariableDeclaration",
                              "scope": 294,
                              "src": "5672:19:0",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes"
                              },
                              "typeName": {
                                "id": 229,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5672:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 239,
                          "initialValue": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5704:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 234,
                                    "name": "length",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 224,
                                    "src": "5708:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5704:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5717:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "5704:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5694:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 231,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5698:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5694:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5672:47:0"
                        },
                        {
                          "expression": {
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 240,
                                "name": "buffer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "5729:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 242,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5736:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "5729:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5741:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                "typeString": "literal_string \"0\""
                              },
                              "value": "0"
                            },
                            "src": "5729:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "id": 245,
                          "nodeType": "ExpressionStatement",
                          "src": "5729:15:0"
                        },
                        {
                          "expression": {
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 246,
                                "name": "buffer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "5754:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 248,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5761:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "5754:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "78",
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5766:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                                "typeString": "literal_string \"x\""
                              },
                              "value": "x"
                            },
                            "src": "5754:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "id": 251,
                          "nodeType": "ExpressionStatement",
                          "src": "5754:15:0"
                        },
                        {
                          "body": {
                            "id": 280,
                            "nodeType": "Block",
                            "src": "5824:87:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 266,
                                      "name": "buffer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 230,
                                      "src": "5838:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 268,
                                    "indexExpression": {
                                      "id": 267,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 253,
                                      "src": "5845:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "5838:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "baseExpression": {
                                      "id": 269,
                                      "name": "_HEX_SYMBOLS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 99,
                                      "src": "5850:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes16",
                                        "typeString": "bytes16"
                                      }
                                    },
                                    "id": 273,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 270,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 222,
                                        "src": "5863:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&",
                                      "rightExpression": {
                                        "hexValue": "307866",
                                        "id": 271,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5871:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_15_by_1",
                                          "typeString": "int_const 15"
                                        },
                                        "value": "0xf"
                                      },
                                      "src": "5863:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5850:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  },
                                  "src": "5838:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "id": 275,
                                "nodeType": "ExpressionStatement",
                                "src": "5838:37:0"
                              },
                              {
                                "expression": {
                                  "id": 278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 276,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "5889:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": ">>=",
                                  "rightHandSide": {
                                    "hexValue": "34",
                                    "id": 277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5899:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  },
                                  "src": "5889:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 279,
                                "nodeType": "ExpressionStatement",
                                "src": "5889:11:0"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 260,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 253,
                              "src": "5812:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5816:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5812:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 281,
                          "initializationExpression": {
                            "assignments": [
                              253
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 253,
                                "mutability": "mutable",
                                "name": "i",
                                "nodeType": "VariableDeclaration",
                                "scope": 281,
                                "src": "5784:9:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 252,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5784:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 259,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 254,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5796:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 255,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 224,
                                  "src": "5800:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5796:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5809:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5796:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "5784:26:0"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "--",
                              "prefix": true,
                              "src": "5819:3:0",
                              "subExpression": {
                                "id": 263,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "5821:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 265,
                            "nodeType": "ExpressionStatement",
                            "src": "5819:3:0"
                          },
                          "nodeType": "ForStatement",
                          "src": "5779:132:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 283,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 222,
                                  "src": "5928:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5937:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5928:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5940:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                                  "typeString": "literal_string \"Strings: hex length insufficient\""
                                },
                                "value": "Strings: hex length insufficient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                                  "typeString": "literal_string \"Strings: hex length insufficient\""
                                }
                              ],
                              "id": 282,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "5920:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5920:55:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 288,
                          "nodeType": "ExpressionStatement",
                          "src": "5920:55:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 291,
                                "name": "buffer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "5999:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5992:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 289,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "5992:6:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5992:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "functionReturnParameters": 228,
                          "id": 293,
                          "nodeType": "Return",
                          "src": "5985:21:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 220,
                      "nodeType": "StructuredDocumentation",
                      "src": "5455:112:0",
                      "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
                    },
                    "id": 295,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "toHexString",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 225,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 222,
                          "mutability": "mutable",
                          "name": "value",
                          "nodeType": "VariableDeclaration",
                          "scope": 295,
                          "src": "5593:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 221,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5593:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 224,
                          "mutability": "mutable",
                          "name": "length",
                          "nodeType": "VariableDeclaration",
                          "scope": 295,
                          "src": "5608:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 223,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5608:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "5592:31:0"
                    },
                    "returnParameters": {
                      "id": 228,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 227,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 295,
                          "src": "5647:13:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                          },
                          "typeName": {
                            "id": 226,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "5647:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "5646:15:0"
                    },
                    "scope": 296,
                    "src": "5572:441:0",
                    "stateMutability": "pure",
                    "virtual": false,
                    "visibility": "internal"
                  }
                ],
                "scope": 1531,
                "src": "4130:1885:0"
              },
              {
                "id": 297,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "6159:23:0"
              },
              {
                "abstract": false,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "interface",
                "documentation": {
                  "id": 298,
                  "nodeType": "StructuredDocumentation",
                  "src": "6184:279:0",
                  "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
                },
                "fullyImplemented": false,
                "id": 307,
                "linearizedBaseContracts": [
                  307
                ],
                "name": "IERC165",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "documentation": {
                      "id": 299,
                      "nodeType": "StructuredDocumentation",
                      "src": "6488:340:0",
                      "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                    },
                    "functionSelector": "01ffc9a7",
                    "id": 306,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "supportsInterface",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 302,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 301,
                          "mutability": "mutable",
                          "name": "interfaceId",
                          "nodeType": "VariableDeclaration",
                          "scope": 306,
                          "src": "6860:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "typeName": {
                            "id": 300,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "6860:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "6859:20:0"
                    },
                    "returnParameters": {
                      "id": 305,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 304,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 306,
                          "src": "6903:4:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 303,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6903:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "6902:6:0"
                    },
                    "scope": 307,
                    "src": "6833:76:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "external"
                  }
                ],
                "scope": 1531,
                "src": "6464:447:0"
              },
              {
                "id": 308,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "7053:23:0"
              },
              {
                "abstract": true,
                "baseContracts": [
                  {
                    "baseName": {
                      "id": 310,
                      "name": "IERC165",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 307,
                      "src": "7683:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC165_$307",
                        "typeString": "contract IERC165"
                      }
                    },
                    "id": 311,
                    "nodeType": "InheritanceSpecifier",
                    "src": "7683:7:0"
                  }
                ],
                "contractDependencies": [
                  307
                ],
                "contractKind": "contract",
                "documentation": {
                  "id": 309,
                  "nodeType": "StructuredDocumentation",
                  "src": "7078:576:0",
                  "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
                },
                "fullyImplemented": true,
                "id": 329,
                "linearizedBaseContracts": [
                  329,
                  307
                ],
                "name": "ERC165",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "baseFunctions": [
                      306
                    ],
                    "body": {
                      "id": 327,
                      "nodeType": "Block",
                      "src": "7849:64:0",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 320,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "7866:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 322,
                                    "name": "IERC165",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 307,
                                    "src": "7886:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC165_$307_$",
                                      "typeString": "type(contract IERC165)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IERC165_$307_$",
                                      "typeString": "type(contract IERC165)"
                                    }
                                  ],
                                  "id": 321,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "7881:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7881:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$307",
                                  "typeString": "type(contract IERC165)"
                                }
                              },
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "7881:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "7866:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 319,
                          "id": 326,
                          "nodeType": "Return",
                          "src": "7859:47:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 312,
                      "nodeType": "StructuredDocumentation",
                      "src": "7697:56:0",
                      "text": " @dev See {IERC165-supportsInterface}."
                    },
                    "functionSelector": "01ffc9a7",
                    "id": 328,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "supportsInterface",
                    "nodeType": "FunctionDefinition",
                    "overrides": {
                      "id": 316,
                      "nodeType": "OverrideSpecifier",
                      "overrides": [],
                      "src": "7825:8:0"
                    },
                    "parameters": {
                      "id": 315,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 314,
                          "mutability": "mutable",
                          "name": "interfaceId",
                          "nodeType": "VariableDeclaration",
                          "scope": 328,
                          "src": "7785:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "typeName": {
                            "id": 313,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "7785:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "7784:20:0"
                    },
                    "returnParameters": {
                      "id": 319,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 318,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 328,
                          "src": "7843:4:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 317,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "7843:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "7842:6:0"
                    },
                    "scope": 329,
                    "src": "7758:155:0",
                    "stateMutability": "view",
                    "virtual": true,
                    "visibility": "public"
                  }
                ],
                "scope": 1531,
                "src": "7655:260:0"
              },
              {
                "id": 330,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "8045:23:0"
              },
              {
                "abstract": true,
                "baseContracts": [
                  {
                    "baseName": {
                      "id": 332,
                      "name": "Context",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 94,
                      "src": "9643:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Context_$94",
                        "typeString": "contract Context"
                      }
                    },
                    "id": 333,
                    "nodeType": "InheritanceSpecifier",
                    "src": "9643:7:0"
                  },
                  {
                    "baseName": {
                      "id": 334,
                      "name": "IAccessControl",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 73,
                      "src": "9652:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccessControl_$73",
                        "typeString": "contract IAccessControl"
                      }
                    },
                    "id": 335,
                    "nodeType": "InheritanceSpecifier",
                    "src": "9652:14:0"
                  },
                  {
                    "baseName": {
                      "id": 336,
                      "name": "ERC165",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 329,
                      "src": "9668:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC165_$329",
                        "typeString": "contract ERC165"
                      }
                    },
                    "id": 337,
                    "nodeType": "InheritanceSpecifier",
                    "src": "9668:6:0"
                  }
                ],
                "contractDependencies": [
                  73,
                  94,
                  307,
                  329
                ],
                "contractKind": "contract",
                "documentation": {
                  "id": 331,
                  "nodeType": "StructuredDocumentation",
                  "src": "8073:1534:0",
                  "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
                },
                "fullyImplemented": true,
                "id": 632,
                "linearizedBaseContracts": [
                  632,
                  329,
                  307,
                  73,
                  94
                ],
                "name": "AccessControl",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "canonicalName": "AccessControl.RoleData",
                    "id": 344,
                    "members": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "members",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "9707:32:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "typeName": {
                          "id": 340,
                          "keyType": {
                            "id": 338,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9715:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "9707:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          },
                          "valueType": {
                            "id": 339,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "9726:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "9749:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9749:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "name": "RoleData",
                    "nodeType": "StructDefinition",
                    "scope": 632,
                    "src": "9681:92:0",
                    "visibility": "public"
                  },
                  {
                    "constant": false,
                    "id": 348,
                    "mutability": "mutable",
                    "name": "_roles",
                    "nodeType": "VariableDeclaration",
                    "scope": 632,
                    "src": "9779:43:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$344_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "typeName": {
                      "id": 347,
                      "keyType": {
                        "id": 345,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9787:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "9779:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$344_storage_$",
                        "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                      },
                      "valueType": {
                        "id": 346,
                        "name": "RoleData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 344,
                        "src": "9798:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RoleData_$344_storage_ptr",
                          "typeString": "struct AccessControl.RoleData"
                        }
                      }
                    },
                    "visibility": "private"
                  },
                  {
                    "constant": true,
                    "functionSelector": "a217fddf",
                    "id": 351,
                    "mutability": "constant",
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "VariableDeclaration",
                    "scope": 632,
                    "src": "9829:49:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 349,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "9829:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "value": {
                      "hexValue": "30783030",
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9874:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0x00"
                    },
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 363,
                      "nodeType": "Block",
                      "src": "10297:58:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 357,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 354,
                                "src": "10318:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 358,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84,
                                  "src": "10324:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10324:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 356,
                              "name": "_checkRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "10307:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address) view"
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10307:30:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 361,
                          "nodeType": "ExpressionStatement",
                          "src": "10307:30:0"
                        },
                        {
                          "id": 362,
                          "nodeType": "PlaceholderStatement",
                          "src": "10347:1:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 352,
                      "nodeType": "StructuredDocumentation",
                      "src": "9885:375:0",
                      "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
                    },
                    "id": 364,
                    "name": "onlyRole",
                    "nodeType": "ModifierDefinition",
                    "parameters": {
                      "id": 355,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 354,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 364,
                          "src": "10283:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 353,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10283:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "10282:14:0"
                    },
                    "src": "10265:90:0",
                    "virtual": false,
                    "visibility": "internal"
                  },
                  {
                    "baseFunctions": [
                      328
                    ],
                    "body": {
                      "id": 385,
                      "nodeType": "Block",
                      "src": "10513:111:0",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 373,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 367,
                                "src": "10530:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 375,
                                      "name": "IAccessControl",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 73,
                                      "src": "10550:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IAccessControl_$73_$",
                                        "typeString": "type(contract IAccessControl)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IAccessControl_$73_$",
                                        "typeString": "type(contract IAccessControl)"
                                      }
                                    ],
                                    "id": 374,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "10545:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 376,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10545:20:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$73",
                                    "typeString": "type(contract IAccessControl)"
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "10545:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "10530:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 381,
                                  "name": "interfaceId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 367,
                                  "src": "10605:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 379,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -25,
                                  "src": "10581:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_super$_AccessControl_$632",
                                    "typeString": "contract super AccessControl"
                                  }
                                },
                                "id": 380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "supportsInterface",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 328,
                                "src": "10581:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (bytes4) view returns (bool)"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10581:36:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10530:87:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 372,
                          "id": 384,
                          "nodeType": "Return",
                          "src": "10523:94:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 365,
                      "nodeType": "StructuredDocumentation",
                      "src": "10361:56:0",
                      "text": " @dev See {IERC165-supportsInterface}."
                    },
                    "functionSelector": "01ffc9a7",
                    "id": 386,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "supportsInterface",
                    "nodeType": "FunctionDefinition",
                    "overrides": {
                      "id": 369,
                      "nodeType": "OverrideSpecifier",
                      "overrides": [],
                      "src": "10489:8:0"
                    },
                    "parameters": {
                      "id": 368,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 367,
                          "mutability": "mutable",
                          "name": "interfaceId",
                          "nodeType": "VariableDeclaration",
                          "scope": 386,
                          "src": "10449:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "typeName": {
                            "id": 366,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "10449:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "10448:20:0"
                    },
                    "returnParameters": {
                      "id": 372,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 371,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 386,
                          "src": "10507:4:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 370,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "10507:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "10506:6:0"
                    },
                    "scope": 632,
                    "src": "10422:202:0",
                    "stateMutability": "view",
                    "virtual": true,
                    "visibility": "public"
                  },
                  {
                    "baseFunctions": [
                      40
                    ],
                    "body": {
                      "id": 404,
                      "nodeType": "Block",
                      "src": "10795:53:0",
                      "statements": [
                        {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 397,
                                  "name": "_roles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "10812:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$344_storage_$",
                                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                  }
                                },
                                "id": 399,
                                "indexExpression": {
                                  "id": 398,
                                  "name": "role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 389,
                                  "src": "10819:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10812:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RoleData_$344_storage",
                                  "typeString": "struct AccessControl.RoleData storage ref"
                                }
                              },
                              "id": 400,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "members",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 341,
                              "src": "10812:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 402,
                            "indexExpression": {
                              "id": 401,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "10833:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10812:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 396,
                          "id": 403,
                          "nodeType": "Return",
                          "src": "10805:36:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 387,
                      "nodeType": "StructuredDocumentation",
                      "src": "10630:76:0",
                      "text": " @dev Returns `true` if `account` has been granted `role`."
                    },
                    "functionSelector": "91d14854",
                    "id": 405,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "hasRole",
                    "nodeType": "FunctionDefinition",
                    "overrides": {
                      "id": 393,
                      "nodeType": "OverrideSpecifier",
                      "overrides": [],
                      "src": "10771:8:0"
                    },
                    "parameters": {
                      "id": 392,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 389,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 405,
                          "src": "10728:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 388,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10728:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 391,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 405,
                          "src": "10742:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 390,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10742:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "10727:31:0"
                    },
                    "returnParameters": {
                      "id": 396,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 395,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 405,
                          "src": "10789:4:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 394,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "10789:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "10788:6:0"
                    },
                    "scope": 632,
                    "src": "10711:137:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 447,
                      "nodeType": "Block",
                      "src": "11194:419:0",
                      "statements": [
                        {
                          "condition": {
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "11208:23:0",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 414,
                                  "name": "role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 408,
                                  "src": "11217:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 415,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 410,
                                  "src": "11223:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 413,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 405,
                                "src": "11209:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11209:22:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 446,
                          "nodeType": "IfStatement",
                          "src": "11204:403:0",
                          "trueBody": {
                            "id": 445,
                            "nodeType": "Block",
                            "src": "11233:374:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                                              "id": 423,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11341:25:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
                                                "typeString": "literal_string \"AccessControl: account \""
                                              },
                                              "value": "AccessControl: account "
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 428,
                                                      "name": "account",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 410,
                                                      "src": "11420:7:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 427,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "11412:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_uint160_$",
                                                      "typeString": "type(uint160)"
                                                    },
                                                    "typeName": {
                                                      "id": 426,
                                                      "name": "uint160",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "11412:7:0",
                                                      "typeDescriptions": {}
                                                    }
                                                  },
                                                  "id": 429,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "11412:16:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                  }
                                                },
                                                {
                                                  "hexValue": "3230",
                                                  "id": 430,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "11430:2:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_20_by_1",
                                                    "typeString": "int_const 20"
                                                  },
                                                  "value": "20"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_rational_20_by_1",
                                                    "typeString": "int_const 20"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 424,
                                                  "name": "Strings",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 296,
                                                  "src": "11392:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_Strings_$296_$",
                                                    "typeString": "type(library Strings)"
                                                  }
                                                },
                                                "id": 425,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "toHexString",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 295,
                                                "src": "11392:19:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                  "typeString": "function (uint256,uint256) pure returns (string memory)"
                                                }
                                              },
                                              "id": 431,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11392:41:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            {
                                              "hexValue": "206973206d697373696e6720726f6c6520",
                                              "id": 432,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11459:19:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
                                                "typeString": "literal_string \" is missing role \""
                                              },
                                              "value": " is missing role "
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 437,
                                                      "name": "role",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 408,
                                                      "src": "11532:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                      }
                                                    ],
                                                    "id": 436,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "11524:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_uint256_$",
                                                      "typeString": "type(uint256)"
                                                    },
                                                    "typeName": {
                                                      "id": 435,
                                                      "name": "uint256",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "11524:7:0",
                                                      "typeDescriptions": {}
                                                    }
                                                  },
                                                  "id": 438,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "11524:13:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                {
                                                  "hexValue": "3332",
                                                  "id": 439,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "11539:2:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_32_by_1",
                                                    "typeString": "int_const 32"
                                                  },
                                                  "value": "32"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_rational_32_by_1",
                                                    "typeString": "int_const 32"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 433,
                                                  "name": "Strings",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 296,
                                                  "src": "11504:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_Strings_$296_$",
                                                    "typeString": "type(library Strings)"
                                                  }
                                                },
                                                "id": 434,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "toHexString",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 295,
                                                "src": "11504:19:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                  "typeString": "function (uint256,uint256) pure returns (string memory)"
                                                }
                                              },
                                              "id": 440,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11504:38:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
                                                "typeString": "literal_string \"AccessControl: account \""
                                              },
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
                                                "typeString": "literal_string \" is missing role \""
                                              },
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            ],
                                            "expression": {
                                              "id": 421,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "11299:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 422,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "11299:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 441,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11299:265:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 420,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11271:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 419,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11271:6:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 442,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11271:311:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 418,
                                    "name": "revert",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -19,
                                      -19
                                    ],
                                    "referencedDeclaration": -19,
                                    "src": "11247:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (string memory) pure"
                                    }
                                  },
                                  "id": 443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11247:349:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 444,
                                "nodeType": "ExpressionStatement",
                                "src": "11247:349:0"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "documentation": {
                      "id": 406,
                      "nodeType": "StructuredDocumentation",
                      "src": "10854:270:0",
                      "text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
                    },
                    "id": 448,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "_checkRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 411,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 408,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 448,
                          "src": "11149:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 407,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11149:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 410,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 448,
                          "src": "11163:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 409,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11163:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "11148:31:0"
                    },
                    "returnParameters": {
                      "id": 412,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "11194:0:0"
                    },
                    "scope": 632,
                    "src": "11129:484:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "internal"
                  },
                  {
                    "baseFunctions": [
                      48
                    ],
                    "body": {
                      "id": 462,
                      "nodeType": "Block",
                      "src": "11869:46:0",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 457,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "11886:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$344_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 459,
                              "indexExpression": {
                                "id": 458,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 451,
                                "src": "11893:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11886:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$344_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 460,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 343,
                            "src": "11886:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "functionReturnParameters": 456,
                          "id": 461,
                          "nodeType": "Return",
                          "src": "11879:29:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 449,
                      "nodeType": "StructuredDocumentation",
                      "src": "11619:170:0",
                      "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                    },
                    "functionSelector": "248a9ca3",
                    "id": 463,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "getRoleAdmin",
                    "nodeType": "FunctionDefinition",
                    "overrides": {
                      "id": 453,
                      "nodeType": "OverrideSpecifier",
                      "overrides": [],
                      "src": "11842:8:0"
                    },
                    "parameters": {
                      "id": 452,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 451,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 463,
                          "src": "11816:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 450,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11816:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "11815:14:0"
                    },
                    "returnParameters": {
                      "id": 456,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 455,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 463,
                          "src": "11860:7:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 454,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11860:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "11859:9:0"
                    },
                    "scope": 632,
                    "src": "11794:121:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "public"
                  },
                  {
                    "baseFunctions": [
                      56
                    ],
                    "body": {
                      "id": 482,
                      "nodeType": "Block",
                      "src": "12268:42:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 478,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 466,
                                "src": "12289:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 479,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 468,
                                "src": "12295:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 477,
                              "name": "_grantRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "12278:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address)"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12278:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 481,
                          "nodeType": "ExpressionStatement",
                          "src": "12278:25:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 464,
                      "nodeType": "StructuredDocumentation",
                      "src": "11921:239:0",
                      "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                    },
                    "functionSelector": "2f2ff15d",
                    "id": 483,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 473,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 466,
                                "src": "12261:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 472,
                              "name": "getRoleAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "12248:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32) view returns (bytes32)"
                              }
                            },
                            "id": 474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12248:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "id": 475,
                        "modifierName": {
                          "id": 471,
                          "name": "onlyRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "12239:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$_t_bytes32_$",
                            "typeString": "modifier (bytes32)"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "12239:28:0"
                      }
                    ],
                    "name": "grantRole",
                    "nodeType": "FunctionDefinition",
                    "overrides": {
                      "id": 470,
                      "nodeType": "OverrideSpecifier",
                      "overrides": [],
                      "src": "12230:8:0"
                    },
                    "parameters": {
                      "id": 469,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 466,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 483,
                          "src": "12184:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 465,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12184:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 468,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 483,
                          "src": "12198:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 467,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12198:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "12183:31:0"
                    },
                    "returnParameters": {
                      "id": 476,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "12268:0:0"
                    },
                    "scope": 632,
                    "src": "12165:145:0",
                    "stateMutability": "nonpayable",
                    "virtual": true,
                    "visibility": "public"
                  },
                  {
                    "baseFunctions": [
                      64
                    ],
                    "body": {
                      "id": 502,
                      "nodeType": "Block",
                      "src": "12648:43:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 498,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 486,
                                "src": "12670:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 499,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 488,
                                "src": "12676:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 497,
                              "name": "_revokeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "12658:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address)"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12658:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 501,
                          "nodeType": "ExpressionStatement",
                          "src": "12658:26:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 484,
                      "nodeType": "StructuredDocumentation",
                      "src": "12316:223:0",
                      "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                    },
                    "functionSelector": "d547741f",
                    "id": 503,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 493,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 486,
                                "src": "12641:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 492,
                              "name": "getRoleAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "12628:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32) view returns (bytes32)"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12628:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "id": 495,
                        "modifierName": {
                          "id": 491,
                          "name": "onlyRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "12619:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$_t_bytes32_$",
                            "typeString": "modifier (bytes32)"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "12619:28:0"
                      }
                    ],
                    "name": "revokeRole",
                    "nodeType": "FunctionDefinition",
                    "overrides": {
                      "id": 490,
                      "nodeType": "OverrideSpecifier",
                      "overrides": [],
                      "src": "12610:8:0"
                    },
                    "parameters": {
                      "id": 489,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 486,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 503,
                          "src": "12564:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 485,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12564:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 488,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 503,
                          "src": "12578:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 487,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12578:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "12563:31:0"
                    },
                    "returnParameters": {
                      "id": 496,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "12648:0:0"
                    },
                    "scope": 632,
                    "src": "12544:147:0",
                    "stateMutability": "nonpayable",
                    "virtual": true,
                    "visibility": "public"
                  },
                  {
                    "baseFunctions": [
                      72
                    ],
                    "body": {
                      "id": 525,
                      "nodeType": "Block",
                      "src": "13259:137:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 513,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 508,
                                  "src": "13277:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 514,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84,
                                    "src": "13288:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13288:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13277:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13302:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
                                  "typeString": "literal_string \"AccessControl: can only renounce roles for self\""
                                },
                                "value": "AccessControl: can only renounce roles for self"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
                                  "typeString": "literal_string \"AccessControl: can only renounce roles for self\""
                                }
                              ],
                              "id": 512,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "13269:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13269:83:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 519,
                          "nodeType": "ExpressionStatement",
                          "src": "13269:83:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 521,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 506,
                                "src": "13375:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 522,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 508,
                                "src": "13381:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 520,
                              "name": "_revokeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "13363:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address)"
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13363:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 524,
                          "nodeType": "ExpressionStatement",
                          "src": "13363:26:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 504,
                      "nodeType": "StructuredDocumentation",
                      "src": "12697:480:0",
                      "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
                    },
                    "functionSelector": "36568abe",
                    "id": 526,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "renounceRole",
                    "nodeType": "FunctionDefinition",
                    "overrides": {
                      "id": 510,
                      "nodeType": "OverrideSpecifier",
                      "overrides": [],
                      "src": "13250:8:0"
                    },
                    "parameters": {
                      "id": 509,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 506,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 526,
                          "src": "13204:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 505,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "13204:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 508,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 526,
                          "src": "13218:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 507,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13218:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "13203:31:0"
                    },
                    "returnParameters": {
                      "id": 511,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "13259:0:0"
                    },
                    "scope": 632,
                    "src": "13182:214:0",
                    "stateMutability": "nonpayable",
                    "virtual": true,
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 539,
                      "nodeType": "Block",
                      "src": "14103:42:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 535,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 529,
                                "src": "14124:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 536,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 531,
                                "src": "14130:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 534,
                              "name": "_grantRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "14113:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address)"
                              }
                            },
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14113:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 538,
                          "nodeType": "ExpressionStatement",
                          "src": "14113:25:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 527,
                      "nodeType": "StructuredDocumentation",
                      "src": "13402:628:0",
                      "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
                    },
                    "id": 540,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "_setupRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 532,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 529,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 540,
                          "src": "14055:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 528,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "14055:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 531,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 540,
                          "src": "14069:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14069:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "14054:31:0"
                    },
                    "returnParameters": {
                      "id": 533,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "14103:0:0"
                    },
                    "scope": 632,
                    "src": "14035:110:0",
                    "stateMutability": "nonpayable",
                    "virtual": true,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 567,
                      "nodeType": "Block",
                      "src": "14343:174:0",
                      "statements": [
                        {
                          "assignments": [
                            549
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 549,
                              "mutability": "mutable",
                              "name": "previousAdminRole",
                              "nodeType": "VariableDeclaration",
                              "scope": 567,
                              "src": "14353:25:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "typeName": {
                                "id": 548,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "14353:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 553,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 551,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 543,
                                "src": "14394:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 550,
                              "name": "getRoleAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "14381:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32) view returns (bytes32)"
                              }
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14381:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14353:46:0"
                        },
                        {
                          "expression": {
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 554,
                                  "name": "_roles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "14409:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$344_storage_$",
                                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                  }
                                },
                                "id": 556,
                                "indexExpression": {
                                  "id": 555,
                                  "name": "role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 543,
                                  "src": "14416:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14409:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RoleData_$344_storage",
                                  "typeString": "struct AccessControl.RoleData storage ref"
                                }
                              },
                              "id": 557,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "adminRole",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 343,
                              "src": "14409:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 558,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "14434:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "14409:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 560,
                          "nodeType": "ExpressionStatement",
                          "src": "14409:34:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 562,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 543,
                                "src": "14475:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 563,
                                "name": "previousAdminRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 549,
                                "src": "14481:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 564,
                                "name": "adminRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 545,
                                "src": "14500:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 561,
                              "name": "RoleAdminChanged",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "14458:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes32,bytes32,bytes32)"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14458:52:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 566,
                          "nodeType": "EmitStatement",
                          "src": "14453:57:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 541,
                      "nodeType": "StructuredDocumentation",
                      "src": "14151:114:0",
                      "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                    },
                    "id": 568,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "_setRoleAdmin",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 546,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 543,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 568,
                          "src": "14293:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 542,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "14293:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 545,
                          "mutability": "mutable",
                          "name": "adminRole",
                          "nodeType": "VariableDeclaration",
                          "scope": 568,
                          "src": "14307:17:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 544,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "14307:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "14292:33:0"
                    },
                    "returnParameters": {
                      "id": 547,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "14343:0:0"
                    },
                    "scope": 632,
                    "src": "14270:247:0",
                    "stateMutability": "nonpayable",
                    "virtual": true,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 599,
                      "nodeType": "Block",
                      "src": "14707:165:0",
                      "statements": [
                        {
                          "condition": {
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14721:23:0",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 577,
                                  "name": "role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 571,
                                  "src": "14730:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 578,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 573,
                                  "src": "14736:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 576,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 405,
                                "src": "14722:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14722:22:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 598,
                          "nodeType": "IfStatement",
                          "src": "14717:149:0",
                          "trueBody": {
                            "id": 597,
                            "nodeType": "Block",
                            "src": "14746:120:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 581,
                                          "name": "_roles",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 348,
                                          "src": "14760:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$344_storage_$",
                                            "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                          }
                                        },
                                        "id": 583,
                                        "indexExpression": {
                                          "id": 582,
                                          "name": "role",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 571,
                                          "src": "14767:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14760:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RoleData_$344_storage",
                                          "typeString": "struct AccessControl.RoleData storage ref"
                                        }
                                      },
                                      "id": 584,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "members",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 341,
                                      "src": "14760:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 586,
                                    "indexExpression": {
                                      "id": 585,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 573,
                                      "src": "14781:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "14760:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "74727565",
                                    "id": 587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14792:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  "src": "14760:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 589,
                                "nodeType": "ExpressionStatement",
                                "src": "14760:36:0"
                              },
                              {
                                "eventCall": {
                                  "arguments": [
                                    {
                                      "id": 591,
                                      "name": "role",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 571,
                                      "src": "14827:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 592,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 573,
                                      "src": "14833:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 593,
                                        "name": "_msgSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 84,
                                        "src": "14842:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 594,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14842:12:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 590,
                                    "name": "RoleGranted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21,
                                    "src": "14815:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                      "typeString": "function (bytes32,address,address)"
                                    }
                                  },
                                  "id": 595,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14815:40:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 596,
                                "nodeType": "EmitStatement",
                                "src": "14810:45:0"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "documentation": {
                      "id": 569,
                      "nodeType": "StructuredDocumentation",
                      "src": "14523:111:0",
                      "text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
                    },
                    "id": 600,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "_grantRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 574,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 571,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 600,
                          "src": "14659:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 570,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "14659:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 573,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 600,
                          "src": "14673:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 572,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14673:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "14658:31:0"
                    },
                    "returnParameters": {
                      "id": 575,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "14707:0:0"
                    },
                    "scope": 632,
                    "src": "14639:233:0",
                    "stateMutability": "nonpayable",
                    "virtual": true,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 630,
                      "nodeType": "Block",
                      "src": "15066:165:0",
                      "statements": [
                        {
                          "condition": {
                            "arguments": [
                              {
                                "id": 609,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 603,
                                "src": "15088:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 610,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 605,
                                "src": "15094:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 608,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "15080:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15080:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 629,
                          "nodeType": "IfStatement",
                          "src": "15076:149:0",
                          "trueBody": {
                            "id": 628,
                            "nodeType": "Block",
                            "src": "15104:121:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 612,
                                          "name": "_roles",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 348,
                                          "src": "15118:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$344_storage_$",
                                            "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                          }
                                        },
                                        "id": 614,
                                        "indexExpression": {
                                          "id": 613,
                                          "name": "role",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 603,
                                          "src": "15125:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15118:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RoleData_$344_storage",
                                          "typeString": "struct AccessControl.RoleData storage ref"
                                        }
                                      },
                                      "id": 615,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "members",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 341,
                                      "src": "15118:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 617,
                                    "indexExpression": {
                                      "id": 616,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 605,
                                      "src": "15139:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "15118:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "66616c7365",
                                    "id": 618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15150:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "src": "15118:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 620,
                                "nodeType": "ExpressionStatement",
                                "src": "15118:37:0"
                              },
                              {
                                "eventCall": {
                                  "arguments": [
                                    {
                                      "id": 622,
                                      "name": "role",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 603,
                                      "src": "15186:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 623,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 605,
                                      "src": "15192:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 624,
                                        "name": "_msgSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 84,
                                        "src": "15201:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 625,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15201:12:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 621,
                                    "name": "RoleRevoked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30,
                                    "src": "15174:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                      "typeString": "function (bytes32,address,address)"
                                    }
                                  },
                                  "id": 626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15174:40:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 627,
                                "nodeType": "EmitStatement",
                                "src": "15169:45:0"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "documentation": {
                      "id": 601,
                      "nodeType": "StructuredDocumentation",
                      "src": "14878:114:0",
                      "text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
                    },
                    "id": 631,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "_revokeRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 606,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 603,
                          "mutability": "mutable",
                          "name": "role",
                          "nodeType": "VariableDeclaration",
                          "scope": 631,
                          "src": "15018:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 602,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "15018:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 605,
                          "mutability": "mutable",
                          "name": "account",
                          "nodeType": "VariableDeclaration",
                          "scope": 631,
                          "src": "15032:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 604,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15032:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "15017:31:0"
                    },
                    "returnParameters": {
                      "id": 607,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "15066:0:0"
                    },
                    "scope": 632,
                    "src": "14997:234:0",
                    "stateMutability": "nonpayable",
                    "virtual": true,
                    "visibility": "internal"
                  }
                ],
                "scope": 1531,
                "src": "9608:5625:0"
              },
              {
                "id": 633,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "15371:23:0"
              },
              {
                "abstract": true,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                  "id": 634,
                  "nodeType": "StructuredDocumentation",
                  "src": "15396:750:0",
                  "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
                },
                "fullyImplemented": true,
                "id": 671,
                "linearizedBaseContracts": [
                  671
                ],
                "name": "ReentrancyGuard",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "constant": true,
                    "id": 637,
                    "mutability": "constant",
                    "name": "_NOT_ENTERED",
                    "nodeType": "VariableDeclaration",
                    "scope": 671,
                    "src": "16935:41:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 635,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16935:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": {
                      "hexValue": "31",
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16975:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "visibility": "private"
                  },
                  {
                    "constant": true,
                    "id": 640,
                    "mutability": "constant",
                    "name": "_ENTERED",
                    "nodeType": "VariableDeclaration",
                    "scope": 671,
                    "src": "16982:37:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 638,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16982:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": {
                      "hexValue": "32",
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17018:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "visibility": "private"
                  },
                  {
                    "constant": false,
                    "id": 642,
                    "mutability": "mutable",
                    "name": "_status",
                    "nodeType": "VariableDeclaration",
                    "scope": 671,
                    "src": "17026:23:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 641,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17026:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "private"
                  },
                  {
                    "body": {
                      "id": 649,
                      "nodeType": "Block",
                      "src": "17070:39:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 645,
                              "name": "_status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "17080:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 646,
                              "name": "_NOT_ENTERED",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "17090:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17080:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 648,
                          "nodeType": "ExpressionStatement",
                          "src": "17080:22:0"
                        }
                      ]
                    },
                    "id": 650,
                    "implemented": true,
                    "kind": "constructor",
                    "modifiers": [],
                    "name": "",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 643,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "17067:2:0"
                    },
                    "returnParameters": {
                      "id": 644,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "17070:0:0"
                    },
                    "scope": 671,
                    "src": "17056:53:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 669,
                      "nodeType": "Block",
                      "src": "17510:421:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 654,
                                  "name": "_status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 642,
                                  "src": "17599:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 655,
                                  "name": "_ENTERED",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 640,
                                  "src": "17610:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17599:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17620:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                  "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                                },
                                "value": "ReentrancyGuard: reentrant call"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                  "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                                }
                              ],
                              "id": 653,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "17591:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17591:63:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 659,
                          "nodeType": "ExpressionStatement",
                          "src": "17591:63:0"
                        },
                        {
                          "expression": {
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 660,
                              "name": "_status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "17729:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 661,
                              "name": "_ENTERED",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "17739:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17729:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 663,
                          "nodeType": "ExpressionStatement",
                          "src": "17729:18:0"
                        },
                        {
                          "id": 664,
                          "nodeType": "PlaceholderStatement",
                          "src": "17758:1:0"
                        },
                        {
                          "expression": {
                            "id": 667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 665,
                              "name": "_status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "17902:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 666,
                              "name": "_NOT_ENTERED",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "17912:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17902:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 668,
                          "nodeType": "ExpressionStatement",
                          "src": "17902:22:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 651,
                      "nodeType": "StructuredDocumentation",
                      "src": "17115:366:0",
                      "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                    },
                    "id": 670,
                    "name": "nonReentrant",
                    "nodeType": "ModifierDefinition",
                    "parameters": {
                      "id": 652,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "17507:2:0"
                    },
                    "src": "17486:445:0",
                    "virtual": false,
                    "visibility": "internal"
                  }
                ],
                "scope": 1531,
                "src": "16147:1786:0"
              },
              {
                "id": 672,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "17983:23:0"
              },
              {
                "abstract": false,
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "interface",
                "fullyImplemented": false,
                "id": 704,
                "linearizedBaseContracts": [
                  704
                ],
                "name": "IBribeVault",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "functionSelector": "69b99934",
                    "id": 685,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "depositBribeERC20",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 683,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 674,
                          "mutability": "mutable",
                          "name": "bribeIdentifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 685,
                          "src": "18072:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 673,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "18072:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 676,
                          "mutability": "mutable",
                          "name": "rewardIdentifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 685,
                          "src": "18105:24:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 675,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "18105:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 678,
                          "mutability": "mutable",
                          "name": "token",
                          "nodeType": "VariableDeclaration",
                          "scope": 685,
                          "src": "18139:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 677,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18139:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 680,
                          "mutability": "mutable",
                          "name": "amount",
                          "nodeType": "VariableDeclaration",
                          "scope": 685,
                          "src": "18162:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 679,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "18162:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 682,
                          "mutability": "mutable",
                          "name": "briber",
                          "nodeType": "VariableDeclaration",
                          "scope": 685,
                          "src": "18186:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18186:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "18062:144:0"
                    },
                    "returnParameters": {
                      "id": 684,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "18215:0:0"
                    },
                    "scope": 704,
                    "src": "18036:180:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "functionSelector": "2c4ef0d5",
                    "id": 694,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "getBribe",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 688,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 687,
                          "mutability": "mutable",
                          "name": "bribeIdentifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 694,
                          "src": "18240:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 686,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "18240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "18239:25:0"
                    },
                    "returnParameters": {
                      "id": 693,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 690,
                          "mutability": "mutable",
                          "name": "token",
                          "nodeType": "VariableDeclaration",
                          "scope": 694,
                          "src": "18312:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18312:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 692,
                          "mutability": "mutable",
                          "name": "amount",
                          "nodeType": "VariableDeclaration",
                          "scope": 694,
                          "src": "18327:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 691,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "18327:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "18311:31:0"
                    },
                    "scope": 704,
                    "src": "18222:121:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "functionSelector": "1933a4eb",
                    "id": 703,
                    "implemented": false,
                    "kind": "function",
                    "modifiers": [],
                    "name": "depositBribe",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 701,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 696,
                          "mutability": "mutable",
                          "name": "bribeIdentifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 703,
                          "src": "18380:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 695,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "18380:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 698,
                          "mutability": "mutable",
                          "name": "rewardIdentifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 703,
                          "src": "18413:24:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 697,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "18413:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 700,
                          "mutability": "mutable",
                          "name": "briber",
                          "nodeType": "VariableDeclaration",
                          "scope": 703,
                          "src": "18447:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 699,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18447:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "18370:97:0"
                    },
                    "returnParameters": {
                      "id": 702,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "18484:0:0"
                    },
                    "scope": 704,
                    "src": "18349:136:0",
                    "stateMutability": "payable",
                    "virtual": false,
                    "visibility": "external"
                  }
                ],
                "scope": 1531,
                "src": "18008:479:0"
              },
              {
                "id": 705,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "18524:23:0"
              },
              {
                "abstract": false,
                "baseContracts": [
                  {
                    "baseName": {
                      "id": 706,
                      "name": "AccessControl",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 632,
                      "src": "18573:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AccessControl_$632",
                        "typeString": "contract AccessControl"
                      }
                    },
                    "id": 707,
                    "nodeType": "InheritanceSpecifier",
                    "src": "18573:13:0"
                  },
                  {
                    "baseName": {
                      "id": 708,
                      "name": "ReentrancyGuard",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 671,
                      "src": "18588:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReentrancyGuard_$671",
                        "typeString": "contract ReentrancyGuard"
                      }
                    },
                    "id": 709,
                    "nodeType": "InheritanceSpecifier",
                    "src": "18588:15:0"
                  }
                ],
                "contractDependencies": [
                  73,
                  94,
                  307,
                  329,
                  632,
                  671
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 1381,
                "linearizedBaseContracts": [
                  1381,
                  671,
                  632,
                  329,
                  307,
                  73,
                  94
                ],
                "name": "BribeBase",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "constant": false,
                    "functionSelector": "be309bca",
                    "id": 711,
                    "mutability": "immutable",
                    "name": "BRIBE_VAULT",
                    "nodeType": "VariableDeclaration",
                    "scope": 1381,
                    "src": "18610:36:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 710,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "18610:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "constant": true,
                    "functionSelector": "49d5e604",
                    "id": 716,
                    "mutability": "constant",
                    "name": "TEAM_ROLE",
                    "nodeType": "VariableDeclaration",
                    "scope": 1381,
                    "src": "18652:58:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 712,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "18652:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "value": {
                      "arguments": [
                        {
                          "hexValue": "5445414d5f524f4c45",
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18698:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b33",
                            "typeString": "literal_string \"TEAM_ROLE\""
                          },
                          "value": "TEAM_ROLE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b33",
                            "typeString": "literal_string \"TEAM_ROLE\""
                          }
                        ],
                        "id": 713,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "18688:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18688:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "constant": false,
                    "functionSelector": "91b9b827",
                    "id": 718,
                    "mutability": "immutable",
                    "name": "PROTOCOL",
                    "nodeType": "VariableDeclaration",
                    "scope": 1381,
                    "src": "18777:33:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 717,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "18777:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "constant": false,
                    "functionSelector": "21298310",
                    "id": 722,
                    "mutability": "mutable",
                    "name": "proposalDeadlines",
                    "nodeType": "VariableDeclaration",
                    "scope": 1381,
                    "src": "18860:52:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                      "typeString": "mapping(bytes32 => uint256)"
                    },
                    "typeName": {
                      "id": 721,
                      "keyType": {
                        "id": 719,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18868:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "18860:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      },
                      "valueType": {
                        "id": 720,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18879:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "constant": false,
                    "functionSelector": "07cd2ffe",
                    "id": 726,
                    "mutability": "mutable",
                    "name": "rewardForwarding",
                    "nodeType": "VariableDeclaration",
                    "scope": 1381,
                    "src": "19003:51:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "typeName": {
                      "id": 725,
                      "keyType": {
                        "id": 723,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19011:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "19003:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      },
                      "valueType": {
                        "id": 724,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19022:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "constant": false,
                    "functionSelector": "8e8efaee",
                    "id": 730,
                    "mutability": "mutable",
                    "name": "indexOfWhitelistedToken",
                    "nodeType": "VariableDeclaration",
                    "scope": 1381,
                    "src": "19094:58:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "typeName": {
                      "id": 729,
                      "keyType": {
                        "id": 727,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "19094:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19113:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "constant": false,
                    "functionSelector": "e468baf0",
                    "id": 733,
                    "mutability": "mutable",
                    "name": "allWhitelistedTokens",
                    "nodeType": "VariableDeclaration",
                    "scope": 1381,
                    "src": "19158:37:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 731,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19158:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 732,
                      "nodeType": "ArrayTypeName",
                      "src": "19158:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "anonymous": false,
                    "id": 737,
                    "name": "GrantTeamRole",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 736,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 735,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "teamMember",
                          "nodeType": "VariableDeclaration",
                          "scope": 737,
                          "src": "19222:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19222:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "19221:20:0"
                    },
                    "src": "19202:40:0"
                  },
                  {
                    "anonymous": false,
                    "id": 741,
                    "name": "RevokeTeamRole",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 740,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 739,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "teamMember",
                          "nodeType": "VariableDeclaration",
                          "scope": 741,
                          "src": "19268:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 738,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19268:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "19267:20:0"
                    },
                    "src": "19247:41:0"
                  },
                  {
                    "anonymous": false,
                    "id": 747,
                    "name": "SetProposal",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 746,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 743,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "proposal",
                          "nodeType": "VariableDeclaration",
                          "scope": 747,
                          "src": "19311:24:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 742,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "19311:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 745,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "deadline",
                          "nodeType": "VariableDeclaration",
                          "scope": 747,
                          "src": "19337:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 744,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "19337:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "19310:44:0"
                    },
                    "src": "19293:62:0"
                  },
                  {
                    "anonymous": false,
                    "id": 761,
                    "name": "DepositBribe",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 760,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 749,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "proposal",
                          "nodeType": "VariableDeclaration",
                          "scope": 761,
                          "src": "19388:24:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 748,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "19388:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 751,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "token",
                          "nodeType": "VariableDeclaration",
                          "scope": 761,
                          "src": "19422:21:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 750,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19422:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 753,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "amount",
                          "nodeType": "VariableDeclaration",
                          "scope": 761,
                          "src": "19453:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 752,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "19453:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 755,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "bribeIdentifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 761,
                          "src": "19477:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 754,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "19477:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 757,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "rewardIdentifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 761,
                          "src": "19510:24:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 756,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "19510:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 759,
                          "indexed": true,
                          "mutability": "mutable",
                          "name": "briber",
                          "nodeType": "VariableDeclaration",
                          "scope": 761,
                          "src": "19544:22:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19544:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "19378:194:0"
                    },
                    "src": "19360:213:0"
                  },
                  {
                    "anonymous": false,
                    "id": 767,
                    "name": "SetRewardForwarding",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 766,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 763,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "from",
                          "nodeType": "VariableDeclaration",
                          "scope": 767,
                          "src": "19604:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 762,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19604:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 765,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "to",
                          "nodeType": "VariableDeclaration",
                          "scope": 767,
                          "src": "19618:10:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 764,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19618:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "19603:26:0"
                    },
                    "src": "19578:52:0"
                  },
                  {
                    "anonymous": false,
                    "id": 772,
                    "name": "AddWhitelistTokens",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 771,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 770,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "tokens",
                          "nodeType": "VariableDeclaration",
                          "scope": 772,
                          "src": "19660:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 768,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19660:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 769,
                            "nodeType": "ArrayTypeName",
                            "src": "19660:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "19659:18:0"
                    },
                    "src": "19635:43:0"
                  },
                  {
                    "anonymous": false,
                    "id": 777,
                    "name": "RemoveWhitelistTokens",
                    "nodeType": "EventDefinition",
                    "parameters": {
                      "id": 776,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 775,
                          "indexed": false,
                          "mutability": "mutable",
                          "name": "tokens",
                          "nodeType": "VariableDeclaration",
                          "scope": 777,
                          "src": "19711:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 773,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19711:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 774,
                            "nodeType": "ArrayTypeName",
                            "src": "19711:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "19710:18:0"
                    },
                    "src": "19683:46:0"
                  },
                  {
                    "body": {
                      "id": 824,
                      "nodeType": "Block",
                      "src": "19794:293:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 785,
                                  "name": "_BRIBE_VAULT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 779,
                                  "src": "19812:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 788,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19836:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 787,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "19828:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 786,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "19828:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19828:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "19812:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c6964205f42524942455f5641554c54",
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19840:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_70227bd2d2b81f9bde3c375358c6f0c0dab563f2bbc572365fe98e6371207e18",
                                  "typeString": "literal_string \"Invalid _BRIBE_VAULT\""
                                },
                                "value": "Invalid _BRIBE_VAULT"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_70227bd2d2b81f9bde3c375358c6f0c0dab563f2bbc572365fe98e6371207e18",
                                  "typeString": "literal_string \"Invalid _BRIBE_VAULT\""
                                }
                              ],
                              "id": 784,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "19804:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19804:59:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 793,
                          "nodeType": "ExpressionStatement",
                          "src": "19804:59:0"
                        },
                        {
                          "expression": {
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 794,
                              "name": "BRIBE_VAULT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "19873:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 795,
                              "name": "_BRIBE_VAULT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "19887:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "19873:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 797,
                          "nodeType": "ExpressionStatement",
                          "src": "19873:26:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 801,
                                        "name": "_PROTOCOL",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 781,
                                        "src": "19924:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19918:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 799,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "19918:5:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19918:16:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "19918:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19945:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "19918:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c6964205f50524f544f434f4c",
                                "id": 806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19948:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_616f589f8918254ca25f99e86a827f5b814f5d4427cfce11ec3f4b60f8117f0c",
                                  "typeString": "literal_string \"Invalid _PROTOCOL\""
                                },
                                "value": "Invalid _PROTOCOL"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_616f589f8918254ca25f99e86a827f5b814f5d4427cfce11ec3f4b60f8117f0c",
                                  "typeString": "literal_string \"Invalid _PROTOCOL\""
                                }
                              ],
                              "id": 798,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "19910:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19910:58:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 808,
                          "nodeType": "ExpressionStatement",
                          "src": "19910:58:0"
                        },
                        {
                          "expression": {
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 809,
                              "name": "PROTOCOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "19978:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 813,
                                      "name": "_PROTOCOL",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 781,
                                      "src": "20016:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 811,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "19999:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 812,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "19999:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19999:27:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 810,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "19989:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19989:38:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "19978:49:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 817,
                          "nodeType": "ExpressionStatement",
                          "src": "19978:49:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 819,
                                "name": "DEFAULT_ADMIN_ROLE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "20049:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 820,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "20069:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "20069:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 818,
                              "name": "_grantRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "20038:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address)"
                              }
                            },
                            "id": 822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20038:42:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 823,
                          "nodeType": "ExpressionStatement",
                          "src": "20038:42:0"
                        }
                      ]
                    },
                    "id": 825,
                    "implemented": true,
                    "kind": "constructor",
                    "modifiers": [],
                    "name": "",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 782,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 779,
                          "mutability": "mutable",
                          "name": "_BRIBE_VAULT",
                          "nodeType": "VariableDeclaration",
                          "scope": 825,
                          "src": "19747:20:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 778,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19747:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 781,
                          "mutability": "mutable",
                          "name": "_PROTOCOL",
                          "nodeType": "VariableDeclaration",
                          "scope": 825,
                          "src": "19769:23:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                          },
                          "typeName": {
                            "id": 780,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "19769:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "19746:47:0"
                    },
                    "returnParameters": {
                      "id": 783,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "19794:0:0"
                    },
                    "scope": 1381,
                    "src": "19735:352:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 843,
                      "nodeType": "Block",
                      "src": "20119:178:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 829,
                                      "name": "DEFAULT_ADMIN_ROLE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 351,
                                      "src": "20158:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 830,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "20178:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 831,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "20178:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "id": 828,
                                    "name": "hasRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 405,
                                    "src": "20150:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                      "typeString": "function (bytes32,address) view returns (bool)"
                                    }
                                  },
                                  "id": 832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20150:39:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 834,
                                      "name": "TEAM_ROLE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 716,
                                      "src": "20217:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 835,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "20228:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 836,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "20228:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "id": 833,
                                    "name": "hasRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 405,
                                    "src": "20209:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                      "typeString": "function (bytes32,address) view returns (bool)"
                                    }
                                  },
                                  "id": 837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20209:30:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "20150:89:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4e6f7420617574686f72697a6564",
                                "id": 839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20253:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                  "typeString": "literal_string \"Not authorized\""
                                },
                                "value": "Not authorized"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                  "typeString": "literal_string \"Not authorized\""
                                }
                              ],
                              "id": 827,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "20129:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20129:150:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 841,
                          "nodeType": "ExpressionStatement",
                          "src": "20129:150:0"
                        },
                        {
                          "id": 842,
                          "nodeType": "PlaceholderStatement",
                          "src": "20289:1:0"
                        }
                      ]
                    },
                    "id": 844,
                    "name": "onlyAuthorized",
                    "nodeType": "ModifierDefinition",
                    "parameters": {
                      "id": 826,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "20116:2:0"
                    },
                    "src": "20093:204:0",
                    "virtual": false,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 872,
                      "nodeType": "Block",
                      "src": "20544:156:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 854,
                                  "name": "teamMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "20562:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 857,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "20584:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 856,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "20576:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 855,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "20576:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20576:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "20562:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c6964207465616d4d656d626572",
                                "id": 860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20588:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6150158dea92f4a87cb54af351dbc7507e550bdf6d568c45ca10281568e2c35e",
                                  "typeString": "literal_string \"Invalid teamMember\""
                                },
                                "value": "Invalid teamMember"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6150158dea92f4a87cb54af351dbc7507e550bdf6d568c45ca10281568e2c35e",
                                  "typeString": "literal_string \"Invalid teamMember\""
                                }
                              ],
                              "id": 853,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "20554:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20554:55:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 862,
                          "nodeType": "ExpressionStatement",
                          "src": "20554:55:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 864,
                                "name": "TEAM_ROLE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 716,
                                "src": "20630:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 865,
                                "name": "teamMember",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 847,
                                "src": "20641:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 863,
                              "name": "_grantRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "20619:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address)"
                              }
                            },
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20619:33:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 867,
                          "nodeType": "ExpressionStatement",
                          "src": "20619:33:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 869,
                                "name": "teamMember",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 847,
                                "src": "20682:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 868,
                              "name": "GrantTeamRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "20668:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20668:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 871,
                          "nodeType": "EmitStatement",
                          "src": "20663:30:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 845,
                      "nodeType": "StructuredDocumentation",
                      "src": "20303:135:0",
                      "text": "@notice Grant the team role to an address\n@param  teamMember  address  Address to grant the teamMember role"
                    },
                    "functionSelector": "f52c395a",
                    "id": 873,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "arguments": [
                          {
                            "id": 850,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "20520:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "id": 851,
                        "modifierName": {
                          "id": 849,
                          "name": "onlyRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "20511:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$_t_bytes32_$",
                            "typeString": "modifier (bytes32)"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "20511:28:0"
                      }
                    ],
                    "name": "grantTeamRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 848,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 847,
                          "mutability": "mutable",
                          "name": "teamMember",
                          "nodeType": "VariableDeclaration",
                          "scope": 873,
                          "src": "20466:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 846,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20466:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "20465:20:0"
                    },
                    "returnParameters": {
                      "id": 852,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "20544:0:0"
                    },
                    "scope": 1381,
                    "src": "20443:257:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 899,
                      "nodeType": "Block",
                      "src": "20952:164:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 884,
                                    "name": "TEAM_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 716,
                                    "src": "20978:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 885,
                                    "name": "teamMember",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 876,
                                    "src": "20989:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 883,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 405,
                                  "src": "20970:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20970:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c6964207465616d4d656d626572",
                                "id": 887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21002:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6150158dea92f4a87cb54af351dbc7507e550bdf6d568c45ca10281568e2c35e",
                                  "typeString": "literal_string \"Invalid teamMember\""
                                },
                                "value": "Invalid teamMember"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6150158dea92f4a87cb54af351dbc7507e550bdf6d568c45ca10281568e2c35e",
                                  "typeString": "literal_string \"Invalid teamMember\""
                                }
                              ],
                              "id": 882,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "20962:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20962:61:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 889,
                          "nodeType": "ExpressionStatement",
                          "src": "20962:61:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 891,
                                "name": "TEAM_ROLE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 716,
                                "src": "21045:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 892,
                                "name": "teamMember",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 876,
                                "src": "21056:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 890,
                              "name": "_revokeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "21033:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address)"
                              }
                            },
                            "id": 893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21033:34:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 894,
                          "nodeType": "ExpressionStatement",
                          "src": "21033:34:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 896,
                                "name": "teamMember",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 876,
                                "src": "21098:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 895,
                              "name": "RevokeTeamRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "21083:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21083:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 898,
                          "nodeType": "EmitStatement",
                          "src": "21078:31:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 874,
                      "nodeType": "StructuredDocumentation",
                      "src": "20706:139:0",
                      "text": "@notice Revoke the team role from an address\n@param  teamMember  address  Address to revoke the teamMember role"
                    },
                    "functionSelector": "5699fbad",
                    "id": 900,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "arguments": [
                          {
                            "id": 879,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "20928:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "id": 880,
                        "modifierName": {
                          "id": 878,
                          "name": "onlyRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "20919:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$_t_bytes32_$",
                            "typeString": "modifier (bytes32)"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "20919:28:0"
                      }
                    ],
                    "name": "revokeTeamRole",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 877,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 876,
                          "mutability": "mutable",
                          "name": "teamMember",
                          "nodeType": "VariableDeclaration",
                          "scope": 900,
                          "src": "20874:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 875,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20874:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "20873:20:0"
                    },
                    "returnParameters": {
                      "id": 881,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "20952:0:0"
                    },
                    "scope": 1381,
                    "src": "20850:266:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 909,
                      "nodeType": "Block",
                      "src": "21284:44:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 907,
                            "name": "allWhitelistedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "21301:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "functionReturnParameters": 906,
                          "id": 908,
                          "nodeType": "Return",
                          "src": "21294:27:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 901,
                      "nodeType": "StructuredDocumentation",
                      "src": "21122:84:0",
                      "text": "@notice Return the list of currently whitelisted token addresses"
                    },
                    "functionSelector": "e26f7900",
                    "id": 910,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "getWhitelistedTokens",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 902,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "21240:2:0"
                    },
                    "returnParameters": {
                      "id": 906,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 905,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 910,
                          "src": "21266:16:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 903,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "21266:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 904,
                            "nodeType": "ArrayTypeName",
                            "src": "21266:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "21265:18:0"
                    },
                    "scope": 1381,
                    "src": "21211:117:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 938,
                      "nodeType": "Block",
                      "src": "21545:204:0",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 918,
                                "name": "allWhitelistedTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "21559:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "21559:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21590:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "21559:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 925,
                          "nodeType": "IfStatement",
                          "src": "21555:75:0",
                          "trueBody": {
                            "id": 924,
                            "nodeType": "Block",
                            "src": "21593:37:0",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "66616c7365",
                                  "id": 922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21614:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "functionReturnParameters": 917,
                                "id": 923,
                                "nodeType": "Return",
                                "src": "21607:12:0"
                              }
                            ]
                          }
                        },
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 926,
                                  "name": "indexOfWhitelistedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 730,
                                  "src": "21659:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 928,
                                "indexExpression": {
                                  "id": 927,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 913,
                                  "src": "21683:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21659:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21693:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "21659:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 931,
                                  "name": "allWhitelistedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 733,
                                  "src": "21710:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 933,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21731:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21710:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 934,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 913,
                                "src": "21737:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "21710:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "21659:83:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 917,
                          "id": 937,
                          "nodeType": "Return",
                          "src": "21640:102:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 911,
                      "nodeType": "StructuredDocumentation",
                      "src": "21334:136:0",
                      "text": "@notice Return whether the specified token is whitelisted\n@param  token  address Token address to be checked"
                    },
                    "functionSelector": "ab37f486",
                    "id": 939,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "isWhitelistedToken",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 914,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 913,
                          "mutability": "mutable",
                          "name": "token",
                          "nodeType": "VariableDeclaration",
                          "scope": 939,
                          "src": "21503:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21503:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "21502:15:0"
                    },
                    "returnParameters": {
                      "id": 917,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 916,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 939,
                          "src": "21539:4:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 915,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "21539:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "21538:6:0"
                    },
                    "scope": 1381,
                    "src": "21475:274:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 1014,
                      "nodeType": "Block",
                      "src": "21969:605:0",
                      "statements": [
                        {
                          "body": {
                            "id": 1008,
                            "nodeType": "Block",
                            "src": "22019:507:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 966,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 959,
                                          "name": "tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 943,
                                          "src": "22041:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                            "typeString": "address[] calldata"
                                          }
                                        },
                                        "id": 961,
                                        "indexExpression": {
                                          "id": 960,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 949,
                                          "src": "22048:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "22041:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 964,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "22062:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 963,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "22054:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 962,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "22054:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 965,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "22054:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "src": "22041:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "hexValue": "496e76616c696420746f6b656e",
                                      "id": 967,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22066:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                        "typeString": "literal_string \"Invalid token\""
                                      },
                                      "value": "Invalid token"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                        "typeString": "literal_string \"Invalid token\""
                                      }
                                    ],
                                    "id": 958,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -18,
                                      -18
                                    ],
                                    "referencedDeclaration": -18,
                                    "src": "22033:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (bool,string memory) pure"
                                    }
                                  },
                                  "id": 968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22033:49:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 969,
                                "nodeType": "ExpressionStatement",
                                "src": "22033:49:0"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 975,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 971,
                                          "name": "tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 943,
                                          "src": "22104:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                            "typeString": "address[] calldata"
                                          }
                                        },
                                        "id": 973,
                                        "indexExpression": {
                                          "id": 972,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 949,
                                          "src": "22111:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "22104:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "id": 974,
                                        "name": "BRIBE_VAULT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 711,
                                        "src": "22117:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "22104:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "hexValue": "43616e6e6f742077686974656c6973742042524942455f5641554c54",
                                      "id": 976,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22130:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_25bb64b215353bd950f5126545dd80427f915984999cfbb926d6df970a732426",
                                        "typeString": "literal_string \"Cannot whitelist BRIBE_VAULT\""
                                      },
                                      "value": "Cannot whitelist BRIBE_VAULT"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_25bb64b215353bd950f5126545dd80427f915984999cfbb926d6df970a732426",
                                        "typeString": "literal_string \"Cannot whitelist BRIBE_VAULT\""
                                      }
                                    ],
                                    "id": 970,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -18,
                                      -18
                                    ],
                                    "referencedDeclaration": -18,
                                    "src": "22096:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (bool,string memory) pure"
                                    }
                                  },
                                  "id": 977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22096:65:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 978,
                                "nodeType": "ExpressionStatement",
                                "src": "22096:65:0"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 985,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "22200:30:0",
                                      "subExpression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 981,
                                              "name": "tokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 943,
                                              "src": "22220:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                                "typeString": "address[] calldata"
                                              }
                                            },
                                            "id": 983,
                                            "indexExpression": {
                                              "id": 982,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 949,
                                              "src": "22227:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "22220:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 980,
                                          "name": "isWhitelistedToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 939,
                                          "src": "22201:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address) view returns (bool)"
                                          }
                                        },
                                        "id": 984,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "22201:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "hexValue": "546f6b656e20616c72656164792077686974656c6973746564",
                                      "id": 986,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22248:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_68bda06fb727d593ecc5e0f847198a690ae27a6aa1f4fe28a350410a35ec7a64",
                                        "typeString": "literal_string \"Token already whitelisted\""
                                      },
                                      "value": "Token already whitelisted"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_68bda06fb727d593ecc5e0f847198a690ae27a6aa1f4fe28a350410a35ec7a64",
                                        "typeString": "literal_string \"Token already whitelisted\""
                                      }
                                    ],
                                    "id": 979,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -18,
                                      -18
                                    ],
                                    "referencedDeclaration": -18,
                                    "src": "22175:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (bool,string memory) pure"
                                    }
                                  },
                                  "id": 987,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22175:114:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 988,
                                "nodeType": "ExpressionStatement",
                                "src": "22175:114:0"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 992,
                                        "name": "tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 943,
                                        "src": "22391:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 994,
                                      "indexExpression": {
                                        "id": 993,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 949,
                                        "src": "22398:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "22391:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 989,
                                      "name": "allWhitelistedTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "22365:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 991,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "push",
                                    "nodeType": "MemberAccess",
                                    "src": "22365:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                                      "typeString": "function (address)"
                                    }
                                  },
                                  "id": 995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22365:36:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 996,
                                "nodeType": "ExpressionStatement",
                                "src": "22365:36:0"
                              },
                              {
                                "expression": {
                                  "id": 1006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 997,
                                      "name": "indexOfWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 730,
                                      "src": "22415:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1001,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 998,
                                        "name": "tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 943,
                                        "src": "22439:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 1000,
                                      "indexExpression": {
                                        "id": 999,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 949,
                                        "src": "22446:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "22439:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "22415:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1005,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1002,
                                        "name": "allWhitelistedTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 733,
                                        "src": "22468:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1003,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "22468:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1004,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22514:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "22468:47:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "22415:100:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1007,
                                "nodeType": "ExpressionStatement",
                                "src": "22415:100:0"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 951,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 949,
                              "src": "21995:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 952,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 943,
                                "src": "21999:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "21999:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21995:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1009,
                          "initializationExpression": {
                            "assignments": [
                              949
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 949,
                                "mutability": "mutable",
                                "name": "i",
                                "nodeType": "VariableDeclaration",
                                "scope": 1009,
                                "src": "21984:9:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 948,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21984:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 950,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "21984:9:0"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "22014:3:0",
                              "subExpression": {
                                "id": 955,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 949,
                                "src": "22016:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 957,
                            "nodeType": "ExpressionStatement",
                            "src": "22014:3:0"
                          },
                          "nodeType": "ForStatement",
                          "src": "21979:547:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 1011,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 943,
                                "src": "22560:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "id": 1010,
                              "name": "AddWhitelistTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 772,
                              "src": "22541:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (address[] memory)"
                              }
                            },
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22541:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1013,
                          "nodeType": "EmitStatement",
                          "src": "22536:31:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 940,
                      "nodeType": "StructuredDocumentation",
                      "src": "21755:110:0",
                      "text": "@notice Add whitelist tokens\n@param  tokens  address[]  Tokens to add to whitelist"
                    },
                    "functionSelector": "e3113df9",
                    "id": 1015,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "id": 946,
                        "modifierName": {
                          "id": 945,
                          "name": "onlyAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "21950:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$__$",
                            "typeString": "modifier ()"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "21950:14:0"
                      }
                    ],
                    "name": "addWhitelistTokens",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 944,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 943,
                          "mutability": "mutable",
                          "name": "tokens",
                          "nodeType": "VariableDeclaration",
                          "scope": 1015,
                          "src": "21898:25:0",
                          "stateVariable": false,
                          "storageLocation": "calldata",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 941,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "21898:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 942,
                            "nodeType": "ArrayTypeName",
                            "src": "21898:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "21897:27:0"
                    },
                    "returnParameters": {
                      "id": 947,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "21969:0:0"
                    },
                    "scope": 1381,
                    "src": "21870:704:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 1090,
                      "nodeType": "Block",
                      "src": "22805:695:0",
                      "statements": [
                        {
                          "body": {
                            "id": 1084,
                            "nodeType": "Block",
                            "src": "22855:594:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1036,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1019,
                                            "src": "22896:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                              "typeString": "address[] calldata"
                                            }
                                          },
                                          "id": 1038,
                                          "indexExpression": {
                                            "id": 1037,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1025,
                                            "src": "22903:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "22896:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1035,
                                        "name": "isWhitelistedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 939,
                                        "src": "22877:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                          "typeString": "function (address) view returns (bool)"
                                        }
                                      },
                                      "id": 1039,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22877:29:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "hexValue": "546f6b656e206e6f742077686974656c6973746564",
                                      "id": 1040,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22908:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_a8a590ce223befaf7d80c46dd8a79ab1acc914febe31544396be9a38974f0312",
                                        "typeString": "literal_string \"Token not whitelisted\""
                                      },
                                      "value": "Token not whitelisted"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_a8a590ce223befaf7d80c46dd8a79ab1acc914febe31544396be9a38974f0312",
                                        "typeString": "literal_string \"Token not whitelisted\""
                                      }
                                    ],
                                    "id": 1034,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -18,
                                      -18
                                    ],
                                    "referencedDeclaration": -18,
                                    "src": "22869:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (bool,string memory) pure"
                                    }
                                  },
                                  "id": 1041,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22869:63:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1042,
                                "nodeType": "ExpressionStatement",
                                "src": "22869:63:0"
                              },
                              {
                                "assignments": [
                                  1044
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1044,
                                    "mutability": "mutable",
                                    "name": "index",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1084,
                                    "src": "23080:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1043,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23080:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1050,
                                "initialValue": {
                                  "baseExpression": {
                                    "id": 1045,
                                    "name": "indexOfWhitelistedToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 730,
                                    "src": "23096:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1049,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1046,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1019,
                                      "src": "23120:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1048,
                                    "indexExpression": {
                                      "id": 1047,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1025,
                                      "src": "23127:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23120:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23096:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "23080:50:0"
                              },
                              {
                                "assignments": [
                                  1052
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1052,
                                    "mutability": "mutable",
                                    "name": "tail",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1084,
                                    "src": "23144:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "typeName": {
                                      "id": 1051,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23144:7:0",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1059,
                                "initialValue": {
                                  "baseExpression": {
                                    "id": 1053,
                                    "name": "allWhitelistedTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 733,
                                    "src": "23159:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1058,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1057,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1054,
                                        "name": "allWhitelistedTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 733,
                                        "src": "23197:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1055,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "23197:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1056,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "23227:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "23197:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23159:83:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "23144:98:0"
                              },
                              {
                                "expression": {
                                  "id": 1064,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1060,
                                      "name": "allWhitelistedTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "23257:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1062,
                                    "indexExpression": {
                                      "id": 1061,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1044,
                                      "src": "23278:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "23257:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 1063,
                                    "name": "tail",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1052,
                                    "src": "23287:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "23257:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1065,
                                "nodeType": "ExpressionStatement",
                                "src": "23257:34:0"
                              },
                              {
                                "expression": {
                                  "id": 1070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1066,
                                      "name": "indexOfWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 730,
                                      "src": "23305:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1068,
                                    "indexExpression": {
                                      "id": 1067,
                                      "name": "tail",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1052,
                                      "src": "23329:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "23305:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 1069,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1044,
                                    "src": "23337:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "23305:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1071,
                                "nodeType": "ExpressionStatement",
                                "src": "23305:37:0"
                              },
                              {
                                "expression": {
                                  "id": 1077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "delete",
                                  "prefix": true,
                                  "src": "23357:41:0",
                                  "subExpression": {
                                    "baseExpression": {
                                      "id": 1072,
                                      "name": "indexOfWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 730,
                                      "src": "23364:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1076,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1073,
                                        "name": "tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1019,
                                        "src": "23388:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 1075,
                                      "indexExpression": {
                                        "id": 1074,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1025,
                                        "src": "23395:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "23388:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "23364:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1078,
                                "nodeType": "ExpressionStatement",
                                "src": "23357:41:0"
                              },
                              {
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1079,
                                      "name": "allWhitelistedTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 733,
                                      "src": "23412:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1081,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "pop",
                                    "nodeType": "MemberAccess",
                                    "src": "23412:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                                      "typeString": "function ()"
                                    }
                                  },
                                  "id": 1082,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23412:26:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1083,
                                "nodeType": "ExpressionStatement",
                                "src": "23412:26:0"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1027,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "22831:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 1028,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1019,
                                "src": "22835:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 1029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "22835:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22831:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1085,
                          "initializationExpression": {
                            "assignments": [
                              1025
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1025,
                                "mutability": "mutable",
                                "name": "i",
                                "nodeType": "VariableDeclaration",
                                "scope": 1085,
                                "src": "22820:9:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1024,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22820:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1026,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "22820:9:0"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 1032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "22850:3:0",
                              "subExpression": {
                                "id": 1031,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1025,
                                "src": "22852:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1033,
                            "nodeType": "ExpressionStatement",
                            "src": "22850:3:0"
                          },
                          "nodeType": "ForStatement",
                          "src": "22815:634:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 1087,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1019,
                                "src": "23486:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "id": 1086,
                              "name": "RemoveWhitelistTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 777,
                              "src": "23464:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (address[] memory)"
                              }
                            },
                            "id": 1088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23464:29:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1089,
                          "nodeType": "EmitStatement",
                          "src": "23459:34:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1016,
                      "nodeType": "StructuredDocumentation",
                      "src": "22580:118:0",
                      "text": "@notice Remove whitelist tokens\n@param  tokens  address[]  Tokens to remove from whitelist"
                    },
                    "functionSelector": "b25706f3",
                    "id": 1091,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "id": 1022,
                        "modifierName": {
                          "id": 1021,
                          "name": "onlyAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "22786:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$__$",
                            "typeString": "modifier ()"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "22786:14:0"
                      }
                    ],
                    "name": "removeWhitelistTokens",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1020,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1019,
                          "mutability": "mutable",
                          "name": "tokens",
                          "nodeType": "VariableDeclaration",
                          "scope": 1091,
                          "src": "22734:25:0",
                          "stateVariable": false,
                          "storageLocation": "calldata",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1017,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22734:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1018,
                            "nodeType": "ArrayTypeName",
                            "src": "22734:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "22733:27:0"
                    },
                    "returnParameters": {
                      "id": 1023,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "22805:0:0"
                    },
                    "scope": 1381,
                    "src": "22703:797:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 1128,
                      "nodeType": "Block",
                      "src": "23724:243:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1100,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1094,
                                  "src": "23742:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1103,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "23762:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23754:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 1101,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23754:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23754:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "23742:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c69642070726f706f73616c",
                                "id": 1106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23766:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ef34a1cc550de1526211778d150567087163f086f4e2157902ee2db372db15a1",
                                  "typeString": "literal_string \"Invalid proposal\""
                                },
                                "value": "Invalid proposal"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ef34a1cc550de1526211778d150567087163f086f4e2157902ee2db372db15a1",
                                  "typeString": "literal_string \"Invalid proposal\""
                                }
                              ],
                              "id": 1099,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "23734:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23734:51:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1108,
                          "nodeType": "ExpressionStatement",
                          "src": "23734:51:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1110,
                                  "name": "deadline",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1096,
                                  "src": "23803:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1111,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "23814:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "23814:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23803:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "446561646c696e65206d75737420626520696e2074686520667574757265",
                                "id": 1114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23831:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d3e7aa4aa0cbec9a64fb6a0b8b9ffd2b31f86995a33f516b85a302b0ba10930e",
                                  "typeString": "literal_string \"Deadline must be in the future\""
                                },
                                "value": "Deadline must be in the future"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d3e7aa4aa0cbec9a64fb6a0b8b9ffd2b31f86995a33f516b85a302b0ba10930e",
                                  "typeString": "literal_string \"Deadline must be in the future\""
                                }
                              ],
                              "id": 1109,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "23795:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23795:69:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1116,
                          "nodeType": "ExpressionStatement",
                          "src": "23795:69:0"
                        },
                        {
                          "expression": {
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1117,
                                "name": "proposalDeadlines",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 722,
                                "src": "23875:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                  "typeString": "mapping(bytes32 => uint256)"
                                }
                              },
                              "id": 1119,
                              "indexExpression": {
                                "id": 1118,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1094,
                                "src": "23893:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "23875:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1120,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1096,
                              "src": "23905:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23875:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1122,
                          "nodeType": "ExpressionStatement",
                          "src": "23875:38:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 1124,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1094,
                                "src": "23941:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1125,
                                "name": "deadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1096,
                                "src": "23951:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1123,
                              "name": "SetProposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 747,
                              "src": "23929:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                                "typeString": "function (bytes32,uint256)"
                              }
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23929:31:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1127,
                          "nodeType": "EmitStatement",
                          "src": "23924:36:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1092,
                      "nodeType": "StructuredDocumentation",
                      "src": "23506:146:0",
                      "text": "@notice Set a single proposal\n@param  proposal  bytes32  Proposal\n@param  deadline  uint256  Proposal deadline"
                    },
                    "id": 1129,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "_setProposal",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1097,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1094,
                          "mutability": "mutable",
                          "name": "proposal",
                          "nodeType": "VariableDeclaration",
                          "scope": 1129,
                          "src": "23679:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1093,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "23679:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1096,
                          "mutability": "mutable",
                          "name": "deadline",
                          "nodeType": "VariableDeclaration",
                          "scope": 1129,
                          "src": "23697:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1095,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "23697:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "23678:36:0"
                    },
                    "returnParameters": {
                      "id": 1098,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "23724:0:0"
                    },
                    "scope": 1381,
                    "src": "23657:310:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "internal"
                  },
                  {
                    "body": {
                      "id": 1151,
                      "nodeType": "Block",
                      "src": "24453:138:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1144,
                                    "name": "PROTOCOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 718,
                                    "src": "24526:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1145,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1132,
                                    "src": "24536:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1146,
                                    "name": "proposalDeadline",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1134,
                                    "src": "24546:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1147,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1136,
                                    "src": "24564:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1142,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "24509:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "24509:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24509:61:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1141,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "24482:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24482:102:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "functionReturnParameters": 1140,
                          "id": 1150,
                          "nodeType": "Return",
                          "src": "24463:121:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1130,
                      "nodeType": "StructuredDocumentation",
                      "src": "23973:307:0",
                      "text": "@notice Generate the BribeVault identifier based on a scheme\n@param  proposal          bytes32  Proposal\n@param  proposalDeadline  uint256  Proposal deadline\n@param  token             address  Token\n@return identifier        bytes32  BribeVault identifier"
                    },
                    "functionSelector": "3eeed1a5",
                    "id": 1152,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "generateBribeVaultIdentifier",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1137,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1132,
                          "mutability": "mutable",
                          "name": "proposal",
                          "nodeType": "VariableDeclaration",
                          "scope": 1152,
                          "src": "24332:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1131,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "24332:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1134,
                          "mutability": "mutable",
                          "name": "proposalDeadline",
                          "nodeType": "VariableDeclaration",
                          "scope": 1152,
                          "src": "24358:24:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1133,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "24358:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1136,
                          "mutability": "mutable",
                          "name": "token",
                          "nodeType": "VariableDeclaration",
                          "scope": 1152,
                          "src": "24392:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1135,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24392:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "24322:89:0"
                    },
                    "returnParameters": {
                      "id": 1140,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1139,
                          "mutability": "mutable",
                          "name": "identifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 1152,
                          "src": "24433:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1138,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "24433:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "24432:20:0"
                    },
                    "scope": 1381,
                    "src": "24285:306:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 1171,
                      "nodeType": "Block",
                      "src": "24993:86:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1165,
                                    "name": "PROTOCOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 718,
                                    "src": "25037:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1166,
                                    "name": "proposalDeadline",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1155,
                                    "src": "25047:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1167,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1157,
                                    "src": "25065:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1163,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "25020:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "25020:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25020:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1162,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "25010:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25010:62:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "functionReturnParameters": 1161,
                          "id": 1170,
                          "nodeType": "Return",
                          "src": "25003:69:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1153,
                      "nodeType": "StructuredDocumentation",
                      "src": "24597:247:0",
                      "text": "@notice Generate the reward identifier based on a scheme\n@param  proposalDeadline  uint256  Proposal deadline\n@param  token             address  Token\n@return identifier        bytes32  Reward identifier"
                    },
                    "functionSelector": "40c58189",
                    "id": 1172,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "generateRewardIdentifier",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1158,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1155,
                          "mutability": "mutable",
                          "name": "proposalDeadline",
                          "nodeType": "VariableDeclaration",
                          "scope": 1172,
                          "src": "24883:24:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1154,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "24883:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1157,
                          "mutability": "mutable",
                          "name": "token",
                          "nodeType": "VariableDeclaration",
                          "scope": 1172,
                          "src": "24909:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24909:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "24882:41:0"
                    },
                    "returnParameters": {
                      "id": 1161,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1160,
                          "mutability": "mutable",
                          "name": "identifier",
                          "nodeType": "VariableDeclaration",
                          "scope": 1172,
                          "src": "24969:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1159,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "24969:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "24968:20:0"
                    },
                    "scope": 1381,
                    "src": "24849:230:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 1197,
                      "nodeType": "Block",
                      "src": "25589:164:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1191,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1175,
                                    "src": "25698:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1192,
                                    "name": "proposalDeadline",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1177,
                                    "src": "25708:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1193,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1179,
                                    "src": "25726:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1190,
                                  "name": "generateBribeVaultIdentifier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1152,
                                  "src": "25669:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$_t_address_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes32,uint256,address) view returns (bytes32)"
                                  }
                                },
                                "id": 1194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25669:63:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1187,
                                    "name": "BRIBE_VAULT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 711,
                                    "src": "25630:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1186,
                                  "name": "IBribeVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 704,
                                  "src": "25618:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IBribeVault_$704_$",
                                    "typeString": "type(contract IBribeVault)"
                                  }
                                },
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25618:24:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBribeVault_$704",
                                  "typeString": "contract IBribeVault"
                                }
                              },
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getBribe",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 694,
                              "src": "25618:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$_t_uint256_$",
                                "typeString": "function (bytes32) view external returns (address,uint256)"
                              }
                            },
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25618:128:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "functionReturnParameters": 1185,
                          "id": 1196,
                          "nodeType": "Return",
                          "src": "25599:147:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1173,
                      "nodeType": "StructuredDocumentation",
                      "src": "25085:328:0",
                      "text": "@notice Get bribe from BribeVault\n@param  proposal          bytes32  Proposal\n@param  proposalDeadline  uint256  Proposal deadline\n@param  token             address  Token\n@return bribeToken        address  Token address\n@return bribeAmount       address  Token amount"
                    },
                    "functionSelector": "f7e6b46b",
                    "id": 1198,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "getBribe",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1180,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1175,
                          "mutability": "mutable",
                          "name": "proposal",
                          "nodeType": "VariableDeclaration",
                          "scope": 1198,
                          "src": "25445:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1174,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "25445:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1177,
                          "mutability": "mutable",
                          "name": "proposalDeadline",
                          "nodeType": "VariableDeclaration",
                          "scope": 1198,
                          "src": "25471:24:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1176,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "25471:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1179,
                          "mutability": "mutable",
                          "name": "token",
                          "nodeType": "VariableDeclaration",
                          "scope": 1198,
                          "src": "25505:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1178,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25505:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "25435:89:0"
                    },
                    "returnParameters": {
                      "id": 1185,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1182,
                          "mutability": "mutable",
                          "name": "bribeToken",
                          "nodeType": "VariableDeclaration",
                          "scope": 1198,
                          "src": "25548:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1181,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25548:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1184,
                          "mutability": "mutable",
                          "name": "bribeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 1198,
                          "src": "25568:19:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1183,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "25568:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "25547:41:0"
                    },
                    "scope": 1381,
                    "src": "25418:335:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 1287,
                      "nodeType": "Block",
                      "src": "26101:1030:0",
                      "statements": [
                        {
                          "assignments": [
                            1211
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1211,
                              "mutability": "mutable",
                              "name": "proposalDeadline",
                              "nodeType": "VariableDeclaration",
                              "scope": 1287,
                              "src": "26111:24:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1210,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "26111:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1215,
                          "initialValue": {
                            "baseExpression": {
                              "id": 1212,
                              "name": "proposalDeadlines",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "26138:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 1214,
                            "indexExpression": {
                              "id": 1213,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "26156:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "26138:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "26111:54:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1217,
                                    "name": "proposalDeadlines",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "26196:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 1219,
                                  "indexExpression": {
                                    "id": 1218,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1201,
                                    "src": "26214:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26196:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1220,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "26226:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "26226:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26196:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "50726f706f73616c20646561646c696e652068617320706173736564",
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26255:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e5e2a6bc9aa823e399a0dc85a52c95c0aa5fcbbfff6ba7e952d7a74c26794f73",
                                  "typeString": "literal_string \"Proposal deadline has passed\""
                                },
                                "value": "Proposal deadline has passed"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e5e2a6bc9aa823e399a0dc85a52c95c0aa5fcbbfff6ba7e952d7a74c26794f73",
                                  "typeString": "literal_string \"Proposal deadline has passed\""
                                }
                              ],
                              "id": 1216,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "26175:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26175:120:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1225,
                          "nodeType": "ExpressionStatement",
                          "src": "26175:120:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1227,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "26313:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1230,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "26330:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "26322:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1228,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "26322:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26322:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "26313:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c696420746f6b656e",
                                "id": 1233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26334:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                  "typeString": "literal_string \"Invalid token\""
                                },
                                "value": "Invalid token"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                                  "typeString": "literal_string \"Invalid token\""
                                }
                              ],
                              "id": 1226,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "26305:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26305:45:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1235,
                          "nodeType": "ExpressionStatement",
                          "src": "26305:45:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1238,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1203,
                                    "src": "26387:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1237,
                                  "name": "isWhitelistedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "26368:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26368:25:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "546f6b656e206973206e6f742077686974656c6973746564",
                                "id": 1240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26395:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_3395f9809cad89b82f806710991f9dc64a68908febe1bb335ef519bbf0cfcb71",
                                  "typeString": "literal_string \"Token is not whitelisted\""
                                },
                                "value": "Token is not whitelisted"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3395f9809cad89b82f806710991f9dc64a68908febe1bb335ef519bbf0cfcb71",
                                  "typeString": "literal_string \"Token is not whitelisted\""
                                }
                              ],
                              "id": 1236,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "26360:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26360:62:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1242,
                          "nodeType": "ExpressionStatement",
                          "src": "26360:62:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1244,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1205,
                                  "src": "26440:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "26450:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "26440:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "427269626520616d6f756e74206d7573742062652067726561746572207468616e2030",
                                "id": 1247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26453:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ee63b4003ce73539c6957f189373ba0c9d5e6e3f986377b1427a857b26896d5e",
                                  "typeString": "literal_string \"Bribe amount must be greater than 0\""
                                },
                                "value": "Bribe amount must be greater than 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ee63b4003ce73539c6957f189373ba0c9d5e6e3f986377b1427a857b26896d5e",
                                  "typeString": "literal_string \"Bribe amount must be greater than 0\""
                                }
                              ],
                              "id": 1243,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "26432:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26432:59:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1249,
                          "nodeType": "ExpressionStatement",
                          "src": "26432:59:0"
                        },
                        {
                          "assignments": [
                            1251
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1251,
                              "mutability": "mutable",
                              "name": "bribeIdentifier",
                              "nodeType": "VariableDeclaration",
                              "scope": 1287,
                              "src": "26502:23:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "typeName": {
                                "id": 1250,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "26502:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1257,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 1253,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1201,
                                "src": "26570:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1254,
                                "name": "proposalDeadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1211,
                                "src": "26592:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1255,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1203,
                                "src": "26622:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1252,
                              "name": "generateBribeVaultIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1152,
                              "src": "26528:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,uint256,address) view returns (bytes32)"
                              }
                            },
                            "id": 1256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26528:109:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "26502:135:0"
                        },
                        {
                          "assignments": [
                            1259
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1259,
                              "mutability": "mutable",
                              "name": "rewardIdentifier",
                              "nodeType": "VariableDeclaration",
                              "scope": 1287,
                              "src": "26647:24:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "typeName": {
                                "id": 1258,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "26647:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1264,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 1261,
                                "name": "proposalDeadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1211,
                                "src": "26712:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1262,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1203,
                                "src": "26742:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1260,
                              "name": "generateRewardIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "26674:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,address) view returns (bytes32)"
                              }
                            },
                            "id": 1263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26674:83:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "26647:110:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1269,
                                "name": "bribeIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1251,
                                "src": "26824:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1270,
                                "name": "rewardIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "26853:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1271,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1203,
                                "src": "26883:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1272,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1205,
                                "src": "26902:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1273,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "26922:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "26922:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1266,
                                    "name": "BRIBE_VAULT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 711,
                                    "src": "26780:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1265,
                                  "name": "IBribeVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 704,
                                  "src": "26768:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IBribeVault_$704_$",
                                    "typeString": "type(contract IBribeVault)"
                                  }
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26768:24:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBribeVault_$704",
                                  "typeString": "contract IBribeVault"
                                }
                              },
                              "id": 1268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "depositBribeERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 685,
                              "src": "26768:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,bytes32,address,uint256,address) external"
                              }
                            },
                            "id": 1275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26768:174:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1276,
                          "nodeType": "ExpressionStatement",
                          "src": "26768:174:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 1278,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1201,
                                "src": "26984:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1279,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1203,
                                "src": "27006:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1280,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1205,
                                "src": "27025:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1281,
                                "name": "bribeIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1251,
                                "src": "27045:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1282,
                                "name": "rewardIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "27074:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1283,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "27104:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "27104:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 1277,
                              "name": "DepositBribe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "26958:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address,uint256,bytes32,bytes32,address)"
                              }
                            },
                            "id": 1285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26958:166:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1286,
                          "nodeType": "EmitStatement",
                          "src": "26953:171:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1199,
                      "nodeType": "StructuredDocumentation",
                      "src": "25759:209:0",
                      "text": "@notice Deposit bribe for a proposal (ERC20 tokens only)\n@param  proposal  bytes32  Proposal\n@param  token     address  Token\n@param  amount    uint256  Token amount"
                    },
                    "functionSelector": "a602d140",
                    "id": 1288,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "id": 1208,
                        "modifierName": {
                          "id": 1207,
                          "name": "nonReentrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "26088:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$__$",
                            "typeString": "modifier ()"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "26088:12:0"
                      }
                    ],
                    "name": "depositBribeERC20",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1206,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1201,
                          "mutability": "mutable",
                          "name": "proposal",
                          "nodeType": "VariableDeclaration",
                          "scope": 1288,
                          "src": "26009:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1200,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "26009:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1203,
                          "mutability": "mutable",
                          "name": "token",
                          "nodeType": "VariableDeclaration",
                          "scope": 1288,
                          "src": "26035:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1202,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26035:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1205,
                          "mutability": "mutable",
                          "name": "amount",
                          "nodeType": "VariableDeclaration",
                          "scope": 1288,
                          "src": "26058:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1204,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "26058:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "25999:79:0"
                    },
                    "returnParameters": {
                      "id": 1209,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "26101:0:0"
                    },
                    "scope": 1381,
                    "src": "25973:1158:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 1359,
                      "nodeType": "Block",
                      "src": "27332:974:0",
                      "statements": [
                        {
                          "assignments": [
                            1297
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1297,
                              "mutability": "mutable",
                              "name": "proposalDeadline",
                              "nodeType": "VariableDeclaration",
                              "scope": 1359,
                              "src": "27342:24:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1296,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "27342:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1301,
                          "initialValue": {
                            "baseExpression": {
                              "id": 1298,
                              "name": "proposalDeadlines",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "27369:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 1300,
                            "indexExpression": {
                              "id": 1299,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1291,
                              "src": "27387:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "27369:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "27342:54:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1303,
                                    "name": "proposalDeadlines",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "27427:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 1305,
                                  "indexExpression": {
                                    "id": 1304,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1291,
                                    "src": "27445:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "27427:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1306,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "27457:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "27457:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27427:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "50726f706f73616c20646561646c696e652068617320706173736564",
                                "id": 1309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "27486:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e5e2a6bc9aa823e399a0dc85a52c95c0aa5fcbbfff6ba7e952d7a74c26794f73",
                                  "typeString": "literal_string \"Proposal deadline has passed\""
                                },
                                "value": "Proposal deadline has passed"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e5e2a6bc9aa823e399a0dc85a52c95c0aa5fcbbfff6ba7e952d7a74c26794f73",
                                  "typeString": "literal_string \"Proposal deadline has passed\""
                                }
                              ],
                              "id": 1302,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "27406:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27406:120:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1311,
                          "nodeType": "ExpressionStatement",
                          "src": "27406:120:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1313,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "27544:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "27544:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "27557:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "27544:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "427269626520616d6f756e74206d7573742062652067726561746572207468616e2030",
                                "id": 1317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "27560:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ee63b4003ce73539c6957f189373ba0c9d5e6e3f986377b1427a857b26896d5e",
                                  "typeString": "literal_string \"Bribe amount must be greater than 0\""
                                },
                                "value": "Bribe amount must be greater than 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ee63b4003ce73539c6957f189373ba0c9d5e6e3f986377b1427a857b26896d5e",
                                  "typeString": "literal_string \"Bribe amount must be greater than 0\""
                                }
                              ],
                              "id": 1312,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "27536:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27536:62:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1319,
                          "nodeType": "ExpressionStatement",
                          "src": "27536:62:0"
                        },
                        {
                          "assignments": [
                            1321
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1321,
                              "mutability": "mutable",
                              "name": "bribeIdentifier",
                              "nodeType": "VariableDeclaration",
                              "scope": 1359,
                              "src": "27609:23:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "typeName": {
                                "id": 1320,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "27609:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1327,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 1323,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1291,
                                "src": "27677:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1324,
                                "name": "proposalDeadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1297,
                                "src": "27699:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1325,
                                "name": "BRIBE_VAULT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 711,
                                "src": "27729:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1322,
                              "name": "generateBribeVaultIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1152,
                              "src": "27635:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,uint256,address) view returns (bytes32)"
                              }
                            },
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27635:115:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "27609:141:0"
                        },
                        {
                          "assignments": [
                            1329
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1329,
                              "mutability": "mutable",
                              "name": "rewardIdentifier",
                              "nodeType": "VariableDeclaration",
                              "scope": 1359,
                              "src": "27760:24:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "typeName": {
                                "id": 1328,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "27760:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1334,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 1331,
                                "name": "proposalDeadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1297,
                                "src": "27825:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1332,
                                "name": "BRIBE_VAULT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 711,
                                "src": "27855:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1330,
                              "name": "generateRewardIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "27787:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,address) view returns (bytes32)"
                              }
                            },
                            "id": 1333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27787:89:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "27760:116:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1342,
                                "name": "bribeIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1321,
                                "src": "28029:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1343,
                                "name": "rewardIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1329,
                                "src": "28058:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1344,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "28088:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "28088:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1336,
                                      "name": "BRIBE_VAULT",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 711,
                                      "src": "27972:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1335,
                                    "name": "IBribeVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 704,
                                    "src": "27960:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IBribeVault_$704_$",
                                      "typeString": "type(contract IBribeVault)"
                                    }
                                  },
                                  "id": 1337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27960:24:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBribeVault_$704",
                                    "typeString": "contract IBribeVault"
                                  }
                                },
                                "id": 1338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "depositBribe",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 703,
                                "src": "27960:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,bytes32,address) payable external"
                                }
                              },
                              "id": 1341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "expression": {
                                    "id": 1339,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "28005:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "28005:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "27960:55:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$value",
                                "typeString": "function (bytes32,bytes32,address) payable external"
                              }
                            },
                            "id": 1346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27960:148:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1347,
                          "nodeType": "ExpressionStatement",
                          "src": "27960:148:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 1349,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1291,
                                "src": "28150:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1350,
                                "name": "BRIBE_VAULT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 711,
                                "src": "28172:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1351,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "28197:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "28197:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1353,
                                "name": "bribeIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1321,
                                "src": "28220:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1354,
                                "name": "rewardIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1329,
                                "src": "28249:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1355,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "28279:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "28279:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 1348,
                              "name": "DepositBribe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "28124:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                                "typeString": "function (bytes32,address,uint256,bytes32,bytes32,address)"
                              }
                            },
                            "id": 1357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28124:175:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1358,
                          "nodeType": "EmitStatement",
                          "src": "28119:180:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1289,
                      "nodeType": "StructuredDocumentation",
                      "src": "27137:120:0",
                      "text": "@notice Deposit bribe for a proposal (native token only)\n@param  proposal  bytes32  Proposal"
                    },
                    "functionSelector": "2f476003",
                    "id": 1360,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "id": 1294,
                        "modifierName": {
                          "id": 1293,
                          "name": "nonReentrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "27319:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$__$",
                            "typeString": "modifier ()"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "27319:12:0"
                      }
                    ],
                    "name": "depositBribe",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1292,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1291,
                          "mutability": "mutable",
                          "name": "proposal",
                          "nodeType": "VariableDeclaration",
                          "scope": 1360,
                          "src": "27284:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1290,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "27284:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "27283:18:0"
                    },
                    "returnParameters": {
                      "id": 1295,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "27332:0:0"
                    },
                    "scope": 1381,
                    "src": "27262:1044:0",
                    "stateMutability": "payable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 1379,
                      "nodeType": "Block",
                      "src": "28657:101:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1366,
                                "name": "rewardForwarding",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 726,
                                "src": "28667:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                  "typeString": "mapping(address => address)"
                                }
                              },
                              "id": 1369,
                              "indexExpression": {
                                "expression": {
                                  "id": 1367,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "28684:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "28684:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "28667:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1370,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "28698:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "28667:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1372,
                          "nodeType": "ExpressionStatement",
                          "src": "28667:33:0"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1374,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "28736:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "28736:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 1376,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1363,
                                "src": "28748:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1373,
                              "name": "SetRewardForwarding",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "28716:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                "typeString": "function (address,address)"
                              }
                            },
                            "id": 1377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28716:35:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1378,
                          "nodeType": "EmitStatement",
                          "src": "28711:40:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1361,
                      "nodeType": "StructuredDocumentation",
                      "src": "28312:290:0",
                      "text": "@notice Voters can opt in or out of reward-forwarding\n@notice Opt-in: A voter sets another address to forward rewards to\n@notice Opt-out: A voter sets their own address or the zero address\n@param  to  address  Account that rewards will be sent to"
                    },
                    "functionSelector": "f96258c4",
                    "id": 1380,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "setRewardForwarding",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1364,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1363,
                          "mutability": "mutable",
                          "name": "to",
                          "nodeType": "VariableDeclaration",
                          "scope": 1380,
                          "src": "28636:10:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1362,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28636:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "28635:12:0"
                    },
                    "returnParameters": {
                      "id": 1365,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "28657:0:0"
                    },
                    "scope": 1381,
                    "src": "28607:151:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  }
                ],
                "scope": 1531,
                "src": "18551:10209:0"
              },
              {
                "id": 1382,
                "literals": [
                  "solidity",
                  "^",
                  "0.7",
                  ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "28800:23:0"
              },
              {
                "abstract": false,
                "baseContracts": [
                  {
                    "baseName": {
                      "id": 1383,
                      "name": "BribeBase",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1381,
                      "src": "28851:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BribeBase_$1381",
                        "typeString": "contract BribeBase"
                      }
                    },
                    "id": 1384,
                    "nodeType": "InheritanceSpecifier",
                    "src": "28851:9:0"
                  }
                ],
                "contractDependencies": [
                  73,
                  94,
                  307,
                  329,
                  632,
                  671,
                  1381
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 1530,
                "linearizedBaseContracts": [
                  1530,
                  1381,
                  671,
                  632,
                  329,
                  307,
                  73,
                  94
                ],
                "name": "BalancerBribe",
                "nodeType": "ContractDefinition",
                "nodes": [
                  {
                    "constant": false,
                    "functionSelector": "b0539187",
                    "id": 1387,
                    "mutability": "mutable",
                    "name": "gauges",
                    "nodeType": "VariableDeclaration",
                    "scope": 1530,
                    "src": "28867:23:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 1385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28867:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1386,
                      "nodeType": "ArrayTypeName",
                      "src": "28867:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "constant": false,
                    "functionSelector": "3d105030",
                    "id": 1391,
                    "mutability": "mutable",
                    "name": "indexOfGauge",
                    "nodeType": "VariableDeclaration",
                    "scope": 1530,
                    "src": "28896:47:0",
                    "stateVariable": true,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "typeName": {
                      "id": 1390,
                      "keyType": {
                        "id": 1388,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28904:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "28896:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 1389,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28915:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    },
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 1400,
                      "nodeType": "Block",
                      "src": "29032:2:0",
                      "statements": []
                    },
                    "id": 1401,
                    "implemented": true,
                    "kind": "constructor",
                    "modifiers": [
                      {
                        "arguments": [
                          {
                            "id": 1396,
                            "name": "_BRIBE_VAULT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1393,
                            "src": "29002:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "42414c414e434552",
                            "id": 1397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29016:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b774acb85c844ceba5af7a7d2c1ae87bec3d9ae928aa7bb14ad9ece203e2880e",
                              "typeString": "literal_string \"BALANCER\""
                            },
                            "value": "BALANCER"
                          }
                        ],
                        "id": 1398,
                        "modifierName": {
                          "id": 1395,
                          "name": "BribeBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1381,
                          "src": "28992:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BribeBase_$1381_$",
                            "typeString": "type(contract BribeBase)"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "28992:35:0"
                      }
                    ],
                    "name": "",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1394,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1393,
                          "mutability": "mutable",
                          "name": "_BRIBE_VAULT",
                          "nodeType": "VariableDeclaration",
                          "scope": 1401,
                          "src": "28962:20:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28962:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "28961:22:0"
                    },
                    "returnParameters": {
                      "id": 1399,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "29032:0:0"
                    },
                    "scope": 1530,
                    "src": "28950:84:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 1465,
                      "nodeType": "Block",
                      "src": "29319:396:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1412,
                                  "name": "gauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1404,
                                  "src": "29337:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1415,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "29354:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1414,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "29346:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1413,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "29346:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1416,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "29346:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "29337:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c6964206761756765",
                                "id": 1418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29358:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f01a4186ff9a4f4fec3be353497709ea5e4152dad176712bbaa55bd57735b49",
                                  "typeString": "literal_string \"Invalid gauge\""
                                },
                                "value": "Invalid gauge"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0f01a4186ff9a4f4fec3be353497709ea5e4152dad176712bbaa55bd57735b49",
                                  "typeString": "literal_string \"Invalid gauge\""
                                }
                              ],
                              "id": 1411,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "29329:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29329:45:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1420,
                          "nodeType": "ExpressionStatement",
                          "src": "29329:45:0"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1421,
                                  "name": "gauges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1387,
                                  "src": "29451:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "29451:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29468:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "29451:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 1435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1429,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1425,
                                        "name": "indexOfGauge",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1391,
                                        "src": "29486:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1427,
                                      "indexExpression": {
                                        "id": 1426,
                                        "name": "gauge",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1404,
                                        "src": "29499:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "29486:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1428,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "29509:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "29486:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 1434,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1430,
                                        "name": "gauges",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1387,
                                        "src": "29514:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1432,
                                      "indexExpression": {
                                        "hexValue": "30",
                                        "id": 1431,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "29521:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "29514:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "id": 1433,
                                      "name": "gauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1404,
                                      "src": "29527:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "29514:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "29486:46:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1436,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "29485:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "29451:82:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1454,
                          "nodeType": "IfStatement",
                          "src": "29434:206:0",
                          "trueBody": {
                            "id": 1453,
                            "nodeType": "Block",
                            "src": "29544:96:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1441,
                                      "name": "gauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1404,
                                      "src": "29570:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1438,
                                      "name": "gauges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1387,
                                      "src": "29558:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "push",
                                    "nodeType": "MemberAccess",
                                    "src": "29558:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                                      "typeString": "function (address)"
                                    }
                                  },
                                  "id": 1442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "29558:18:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1443,
                                "nodeType": "ExpressionStatement",
                                "src": "29558:18:0"
                              },
                              {
                                "expression": {
                                  "id": 1451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1444,
                                      "name": "indexOfGauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1391,
                                      "src": "29590:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1446,
                                    "indexExpression": {
                                      "id": 1445,
                                      "name": "gauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1404,
                                      "src": "29603:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "29590:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1447,
                                        "name": "gauges",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1387,
                                        "src": "29612:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1448,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "29612:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "29628:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "29612:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "29590:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1452,
                                "nodeType": "ExpressionStatement",
                                "src": "29590:39:0"
                              }
                            ]
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1459,
                                        "name": "gauge",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1404,
                                        "src": "29690:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1457,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "29673:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1458,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "29673:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1460,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "29673:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1456,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "29663:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "29663:34:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1462,
                                "name": "deadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1406,
                                "src": "29699:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1455,
                              "name": "_setProposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "29650:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                                "typeString": "function (bytes32,uint256)"
                              }
                            },
                            "id": 1463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29650:58:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1464,
                          "nodeType": "ExpressionStatement",
                          "src": "29650:58:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1402,
                      "nodeType": "StructuredDocumentation",
                      "src": "29040:173:0",
                      "text": "@notice Set a single proposal for a liquidity gauge\n@param  gauge     address  Gauge address\n@param  deadline  uint256  Proposal deadline"
                    },
                    "functionSelector": "7bb4dbb9",
                    "id": 1466,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "id": 1409,
                        "modifierName": {
                          "id": 1408,
                          "name": "onlyAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "29300:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$__$",
                            "typeString": "modifier ()"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "29300:14:0"
                      }
                    ],
                    "name": "setGaugeProposal",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1407,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1404,
                          "mutability": "mutable",
                          "name": "gauge",
                          "nodeType": "VariableDeclaration",
                          "scope": 1466,
                          "src": "29244:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "29244:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1406,
                          "mutability": "mutable",
                          "name": "deadline",
                          "nodeType": "VariableDeclaration",
                          "scope": 1466,
                          "src": "29259:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1405,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "29259:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "29243:33:0"
                    },
                    "returnParameters": {
                      "id": 1410,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "29319:0:0"
                    },
                    "scope": 1530,
                    "src": "29218:497:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "public"
                  },
                  {
                    "body": {
                      "id": 1518,
                      "nodeType": "Block",
                      "src": "30034:286:0",
                      "statements": [
                        {
                          "assignments": [
                            1479
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1479,
                              "mutability": "mutable",
                              "name": "gaugeLen",
                              "nodeType": "VariableDeclaration",
                              "scope": 1518,
                              "src": "30044:16:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1478,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "30044:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1482,
                          "initialValue": {
                            "expression": {
                              "id": 1480,
                              "name": "gauges_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1470,
                              "src": "30063:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 1481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "30063:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "30044:33:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1484,
                                  "name": "gaugeLen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1479,
                                  "src": "30095:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "30107:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "30095:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e76616c6964206761756765735f",
                                "id": 1487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30110:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a5e4ede8db827d4240a57995fc4cbf85585ad4e5f99cb7eb4cb28d07bcf1e5f1",
                                  "typeString": "literal_string \"Invalid gauges_\""
                                },
                                "value": "Invalid gauges_"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a5e4ede8db827d4240a57995fc4cbf85585ad4e5f99cb7eb4cb28d07bcf1e5f1",
                                  "typeString": "literal_string \"Invalid gauges_\""
                                }
                              ],
                              "id": 1483,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "30087:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30087:41:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1489,
                          "nodeType": "ExpressionStatement",
                          "src": "30087:41:0"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1491,
                                  "name": "gaugeLen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1479,
                                  "src": "30146:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1492,
                                    "name": "deadlines",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1473,
                                    "src": "30158:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 1493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "30158:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "30146:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "417272617973206c656e677468206d69736d61746368",
                                "id": 1495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30176:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
                                  "typeString": "literal_string \"Arrays length mismatch\""
                                },
                                "value": "Arrays length mismatch"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
                                  "typeString": "literal_string \"Arrays length mismatch\""
                                }
                              ],
                              "id": 1490,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "30138:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30138:63:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1497,
                          "nodeType": "ExpressionStatement",
                          "src": "30138:63:0"
                        },
                        {
                          "body": {
                            "id": 1516,
                            "nodeType": "Block",
                            "src": "30247:67:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 1508,
                                        "name": "gauges_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1470,
                                        "src": "30278:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 1510,
                                      "indexExpression": {
                                        "id": 1509,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1499,
                                        "src": "30286:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "30278:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 1511,
                                        "name": "deadlines",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1473,
                                        "src": "30290:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                          "typeString": "uint256[] calldata"
                                        }
                                      },
                                      "id": 1513,
                                      "indexExpression": {
                                        "id": 1512,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1499,
                                        "src": "30300:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "30290:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1507,
                                    "name": "setGaugeProposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1466,
                                    "src": "30261:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256)"
                                    }
                                  },
                                  "id": 1514,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "30261:42:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1515,
                                "nodeType": "ExpressionStatement",
                                "src": "30261:42:0"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1501,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1499,
                              "src": "30228:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1502,
                              "name": "gaugeLen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "30232:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30228:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1517,
                          "initializationExpression": {
                            "assignments": [
                              1499
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1499,
                                "mutability": "mutable",
                                "name": "i",
                                "nodeType": "VariableDeclaration",
                                "scope": 1517,
                                "src": "30217:9:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1498,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "30217:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1500,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "30217:9:0"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 1505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "30242:3:0",
                              "subExpression": {
                                "id": 1504,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1499,
                                "src": "30244:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1506,
                            "nodeType": "ExpressionStatement",
                            "src": "30242:3:0"
                          },
                          "nodeType": "ForStatement",
                          "src": "30212:102:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1467,
                      "nodeType": "StructuredDocumentation",
                      "src": "29721:177:0",
                      "text": "@notice Set multiple proposals for many gauges\n@param  gauges_    address[]  Gauge addresses\n@param  deadlines  uint256[]  Proposal deadlines"
                    },
                    "functionSelector": "7a422d2f",
                    "id": 1519,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [
                      {
                        "id": 1476,
                        "modifierName": {
                          "id": 1475,
                          "name": "onlyAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "30019:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_modifier$__$",
                            "typeString": "modifier ()"
                          }
                        },
                        "nodeType": "ModifierInvocation",
                        "src": "30019:14:0"
                      }
                    ],
                    "name": "setGaugeProposals",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1474,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1470,
                          "mutability": "mutable",
                          "name": "gauges_",
                          "nodeType": "VariableDeclaration",
                          "scope": 1519,
                          "src": "29939:26:0",
                          "stateVariable": false,
                          "storageLocation": "calldata",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1468,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "29939:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1469,
                            "nodeType": "ArrayTypeName",
                            "src": "29939:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1473,
                          "mutability": "mutable",
                          "name": "deadlines",
                          "nodeType": "VariableDeclaration",
                          "scope": 1519,
                          "src": "29975:28:0",
                          "stateVariable": false,
                          "storageLocation": "calldata",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1471,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "29975:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1472,
                            "nodeType": "ArrayTypeName",
                            "src": "29975:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                              "typeString": "uint256[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "29929:80:0"
                    },
                    "returnParameters": {
                      "id": 1477,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "30034:0:0"
                    },
                    "scope": 1530,
                    "src": "29903:417:0",
                    "stateMutability": "nonpayable",
                    "virtual": false,
                    "visibility": "external"
                  },
                  {
                    "body": {
                      "id": 1528,
                      "nodeType": "Block",
                      "src": "30439:30:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 1526,
                            "name": "gauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1387,
                            "src": "30456:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "functionReturnParameters": 1525,
                          "id": 1527,
                          "nodeType": "Return",
                          "src": "30449:13:0"
                        }
                      ]
                    },
                    "documentation": {
                      "id": 1520,
                      "nodeType": "StructuredDocumentation",
                      "src": "30326:46:0",
                      "text": "@notice Get list of gauges"
                    },
                    "functionSelector": "5574f46d",
                    "id": 1529,
                    "implemented": true,
                    "kind": "function",
                    "modifiers": [],
                    "name": "getGauges",
                    "nodeType": "FunctionDefinition",
                    "parameters": {
                      "id": 1521,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "30395:2:0"
                    },
                    "returnParameters": {
                      "id": 1525,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1524,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 1529,
                          "src": "30421:16:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1522,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "30421:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1523,
                            "nodeType": "ArrayTypeName",
                            "src": "30421:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "30420:18:0"
                    },
                    "scope": 1530,
                    "src": "30377:92:0",
                    "stateMutability": "view",
                    "virtual": false,
                    "visibility": "external"
                  }
                ],
                "scope": 1531,
                "src": "28825:1646:0"
              }
            ],
            "src": "222:30249:0"
          },
          "id": 0
        }
      },
      "contracts": {
        "solace_swap/contracts/BalancerBribe.sol": {
          "AccessControl": {
            "abi": [
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                  }
                ],
                "name": "RoleAdminChanged",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  }
                ],
                "name": "RoleGranted",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  }
                ],
                "name": "RoleRevoked",
                "type": "event"
              },
              {
                "inputs": [],
                "name": "DEFAULT_ADMIN_ROLE",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  }
                ],
                "name": "getRoleAdmin",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "grantRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "hasRole",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "renounceRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "revokeRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                  }
                ],
                "name": "supportsInterface",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              }
            ],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "methodIdentifiers": {
                "DEFAULT_ADMIN_ROLE()": "a217fddf",
                "getRoleAdmin(bytes32)": "248a9ca3",
                "grantRole(bytes32,address)": "2f2ff15d",
                "hasRole(bytes32,address)": "91d14854",
                "renounceRole(bytes32,address)": "36568abe",
                "revokeRole(bytes32,address)": "d547741f",
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "BalancerBribe": {
            "abi": [
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "_BRIBE_VAULT",
                    "type": "address"
                  }
                ],
                "stateMutability": "nonpayable",
                "type": "constructor"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "tokens",
                    "type": "address[]"
                  }
                ],
                "name": "AddWhitelistTokens",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "bribeIdentifier",
                    "type": "bytes32"
                  },
                  {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "rewardIdentifier",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "briber",
                    "type": "address"
                  }
                ],
                "name": "DepositBribe",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address",
                    "name": "teamMember",
                    "type": "address"
                  }
                ],
                "name": "GrantTeamRole",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "tokens",
                    "type": "address[]"
                  }
                ],
                "name": "RemoveWhitelistTokens",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address",
                    "name": "teamMember",
                    "type": "address"
                  }
                ],
                "name": "RevokeTeamRole",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                  }
                ],
                "name": "RoleAdminChanged",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  }
                ],
                "name": "RoleGranted",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  }
                ],
                "name": "RoleRevoked",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                  }
                ],
                "name": "SetProposal",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                  },
                  {
                    "indexed": false,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  }
                ],
                "name": "SetRewardForwarding",
                "type": "event"
              },
              {
                "inputs": [],
                "name": "BRIBE_VAULT",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "DEFAULT_ADMIN_ROLE",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "PROTOCOL",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "TEAM_ROLE",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address[]",
                    "name": "tokens",
                    "type": "address[]"
                  }
                ],
                "name": "addWhitelistTokens",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "name": "allWhitelistedTokens",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  }
                ],
                "name": "depositBribe",
                "outputs": [],
                "stateMutability": "payable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "name": "depositBribeERC20",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "name": "gauges",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint256",
                    "name": "proposalDeadline",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  }
                ],
                "name": "generateBribeVaultIdentifier",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "identifier",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "uint256",
                    "name": "proposalDeadline",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  }
                ],
                "name": "generateRewardIdentifier",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "identifier",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint256",
                    "name": "proposalDeadline",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  }
                ],
                "name": "getBribe",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "bribeToken",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "bribeAmount",
                    "type": "uint256"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "getGauges",
                "outputs": [
                  {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  }
                ],
                "name": "getRoleAdmin",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "getWhitelistedTokens",
                "outputs": [
                  {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "grantRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "teamMember",
                    "type": "address"
                  }
                ],
                "name": "grantTeamRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "hasRole",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "name": "indexOfGauge",
                "outputs": [
                  {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "name": "indexOfWhitelistedToken",
                "outputs": [
                  {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  }
                ],
                "name": "isWhitelistedToken",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "name": "proposalDeadlines",
                "outputs": [
                  {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address[]",
                    "name": "tokens",
                    "type": "address[]"
                  }
                ],
                "name": "removeWhitelistTokens",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "renounceRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "revokeRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "teamMember",
                    "type": "address"
                  }
                ],
                "name": "revokeTeamRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "name": "rewardForwarding",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "gauge",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                  }
                ],
                "name": "setGaugeProposal",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address[]",
                    "name": "gauges_",
                    "type": "address[]"
                  },
                  {
                    "internalType": "uint256[]",
                    "name": "deadlines",
                    "type": "uint256[]"
                  }
                ],
                "name": "setGaugeProposals",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  }
                ],
                "name": "setRewardForwarding",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                  }
                ],
                "name": "supportsInterface",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              }
            ],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "60c06040523480156200001157600080fd5b50604051620026b4380380620026b48339810160408190526200003491620001ba565b6040805180820190915260088152672120a620a721a2a960c11b60208201526001805581906001600160a01b0382166200008b5760405162461bcd60e51b8152600401620000829062000251565b60405180910390fd5b6001600160601b0319606083901b166080528051620000be5760405162461bcd60e51b8152600401620000829062000226565b80604051602001620000d19190620001ea565b60408051601f19818403018152919052805160209091012060a052620000f960003362000102565b50505062000288565b6200010e82826200018d565b62000189576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905562000148620001b6565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3390565b600060208284031215620001cc578081fd5b81516001600160a01b0381168114620001e3578182fd5b9392505050565b60008251815b818110156200020c5760208186018101518583015201620001f0565b818111156200021b5782828501525b509190910192915050565b602080825260119082015270125b9d985b1a590817d41493d513d0d3d3607a1b604082015260600190565b60208082526014908201527f496e76616c6964205f42524942455f5641554c54000000000000000000000000604082015260600190565b60805160601c60a0516123d8620002dc600039806108b952806109115280610d1c52508061070c528061073a528061076252806107ef5280610e7b52806112045280611353528061156e52506123d86000f3fe6080604052600436106101d85760003560e01c80638e8efaee11610102578063be309bca11610095578063e468baf011610064578063e468baf01461052d578063f52c395a1461054d578063f7e6b46b1461056d578063f96258c41461059b576101d8565b8063be309bca146104c3578063d547741f146104d8578063e26f7900146104f8578063e3113df91461050d576101d8565b8063a602d140116100d1578063a602d14014610443578063ab37f48614610463578063b053918714610483578063b25706f3146104a3576101d8565b80638e8efaee146103d957806391b9b827146103f957806391d148541461040e578063a217fddf1461042e576101d8565b80633d1050301161017a5780635574f46d116101495780635574f46d146103575780635699fbad146103795780637a422d2f146103995780637bb4dbb9146103b9576101d8565b80633d105030146102e25780633eeed1a51461030257806340c581891461032257806349d5e60414610342576101d8565b8063248a9ca3116101b6578063248a9ca31461026d5780632f2ff15d1461028d5780632f476003146102af57806336568abe146102c2576101d8565b806301ffc9a7146101dd57806307cd2ffe146102135780632129831014610240575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004611cab565b6105bb565b60405161020a9190611ec1565b60405180910390f35b34801561021f57600080fd5b5061023361022e366004611ad8565b610619565b60405161020a9190611ddf565b34801561024c57600080fd5b5061026061025b366004611bf5565b610634565b60405161020a9190611ecc565b34801561027957600080fd5b50610260610288366004611bf5565b610646565b34801561029957600080fd5b506102ad6102a8366004611c0d565b61065b565b005b6102ad6102bd366004611bf5565b610684565b3480156102ce57600080fd5b506102ad6102dd366004611c0d565b61085d565b3480156102ee57600080fd5b506102606102fd366004611ad8565b6108a3565b34801561030e57600080fd5b5061026061031d366004611c73565b6108b5565b34801561032e57600080fd5b5061026061033d366004611c0d565b61090d565b34801561034e57600080fd5b50610260610962565b34801561036357600080fd5b5061036c610986565b60405161020a9190611e74565b34801561038557600080fd5b506102ad610394366004611ad8565b6109e8565b3480156103a557600080fd5b506102ad6103b4366004611b8c565b610aa1565b3480156103c557600080fd5b506102ad6103d4366004611af4565b610b8c565b3480156103e557600080fd5b506102606103f4366004611ad8565b610d08565b34801561040557600080fd5b50610260610d1a565b34801561041a57600080fd5b506101fd610429366004611c0d565b610d3e565b34801561043a57600080fd5b50610260610d67565b34801561044f57600080fd5b506102ad61045e366004611c3c565b610d6c565b34801561046f57600080fd5b506101fd61047e366004611ad8565b610f46565b34801561048f57600080fd5b5061023361049e366004611bf5565b610fad565b3480156104af57600080fd5b506102ad6104be366004611b4c565b610fd4565b3480156104cf57600080fd5b50610233611202565b3480156104e457600080fd5b506102ad6104f3366004611c0d565b611226565b34801561050457600080fd5b5061036c611245565b34801561051957600080fd5b506102ad610528366004611b4c565b6112a5565b34801561053957600080fd5b50610233610548366004611bf5565b6114cf565b34801561055957600080fd5b506102ad610568366004611ad8565b6114dc565b34801561057957600080fd5b5061058d610588366004611c73565b611569565b60405161020a929190611e0d565b3480156105a757600080fd5b506102ad6105b6366004611ad8565b61161d565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061061157506106118261168d565b90505b919050565b6003602052600090815260409020546001600160a01b031681565b60026020526000908152604090205481565b60009081526020819052604090206001015490565b61066482610646565b610675816106706116d7565b6116db565b61067f838361173f565b505050565b600260015414156106b05760405162461bcd60e51b81526004016106a7906121e5565b60405180910390fd5b60026001819055600082815260209190915260409020544281116106e65760405162461bcd60e51b81526004016106a7906121ae565b346107035760405162461bcd60e51b81526004016106a79061221c565b600061073083837f00000000000000000000000000000000000000000000000000000000000000006108b5565b9050600061075e837f000000000000000000000000000000000000000000000000000000000000000061090d565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631933a4eb348484336040518563ffffffff1660e01b81526004016107b193929190611ed5565b6000604051808303818588803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b5050505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316857f6f1e998489da0152047f9f97b3c6f21b503848ef7d66c815ebd247b87066e90b34868660405161084b93929190612344565b60405180910390a45050600180555050565b6108656116d7565b6001600160a01b0316816001600160a01b0316146108955760405162461bcd60e51b81526004016106a7906122e7565b61089f82826117c4565b5050565b60076020526000908152604090205481565b60007f00000000000000000000000000000000000000000000000000000000000000008484846040516020016108ee9493929190611d08565b6040516020818303038152906040528051906020012090509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000838360405160200161094493929190611d36565b60405160208183030381529060405280519060200120905092915050565b7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3381565b606060068054806020026020016040519081016040528092919081815260200182805480156109de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109c0575b5050505050905090565b60006109f6816106706116d7565b610a207f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3383610d3e565b610a3c5760405162461bcd60e51b81526004016106a79061209b565b610a667f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b33836117c4565b7f708bd40f8f4d2ad60032caea0582161d35c50177cc0b2c575b5d483bd2902caa82604051610a959190611ddf565b60405180910390a15050565b610aac600033610d3e565b80610adc5750610adc7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610d3e565b610af85760405162461bcd60e51b81526004016106a7906122b0565b8280610b165760405162461bcd60e51b81526004016106a790612109565b808214610b355760405162461bcd60e51b81526004016106a79061202d565b60005b81811015610b8457610b7c868683818110610b4f57fe5b9050602002016020810190610b649190611ad8565b858584818110610b7057fe5b90506020020135610b8c565b600101610b38565b505050505050565b610b97600033610d3e565b80610bc75750610bc77f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610d3e565b610be35760405162461bcd60e51b81526004016106a7906122b0565b6001600160a01b038216610c095760405162461bcd60e51b81526004016106a790611f88565b6006541580610c6457506001600160a01b038216600090815260076020526040902054158015610c645750816001600160a01b03166006600081548110610c4c57fe5b6000918252602090912001546001600160a01b031614155b15610cd857600680546001810182557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516908117909155905460009182526007602052604090912060001990910190555b61089f82604051602001610cec9190611ceb565b6040516020818303038152906040528051906020012082611847565b60046020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b60026001541415610d8f5760405162461bcd60e51b81526004016106a7906121e5565b6002600181905560008481526020919091526040902054428111610dc55760405162461bcd60e51b81526004016106a7906121ae565b6001600160a01b038316610deb5760405162461bcd60e51b81526004016106a790612064565b610df483610f46565b610e105760405162461bcd60e51b81526004016106a790611ff6565b81610e2d5760405162461bcd60e51b81526004016106a79061221c565b6000610e3a8583866108b5565b90506000610e48838661090d565b6040517f69b999340000000000000000000000000000000000000000000000000000000081529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369b9993490610eb890859085908a908a903390600401611ef4565b600060405180830381600087803b158015610ed257600080fd5b505af1158015610ee6573d6000803e3d6000fd5b50505050336001600160a01b0316856001600160a01b0316877f6f1e998489da0152047f9f97b3c6f21b503848ef7d66c815ebd247b87066e90b878686604051610f3293929190612344565b60405180910390a450506001805550505050565b600554600090610f5857506000610614565b6001600160a01b0382166000908152600460205260409020541515806106115750816001600160a01b03166005600081548110610f9157fe5b6000918252602090912001546001600160a01b03161492915050565b60068181548110610fba57fe5b6000918252602090912001546001600160a01b0316905081565b610fdf600033610d3e565b8061100f575061100f7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610d3e565b61102b5760405162461bcd60e51b81526004016106a7906122b0565b60005b818110156111d05761105a83838381811061104557fe5b905060200201602081019061047e9190611ad8565b6110765760405162461bcd60e51b81526004016106a790612140565b60006004600085858581811061108857fe5b905060200201602081019061109d9190611ad8565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905060006005600160058054905003815481106110d757fe5b600091825260209091200154600580546001600160a01b03909216925082918490811061110057fe5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0394851617905591831681526004918290526040812084905586868681811061115357fe5b90506020020160208101906111689190611ad8565b6001600160a01b03166001600160a01b0316815260200190815260200160002060009055600580548061119757fe5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055505060010161102e565b507faf397cf4dd9b218aa8392d733be436eca6dc865d9fef8bddc37ff3cce5a583268282604051610a95929190611e26565b7f000000000000000000000000000000000000000000000000000000000000000081565b61122f82610646565b61123b816106706116d7565b61067f83836117c4565b606060058054806020026020016040519081016040528092919081815260200182805480156109de576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116109c0575050505050905090565b6112b0600033610d3e565b806112e057506112e07f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610d3e565b6112fc5760405162461bcd60e51b81526004016106a7906122b0565b60005b8181101561149d57600083838381811061131557fe5b905060200201602081019061132a9190611ad8565b6001600160a01b031614156113515760405162461bcd60e51b81526004016106a790612064565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683838381811061138757fe5b905060200201602081019061139c9190611ad8565b6001600160a01b031614156113c35760405162461bcd60e51b81526004016106a790611fbf565b6113d283838381811061104557fe5b156113ef5760405162461bcd60e51b81526004016106a7906120d2565b60058383838181106113fd57fe5b90506020020160208101906114129190611ad8565b815460018101835560009283526020832001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055600554600019019060049085858581811061146657fe5b905060200201602081019061147b9190611ad8565b6001600160a01b031681526020810191909152604001600020556001016112ff565b507fee3f29a31e91df914992dacfb3a9feb176d6cb3c1e35a4ebbe186aeb4827a60b8282604051610a95929190611e26565b60058181548110610fba57fe5b60006114ea816106706116d7565b6001600160a01b0382166115105760405162461bcd60e51b81526004016106a79061209b565b61153a7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b338361173f565b7fd36b0989e598a1b05388150a9a8c84925e2710d91910406b8735e01f3ed0281782604051610a959190611ddf565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c4ef0d56115a68787876108b5565b6040518263ffffffff1660e01b81526004016115c29190611ecc565b604080518083038186803b1580156115d957600080fd5b505afa1580156115ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116119190611b1f565b91509150935093915050565b3360008181526003602052604090819020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516179055517fbbd6eb1e2586cc8ea8e80aa1ccf25590beffdd2cb73367b5ac49214505bb48c491611682918490611df3565b60405180910390a150565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3390565b6116e58282610d3e565b61089f576116fd816001600160a01b031660146118d2565b6117088360206118d2565b604051602001611719929190611d5e565b60408051601f198184030181529082905262461bcd60e51b82526106a791600401611f20565b6117498282610d3e565b61089f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556117806116d7565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117ce8282610d3e565b1561089f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556118036116d7565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b816118645760405162461bcd60e51b81526004016106a790612279565b4281116118835760405162461bcd60e51b81526004016106a790612177565b600082815260026020526040908190208290555182907f04d4a8b224eb4e22836563fb784ab6779243c553d0872181d726f98890ec0473906118c6908490611ecc565b60405180910390a25050565b6060808260020260020167ffffffffffffffff811180156118f257600080fd5b506040519080825280601f01601f19166020018201604052801561191d576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061194e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106119ab57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600160028402015b6001811115611a69577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611a1a57fe5b1a60f81b828281518110611a2a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93600019016119e2565b508315611a885760405162461bcd60e51b81526004016106a790611f53565b9392505050565b60008083601f840112611aa0578182fd5b50813567ffffffffffffffff811115611ab7578182fd5b6020830191508360208083028501011115611ad157600080fd5b9250929050565b600060208284031215611ae9578081fd5b8135611a888161238a565b60008060408385031215611b06578081fd5b8235611b118161238a565b946020939093013593505050565b60008060408385031215611b31578182fd5b8251611b3c8161238a565b6020939093015192949293505050565b60008060208385031215611b5e578182fd5b823567ffffffffffffffff811115611b74578283fd5b611b8085828601611a8f565b90969095509350505050565b60008060008060408587031215611ba1578182fd5b843567ffffffffffffffff80821115611bb8578384fd5b611bc488838901611a8f565b90965094506020870135915080821115611bdc578384fd5b50611be987828801611a8f565b95989497509550505050565b600060208284031215611c06578081fd5b5035919050565b60008060408385031215611c1f578182fd5b823591506020830135611c318161238a565b809150509250929050565b600080600060608486031215611c50578283fd5b833592506020840135611c628161238a565b929592945050506040919091013590565b600080600060608486031215611c87578283fd5b83359250602084013591506040840135611ca08161238a565b809150509250925092565b600060208284031215611cbc578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a88578182fd5b60609190911b6bffffffffffffffffffffffff1916815260140190565b93845260208401929092526040830152606090811b6bffffffffffffffffffffffff19169082015260740190565b928352602083019190915260601b6bffffffffffffffffffffffff1916604082015260540190565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611d9681601785016020880161235a565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611dd381602884016020880161235a565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60208082528181018390526000908460408401835b86811015611e69578235611e4e8161238a565b6001600160a01b031682529183019190830190600101611e3b565b509695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611eb55783516001600160a01b031683529284019291840191600101611e90565b50909695505050505050565b901515815260200190565b90815260200190565b92835260208301919091526001600160a01b0316604082015260600190565b94855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b6000602082528251806020840152611f3f81604085016020870161235a565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252600d908201527f496e76616c696420676175676500000000000000000000000000000000000000604082015260600190565b6020808252601c908201527f43616e6e6f742077686974656c6973742042524942455f5641554c5400000000604082015260600190565b60208082526018908201527f546f6b656e206973206e6f742077686974656c69737465640000000000000000604082015260600190565b60208082526016908201527f417272617973206c656e677468206d69736d6174636800000000000000000000604082015260600190565b6020808252600d908201527f496e76616c696420746f6b656e00000000000000000000000000000000000000604082015260600190565b60208082526012908201527f496e76616c6964207465616d4d656d6265720000000000000000000000000000604082015260600190565b60208082526019908201527f546f6b656e20616c72656164792077686974656c697374656400000000000000604082015260600190565b6020808252600f908201527f496e76616c6964206761756765735f0000000000000000000000000000000000604082015260600190565b60208082526015908201527f546f6b656e206e6f742077686974656c69737465640000000000000000000000604082015260600190565b6020808252601e908201527f446561646c696e65206d75737420626520696e20746865206675747572650000604082015260600190565b6020808252601c908201527f50726f706f73616c20646561646c696e65206861732070617373656400000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526023908201527f427269626520616d6f756e74206d75737420626520677265617465722074686160408201527f6e20300000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526010908201527f496e76616c69642070726f706f73616c00000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b9283526020830191909152604082015260600190565b60005b8381101561237557818101518382015260200161235d565b83811115612384576000848401525b50505050565b6001600160a01b038116811461239f57600080fd5b5056fea264697066735822122016badc5423386884a50d60f102741e328ea469639176fd37d09fc3ff5f08eff564736f6c63430007010033",
                "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26B4 CODESIZE SUB DUP1 PUSH3 0x26B4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x2120A620A721A2A9 PUSH1 0xC1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x82 SWAP1 PUSH3 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE DUP1 MLOAD PUSH3 0xBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x82 SWAP1 PUSH3 0x226 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xD1 SWAP2 SWAP1 PUSH3 0x1EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xA0 MSTORE PUSH3 0xF9 PUSH1 0x0 CALLER PUSH3 0x102 JUMP JUMPDEST POP POP POP PUSH3 0x288 JUMP JUMPDEST PUSH3 0x10E DUP3 DUP3 PUSH3 0x18D JUMP JUMPDEST PUSH3 0x189 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x148 PUSH3 0x1B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1CC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1E3 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20C JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH3 0x1F0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x21B JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A590817D41493D513D0D3D3 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205F42524942455F5641554C54000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0x23D8 PUSH3 0x2DC PUSH1 0x0 CODECOPY DUP1 PUSH2 0x8B9 MSTORE DUP1 PUSH2 0x911 MSTORE DUP1 PUSH2 0xD1C MSTORE POP DUP1 PUSH2 0x70C MSTORE DUP1 PUSH2 0x73A MSTORE DUP1 PUSH2 0x762 MSTORE DUP1 PUSH2 0x7EF MSTORE DUP1 PUSH2 0xE7B MSTORE DUP1 PUSH2 0x1204 MSTORE DUP1 PUSH2 0x1353 MSTORE DUP1 PUSH2 0x156E MSTORE POP PUSH2 0x23D8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E8EFAEE GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xBE309BCA GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE468BAF0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE468BAF0 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xF52C395A EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xF7E6B46B EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xF96258C4 EQ PUSH2 0x59B JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xBE309BCA EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE26F7900 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xE3113DF9 EQ PUSH2 0x50D JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xA602D140 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA602D140 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xAB37F486 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0xB0539187 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xB25706F3 EQ PUSH2 0x4A3 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8E8EFAEE EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x91B9B827 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x42E JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x3D105030 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x5574F46D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x5574F46D EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x5699FBAD EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x7A422D2F EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x7BB4DBB9 EQ PUSH2 0x3B9 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x3D105030 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3EEED1A5 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x40C58189 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x49D5E604 EQ PUSH2 0x342 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x2F476003 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2C2 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7CD2FFE EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x21298310 EQ PUSH2 0x240 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x962 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0xD1A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0xD67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x45E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0xD6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0xF46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0xFAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0xFD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x1202 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1226 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0x1245 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x12A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x548 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x14CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x14DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58D PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP3 SWAP2 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x5B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x161D JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x611 JUMPI POP PUSH2 0x611 DUP3 PUSH2 0x168D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x664 DUP3 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x675 DUP2 PUSH2 0x670 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x67F DUP4 DUP4 PUSH2 0x173F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x21AE JUMP JUMPDEST CALLVALUE PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x730 DUP4 DUP4 PUSH32 0x0 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x75E DUP4 PUSH32 0x0 PUSH2 0x90D JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1933A4EB CALLVALUE DUP5 DUP5 CALLER PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x6F1E998489DA0152047F9F97B3C6F21B503848EF7D66C815EBD247B87066E90B CALLVALUE DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x84B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x865 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH2 0x89F DUP3 DUP3 PUSH2 0x17C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8EE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x944 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F6 DUP2 PUSH2 0x670 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xA20 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x209B JUMP JUMPDEST PUSH2 0xA66 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x17C4 JUMP JUMPDEST PUSH32 0x708BD40F8F4D2AD60032CAEA0582161D35C50177CC0B2C575B5D483BD2902CAA DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xAAC PUSH1 0x0 CALLER PUSH2 0xD3E JUMP JUMPDEST DUP1 PUSH2 0xADC JUMPI POP PUSH2 0xADC PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0xD3E JUMP JUMPDEST PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST DUP3 DUP1 PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2109 JUMP JUMPDEST DUP1 DUP3 EQ PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB84 JUMPI PUSH2 0xB7C DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xB4F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB64 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xB70 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB38 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB97 PUSH1 0x0 CALLER PUSH2 0xD3E JUMP JUMPDEST DUP1 PUSH2 0xBC7 JUMPI POP PUSH2 0xBC7 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0xD3E JUMP JUMPDEST PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x6 SLOAD ISZERO DUP1 PUSH2 0xC64 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0xC64 JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xC4C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST PUSH2 0x89F DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0xDF4 DUP4 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST DUP2 PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3A DUP6 DUP4 DUP7 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE48 DUP4 DUP7 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x69B9993400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x69B99934 SWAP1 PUSH2 0xEB8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP11 SWAP1 DUP11 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH32 0x6F1E998489DA0152047F9F97B3C6F21B503848EF7D66C815EBD247B87066E90B DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF32 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF58 JUMPI POP PUSH1 0x0 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x611 JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xF91 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFBA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xFDF PUSH1 0x0 CALLER PUSH2 0xD3E JUMP JUMPDEST DUP1 PUSH2 0x100F JUMPI POP PUSH2 0x100F PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x102B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x105A DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1045 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x1076 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1088 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT PUSH2 0x10D7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1100 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x1153 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x1197 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x102E JUMP JUMPDEST POP PUSH32 0xAF397CF4DD9B218AA8392D733BE436ECA6DC865D9FEF8BDDC37FF3CCE5A58326 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP3 SWAP2 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x122F DUP3 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x123B DUP2 PUSH2 0x670 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x67F DUP4 DUP4 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C0 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12B0 PUSH1 0x0 CALLER PUSH2 0xD3E JUMP JUMPDEST DUP1 PUSH2 0x12E0 JUMPI POP PUSH2 0x12E0 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x12FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x149D JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1315 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1387 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x139C SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0x13D2 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1045 JUMPI INVALID JUMPDEST ISZERO PUSH2 0x13EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x5 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x13FD JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH1 0x4 SWAP1 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1466 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x12FF JUMP JUMPDEST POP PUSH32 0xEE3F29A31E91DF914992DACFB3A9FEB176D6CB3C1E35A4EBBE186AEB4827A60B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP3 SWAP2 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFBA JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x14EA DUP2 PUSH2 0x670 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x209B JUMP JUMPDEST PUSH2 0x153A PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x173F JUMP JUMPDEST PUSH32 0xD36B0989E598A1B05388150A9A8C84925E2710D91910406B8735E01F3ED02817 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2C4EF0D5 PUSH2 0x15A6 DUP8 DUP8 DUP8 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C2 SWAP2 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE MLOAD PUSH32 0xBBD6EB1E2586CC8EA8E80AA1CCF25590BEFFDD2CB73367B5AC49214505BB48C4 SWAP2 PUSH2 0x1682 SWAP2 DUP5 SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x16E5 DUP3 DUP3 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x89F JUMPI PUSH2 0x16FD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x1708 DUP4 PUSH1 0x20 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1719 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6A7 SWAP2 PUSH1 0x4 ADD PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x1749 DUP3 DUP3 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x89F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1780 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x17CE DUP3 DUP3 PUSH2 0xD3E JUMP JUMPDEST ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1803 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 PUSH2 0x1864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2279 JUMP JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x1883 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP3 SWAP1 PUSH32 0x4D4A8B224EB4E22836563FB784AB6779243C553D0872181D726F98890EC0473 SWAP1 PUSH2 0x18C6 SWAP1 DUP5 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x2 MUL PUSH1 0x2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x191D JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x194E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x19AB JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 PUSH1 0x2 DUP5 MUL ADD JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A69 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1A1A JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A2A JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH1 0x0 NOT ADD PUSH2 0x19E2 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1A88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1AA0 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x1AD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A88 DUP2 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B06 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B11 DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B31 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x1B3C DUP2 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B5E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B74 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BA1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1BB8 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1BC4 DUP9 DUP4 DUP10 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BDC JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1BE9 DUP8 DUP3 DUP9 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C06 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C1F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1C31 DUP2 PUSH2 0x238A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C50 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1C62 DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C87 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1CA0 DUP2 PUSH2 0x238A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CBC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1A88 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP3 ADD MSTORE PUSH1 0x74 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x1D96 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x235A JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1DD3 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x235A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1E69 JUMPI DUP3 CALLDATALOAD PUSH2 0x1E4E DUP2 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E3B JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EB5 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1E90 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x235A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420676175676500000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077686974656C6973742042524942455F5641554C5400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F742077686974656C69737465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x417272617973206C656E677468206D69736D6174636800000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207465616D4D656D6265720000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C72656164792077686974656C697374656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206761756765735F0000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F742077686974656C69737465640000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x446561646C696E65206D75737420626520696E20746865206675747572650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646561646C696E65206861732070617373656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x427269626520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F706F73616C00000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2375 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x235D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2384 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x239F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBA 0xDC SLOAD 0x23 CODESIZE PUSH9 0x84A50D60F102741E32 DUP15 LOG4 PUSH10 0x639176FD37D09FC3FF5F ADDMOD 0xEF CREATE2 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
                "sourceMap": "28825:1646:0:-:0;;;28950:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19735:352;;;;;;;;;;;;-1:-1:-1;;;19735:352:0;;;;16975:1;17080:22;;29002:12;;-1:-1:-1;;;;;19812:26:0;;19804:59;;;;-1:-1:-1;;;19804:59:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;19873:26:0;;;;;;;19918:23;;19910:58;;;;-1:-1:-1;;;19910:58:0;;;;;;;:::i;:::-;20016:9;19999:27;;;;;;;;:::i;:::-;;;;-1:-1:-1;;19999:27:0;;;;;;;;;19989:38;;19999:27;19989:38;;;;19978:49;;20038:42;9874:4;20069:10;20038;:42::i;:::-;19735:352;;28950:84;28825:1646;;14639:233;14722:22;14730:4;14736:7;14722;:22::i;:::-;14717:149;;14760:6;:12;;;;;;;;;;;-1:-1:-1;;;;;14760:29:0;;;;;;;;;:36;;-1:-1:-1;;14760:36:0;14792:4;14760:36;;;14842:12;:10;:12::i;:::-;-1:-1:-1;;;;;14815:40:0;14833:7;-1:-1:-1;;;;;14815:40:0;14827:4;14815:40;;;;;;;;;;14717:149;14639:233;;:::o;10711:137::-;10789:4;10812:12;;;;;;;;;;;-1:-1:-1;;;;;10812:29:0;;;;;;;;;;;;;;;10711:137::o;3751:96::-;3830:10;3751:96;:::o;146:263:-1:-;;261:2;249:9;240:7;236:23;232:32;229:2;;;-1:-1;;267:12;229:2;83:13;;-1:-1;;;;;3181:54;;3583:35;;3573:2;;-1:-1;;3622:12;3573:2;319:74;223:186;-1:-1;;;223:186::o;1438:275::-;;579:5;2654:12;-1:-1;3320:101;3334:6;3331:1;3328:13;3320:101;;;724:4;3401:11;;;;;3395:18;3382:11;;;3375:39;3349:10;3320:101;;;3436:6;3433:1;3430:13;3427:2;;;-1:-1;3492:6;3487:3;3483:16;3476:27;3427:2;-1:-1;755:16;;;;;1574:139;-1:-1;;1574:139::o;1720:416::-;1920:2;1934:47;;;1008:2;1905:18;;;2799:19;-1:-1;;;2839:14;;;1024:40;1083:12;;;1891:245::o;2143:416::-;2343:2;2357:47;;;1334:2;2328:18;;;2799:19;1370:22;2839:14;;;1350:43;1412:12;;;2314:245::o;:::-;28825:1646:0;;;;;;;;;;;;;;"
              },
              "deployedBytecode": {
                "immutableReferences": {
                  "711": [
                    {
                      "length": 32,
                      "start": 1804
                    },
                    {
                      "length": 32,
                      "start": 1850
                    },
                    {
                      "length": 32,
                      "start": 1890
                    },
                    {
                      "length": 32,
                      "start": 2031
                    },
                    {
                      "length": 32,
                      "start": 3707
                    },
                    {
                      "length": 32,
                      "start": 4612
                    },
                    {
                      "length": 32,
                      "start": 4947
                    },
                    {
                      "length": 32,
                      "start": 5486
                    }
                  ],
                  "718": [
                    {
                      "length": 32,
                      "start": 2233
                    },
                    {
                      "length": 32,
                      "start": 2321
                    },
                    {
                      "length": 32,
                      "start": 3356
                    }
                  ]
                },
                "linkReferences": {},
                "object": "6080604052600436106101d85760003560e01c80638e8efaee11610102578063be309bca11610095578063e468baf011610064578063e468baf01461052d578063f52c395a1461054d578063f7e6b46b1461056d578063f96258c41461059b576101d8565b8063be309bca146104c3578063d547741f146104d8578063e26f7900146104f8578063e3113df91461050d576101d8565b8063a602d140116100d1578063a602d14014610443578063ab37f48614610463578063b053918714610483578063b25706f3146104a3576101d8565b80638e8efaee146103d957806391b9b827146103f957806391d148541461040e578063a217fddf1461042e576101d8565b80633d1050301161017a5780635574f46d116101495780635574f46d146103575780635699fbad146103795780637a422d2f146103995780637bb4dbb9146103b9576101d8565b80633d105030146102e25780633eeed1a51461030257806340c581891461032257806349d5e60414610342576101d8565b8063248a9ca3116101b6578063248a9ca31461026d5780632f2ff15d1461028d5780632f476003146102af57806336568abe146102c2576101d8565b806301ffc9a7146101dd57806307cd2ffe146102135780632129831014610240575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004611cab565b6105bb565b60405161020a9190611ec1565b60405180910390f35b34801561021f57600080fd5b5061023361022e366004611ad8565b610619565b60405161020a9190611ddf565b34801561024c57600080fd5b5061026061025b366004611bf5565b610634565b60405161020a9190611ecc565b34801561027957600080fd5b50610260610288366004611bf5565b610646565b34801561029957600080fd5b506102ad6102a8366004611c0d565b61065b565b005b6102ad6102bd366004611bf5565b610684565b3480156102ce57600080fd5b506102ad6102dd366004611c0d565b61085d565b3480156102ee57600080fd5b506102606102fd366004611ad8565b6108a3565b34801561030e57600080fd5b5061026061031d366004611c73565b6108b5565b34801561032e57600080fd5b5061026061033d366004611c0d565b61090d565b34801561034e57600080fd5b50610260610962565b34801561036357600080fd5b5061036c610986565b60405161020a9190611e74565b34801561038557600080fd5b506102ad610394366004611ad8565b6109e8565b3480156103a557600080fd5b506102ad6103b4366004611b8c565b610aa1565b3480156103c557600080fd5b506102ad6103d4366004611af4565b610b8c565b3480156103e557600080fd5b506102606103f4366004611ad8565b610d08565b34801561040557600080fd5b50610260610d1a565b34801561041a57600080fd5b506101fd610429366004611c0d565b610d3e565b34801561043a57600080fd5b50610260610d67565b34801561044f57600080fd5b506102ad61045e366004611c3c565b610d6c565b34801561046f57600080fd5b506101fd61047e366004611ad8565b610f46565b34801561048f57600080fd5b5061023361049e366004611bf5565b610fad565b3480156104af57600080fd5b506102ad6104be366004611b4c565b610fd4565b3480156104cf57600080fd5b50610233611202565b3480156104e457600080fd5b506102ad6104f3366004611c0d565b611226565b34801561050457600080fd5b5061036c611245565b34801561051957600080fd5b506102ad610528366004611b4c565b6112a5565b34801561053957600080fd5b50610233610548366004611bf5565b6114cf565b34801561055957600080fd5b506102ad610568366004611ad8565b6114dc565b34801561057957600080fd5b5061058d610588366004611c73565b611569565b60405161020a929190611e0d565b3480156105a757600080fd5b506102ad6105b6366004611ad8565b61161d565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061061157506106118261168d565b90505b919050565b6003602052600090815260409020546001600160a01b031681565b60026020526000908152604090205481565b60009081526020819052604090206001015490565b61066482610646565b610675816106706116d7565b6116db565b61067f838361173f565b505050565b600260015414156106b05760405162461bcd60e51b81526004016106a7906121e5565b60405180910390fd5b60026001819055600082815260209190915260409020544281116106e65760405162461bcd60e51b81526004016106a7906121ae565b346107035760405162461bcd60e51b81526004016106a79061221c565b600061073083837f00000000000000000000000000000000000000000000000000000000000000006108b5565b9050600061075e837f000000000000000000000000000000000000000000000000000000000000000061090d565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631933a4eb348484336040518563ffffffff1660e01b81526004016107b193929190611ed5565b6000604051808303818588803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b5050505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316857f6f1e998489da0152047f9f97b3c6f21b503848ef7d66c815ebd247b87066e90b34868660405161084b93929190612344565b60405180910390a45050600180555050565b6108656116d7565b6001600160a01b0316816001600160a01b0316146108955760405162461bcd60e51b81526004016106a7906122e7565b61089f82826117c4565b5050565b60076020526000908152604090205481565b60007f00000000000000000000000000000000000000000000000000000000000000008484846040516020016108ee9493929190611d08565b6040516020818303038152906040528051906020012090509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000838360405160200161094493929190611d36565b60405160208183030381529060405280519060200120905092915050565b7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3381565b606060068054806020026020016040519081016040528092919081815260200182805480156109de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109c0575b5050505050905090565b60006109f6816106706116d7565b610a207f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3383610d3e565b610a3c5760405162461bcd60e51b81526004016106a79061209b565b610a667f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b33836117c4565b7f708bd40f8f4d2ad60032caea0582161d35c50177cc0b2c575b5d483bd2902caa82604051610a959190611ddf565b60405180910390a15050565b610aac600033610d3e565b80610adc5750610adc7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610d3e565b610af85760405162461bcd60e51b81526004016106a7906122b0565b8280610b165760405162461bcd60e51b81526004016106a790612109565b808214610b355760405162461bcd60e51b81526004016106a79061202d565b60005b81811015610b8457610b7c868683818110610b4f57fe5b9050602002016020810190610b649190611ad8565b858584818110610b7057fe5b90506020020135610b8c565b600101610b38565b505050505050565b610b97600033610d3e565b80610bc75750610bc77f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610d3e565b610be35760405162461bcd60e51b81526004016106a7906122b0565b6001600160a01b038216610c095760405162461bcd60e51b81526004016106a790611f88565b6006541580610c6457506001600160a01b038216600090815260076020526040902054158015610c645750816001600160a01b03166006600081548110610c4c57fe5b6000918252602090912001546001600160a01b031614155b15610cd857600680546001810182557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516908117909155905460009182526007602052604090912060001990910190555b61089f82604051602001610cec9190611ceb565b6040516020818303038152906040528051906020012082611847565b60046020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b60026001541415610d8f5760405162461bcd60e51b81526004016106a7906121e5565b6002600181905560008481526020919091526040902054428111610dc55760405162461bcd60e51b81526004016106a7906121ae565b6001600160a01b038316610deb5760405162461bcd60e51b81526004016106a790612064565b610df483610f46565b610e105760405162461bcd60e51b81526004016106a790611ff6565b81610e2d5760405162461bcd60e51b81526004016106a79061221c565b6000610e3a8583866108b5565b90506000610e48838661090d565b6040517f69b999340000000000000000000000000000000000000000000000000000000081529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369b9993490610eb890859085908a908a903390600401611ef4565b600060405180830381600087803b158015610ed257600080fd5b505af1158015610ee6573d6000803e3d6000fd5b50505050336001600160a01b0316856001600160a01b0316877f6f1e998489da0152047f9f97b3c6f21b503848ef7d66c815ebd247b87066e90b878686604051610f3293929190612344565b60405180910390a450506001805550505050565b600554600090610f5857506000610614565b6001600160a01b0382166000908152600460205260409020541515806106115750816001600160a01b03166005600081548110610f9157fe5b6000918252602090912001546001600160a01b03161492915050565b60068181548110610fba57fe5b6000918252602090912001546001600160a01b0316905081565b610fdf600033610d3e565b8061100f575061100f7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610d3e565b61102b5760405162461bcd60e51b81526004016106a7906122b0565b60005b818110156111d05761105a83838381811061104557fe5b905060200201602081019061047e9190611ad8565b6110765760405162461bcd60e51b81526004016106a790612140565b60006004600085858581811061108857fe5b905060200201602081019061109d9190611ad8565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905060006005600160058054905003815481106110d757fe5b600091825260209091200154600580546001600160a01b03909216925082918490811061110057fe5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0394851617905591831681526004918290526040812084905586868681811061115357fe5b90506020020160208101906111689190611ad8565b6001600160a01b03166001600160a01b0316815260200190815260200160002060009055600580548061119757fe5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055505060010161102e565b507faf397cf4dd9b218aa8392d733be436eca6dc865d9fef8bddc37ff3cce5a583268282604051610a95929190611e26565b7f000000000000000000000000000000000000000000000000000000000000000081565b61122f82610646565b61123b816106706116d7565b61067f83836117c4565b606060058054806020026020016040519081016040528092919081815260200182805480156109de576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116109c0575050505050905090565b6112b0600033610d3e565b806112e057506112e07f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610d3e565b6112fc5760405162461bcd60e51b81526004016106a7906122b0565b60005b8181101561149d57600083838381811061131557fe5b905060200201602081019061132a9190611ad8565b6001600160a01b031614156113515760405162461bcd60e51b81526004016106a790612064565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683838381811061138757fe5b905060200201602081019061139c9190611ad8565b6001600160a01b031614156113c35760405162461bcd60e51b81526004016106a790611fbf565b6113d283838381811061104557fe5b156113ef5760405162461bcd60e51b81526004016106a7906120d2565b60058383838181106113fd57fe5b90506020020160208101906114129190611ad8565b815460018101835560009283526020832001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055600554600019019060049085858581811061146657fe5b905060200201602081019061147b9190611ad8565b6001600160a01b031681526020810191909152604001600020556001016112ff565b507fee3f29a31e91df914992dacfb3a9feb176d6cb3c1e35a4ebbe186aeb4827a60b8282604051610a95929190611e26565b60058181548110610fba57fe5b60006114ea816106706116d7565b6001600160a01b0382166115105760405162461bcd60e51b81526004016106a79061209b565b61153a7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b338361173f565b7fd36b0989e598a1b05388150a9a8c84925e2710d91910406b8735e01f3ed0281782604051610a959190611ddf565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c4ef0d56115a68787876108b5565b6040518263ffffffff1660e01b81526004016115c29190611ecc565b604080518083038186803b1580156115d957600080fd5b505afa1580156115ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116119190611b1f565b91509150935093915050565b3360008181526003602052604090819020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516179055517fbbd6eb1e2586cc8ea8e80aa1ccf25590beffdd2cb73367b5ac49214505bb48c491611682918490611df3565b60405180910390a150565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3390565b6116e58282610d3e565b61089f576116fd816001600160a01b031660146118d2565b6117088360206118d2565b604051602001611719929190611d5e565b60408051601f198184030181529082905262461bcd60e51b82526106a791600401611f20565b6117498282610d3e565b61089f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556117806116d7565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117ce8282610d3e565b1561089f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556118036116d7565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b816118645760405162461bcd60e51b81526004016106a790612279565b4281116118835760405162461bcd60e51b81526004016106a790612177565b600082815260026020526040908190208290555182907f04d4a8b224eb4e22836563fb784ab6779243c553d0872181d726f98890ec0473906118c6908490611ecc565b60405180910390a25050565b6060808260020260020167ffffffffffffffff811180156118f257600080fd5b506040519080825280601f01601f19166020018201604052801561191d576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061194e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106119ab57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600160028402015b6001811115611a69577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611a1a57fe5b1a60f81b828281518110611a2a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93600019016119e2565b508315611a885760405162461bcd60e51b81526004016106a790611f53565b9392505050565b60008083601f840112611aa0578182fd5b50813567ffffffffffffffff811115611ab7578182fd5b6020830191508360208083028501011115611ad157600080fd5b9250929050565b600060208284031215611ae9578081fd5b8135611a888161238a565b60008060408385031215611b06578081fd5b8235611b118161238a565b946020939093013593505050565b60008060408385031215611b31578182fd5b8251611b3c8161238a565b6020939093015192949293505050565b60008060208385031215611b5e578182fd5b823567ffffffffffffffff811115611b74578283fd5b611b8085828601611a8f565b90969095509350505050565b60008060008060408587031215611ba1578182fd5b843567ffffffffffffffff80821115611bb8578384fd5b611bc488838901611a8f565b90965094506020870135915080821115611bdc578384fd5b50611be987828801611a8f565b95989497509550505050565b600060208284031215611c06578081fd5b5035919050565b60008060408385031215611c1f578182fd5b823591506020830135611c318161238a565b809150509250929050565b600080600060608486031215611c50578283fd5b833592506020840135611c628161238a565b929592945050506040919091013590565b600080600060608486031215611c87578283fd5b83359250602084013591506040840135611ca08161238a565b809150509250925092565b600060208284031215611cbc578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a88578182fd5b60609190911b6bffffffffffffffffffffffff1916815260140190565b93845260208401929092526040830152606090811b6bffffffffffffffffffffffff19169082015260740190565b928352602083019190915260601b6bffffffffffffffffffffffff1916604082015260540190565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611d9681601785016020880161235a565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611dd381602884016020880161235a565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60208082528181018390526000908460408401835b86811015611e69578235611e4e8161238a565b6001600160a01b031682529183019190830190600101611e3b565b509695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611eb55783516001600160a01b031683529284019291840191600101611e90565b50909695505050505050565b901515815260200190565b90815260200190565b92835260208301919091526001600160a01b0316604082015260600190565b94855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b6000602082528251806020840152611f3f81604085016020870161235a565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252600d908201527f496e76616c696420676175676500000000000000000000000000000000000000604082015260600190565b6020808252601c908201527f43616e6e6f742077686974656c6973742042524942455f5641554c5400000000604082015260600190565b60208082526018908201527f546f6b656e206973206e6f742077686974656c69737465640000000000000000604082015260600190565b60208082526016908201527f417272617973206c656e677468206d69736d6174636800000000000000000000604082015260600190565b6020808252600d908201527f496e76616c696420746f6b656e00000000000000000000000000000000000000604082015260600190565b60208082526012908201527f496e76616c6964207465616d4d656d6265720000000000000000000000000000604082015260600190565b60208082526019908201527f546f6b656e20616c72656164792077686974656c697374656400000000000000604082015260600190565b6020808252600f908201527f496e76616c6964206761756765735f0000000000000000000000000000000000604082015260600190565b60208082526015908201527f546f6b656e206e6f742077686974656c69737465640000000000000000000000604082015260600190565b6020808252601e908201527f446561646c696e65206d75737420626520696e20746865206675747572650000604082015260600190565b6020808252601c908201527f50726f706f73616c20646561646c696e65206861732070617373656400000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526023908201527f427269626520616d6f756e74206d75737420626520677265617465722074686160408201527f6e20300000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526010908201527f496e76616c69642070726f706f73616c00000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b9283526020830191909152604082015260600190565b60005b8381101561237557818101518382015260200161235d565b83811115612384576000848401525b50505050565b6001600160a01b038116811461239f57600080fd5b5056fea264697066735822122016badc5423386884a50d60f102741e328ea469639176fd37d09fc3ff5f08eff564736f6c63430007010033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E8EFAEE GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xBE309BCA GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE468BAF0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE468BAF0 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xF52C395A EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xF7E6B46B EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xF96258C4 EQ PUSH2 0x59B JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xBE309BCA EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE26F7900 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xE3113DF9 EQ PUSH2 0x50D JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xA602D140 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA602D140 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xAB37F486 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0xB0539187 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xB25706F3 EQ PUSH2 0x4A3 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8E8EFAEE EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x91B9B827 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x42E JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x3D105030 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x5574F46D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x5574F46D EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x5699FBAD EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x7A422D2F EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x7BB4DBB9 EQ PUSH2 0x3B9 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x3D105030 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3EEED1A5 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x40C58189 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x49D5E604 EQ PUSH2 0x342 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x2F476003 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2C2 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7CD2FFE EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x21298310 EQ PUSH2 0x240 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x962 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0xD1A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0xD67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x45E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0xD6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0xF46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0xFAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0xFD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x1202 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1226 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0x1245 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x12A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x548 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x14CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x14DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58D PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP3 SWAP2 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH2 0x5B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x161D JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x611 JUMPI POP PUSH2 0x611 DUP3 PUSH2 0x168D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x664 DUP3 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x675 DUP2 PUSH2 0x670 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x67F DUP4 DUP4 PUSH2 0x173F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x21AE JUMP JUMPDEST CALLVALUE PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x730 DUP4 DUP4 PUSH32 0x0 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x75E DUP4 PUSH32 0x0 PUSH2 0x90D JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1933A4EB CALLVALUE DUP5 DUP5 CALLER PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x6F1E998489DA0152047F9F97B3C6F21B503848EF7D66C815EBD247B87066E90B CALLVALUE DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x84B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x865 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST PUSH2 0x89F DUP3 DUP3 PUSH2 0x17C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8EE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x944 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F6 DUP2 PUSH2 0x670 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xA20 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x209B JUMP JUMPDEST PUSH2 0xA66 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x17C4 JUMP JUMPDEST PUSH32 0x708BD40F8F4D2AD60032CAEA0582161D35C50177CC0B2C575B5D483BD2902CAA DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xAAC PUSH1 0x0 CALLER PUSH2 0xD3E JUMP JUMPDEST DUP1 PUSH2 0xADC JUMPI POP PUSH2 0xADC PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0xD3E JUMP JUMPDEST PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST DUP3 DUP1 PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2109 JUMP JUMPDEST DUP1 DUP3 EQ PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB84 JUMPI PUSH2 0xB7C DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xB4F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB64 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xB70 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB38 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB97 PUSH1 0x0 CALLER PUSH2 0xD3E JUMP JUMPDEST DUP1 PUSH2 0xBC7 JUMPI POP PUSH2 0xBC7 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0xD3E JUMP JUMPDEST PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x6 SLOAD ISZERO DUP1 PUSH2 0xC64 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0xC64 JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xC4C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST PUSH2 0x89F DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0xDF4 DUP4 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST DUP2 PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3A DUP6 DUP4 DUP7 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE48 DUP4 DUP7 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x69B9993400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x69B99934 SWAP1 PUSH2 0xEB8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP11 SWAP1 DUP11 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH32 0x6F1E998489DA0152047F9F97B3C6F21B503848EF7D66C815EBD247B87066E90B DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF32 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF58 JUMPI POP PUSH1 0x0 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x611 JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xF91 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFBA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xFDF PUSH1 0x0 CALLER PUSH2 0xD3E JUMP JUMPDEST DUP1 PUSH2 0x100F JUMPI POP PUSH2 0x100F PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x102B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x105A DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1045 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x1076 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1088 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT PUSH2 0x10D7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1100 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x1153 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x1197 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x102E JUMP JUMPDEST POP PUSH32 0xAF397CF4DD9B218AA8392D733BE436ECA6DC865D9FEF8BDDC37FF3CCE5A58326 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP3 SWAP2 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x122F DUP3 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x123B DUP2 PUSH2 0x670 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x67F DUP4 DUP4 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9DE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C0 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12B0 PUSH1 0x0 CALLER PUSH2 0xD3E JUMP JUMPDEST DUP1 PUSH2 0x12E0 JUMPI POP PUSH2 0x12E0 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x12FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x149D JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1315 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1387 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x139C SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0x13D2 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1045 JUMPI INVALID JUMPDEST ISZERO PUSH2 0x13EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x5 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x13FD JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH1 0x4 SWAP1 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1466 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x12FF JUMP JUMPDEST POP PUSH32 0xEE3F29A31E91DF914992DACFB3A9FEB176D6CB3C1E35A4EBBE186AEB4827A60B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP3 SWAP2 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFBA JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x14EA DUP2 PUSH2 0x670 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x209B JUMP JUMPDEST PUSH2 0x153A PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x173F JUMP JUMPDEST PUSH32 0xD36B0989E598A1B05388150A9A8C84925E2710D91910406B8735E01F3ED02817 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2C4EF0D5 PUSH2 0x15A6 DUP8 DUP8 DUP8 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C2 SWAP2 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE MLOAD PUSH32 0xBBD6EB1E2586CC8EA8E80AA1CCF25590BEFFDD2CB73367B5AC49214505BB48C4 SWAP2 PUSH2 0x1682 SWAP2 DUP5 SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x16E5 DUP3 DUP3 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x89F JUMPI PUSH2 0x16FD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x1708 DUP4 PUSH1 0x20 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1719 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6A7 SWAP2 PUSH1 0x4 ADD PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x1749 DUP3 DUP3 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x89F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1780 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x17CE DUP3 DUP3 PUSH2 0xD3E JUMP JUMPDEST ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1803 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 PUSH2 0x1864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2279 JUMP JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x1883 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP3 SWAP1 PUSH32 0x4D4A8B224EB4E22836563FB784AB6779243C553D0872181D726F98890EC0473 SWAP1 PUSH2 0x18C6 SWAP1 DUP5 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x2 MUL PUSH1 0x2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x191D JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x194E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x19AB JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 PUSH1 0x2 DUP5 MUL ADD JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A69 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1A1A JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A2A JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH1 0x0 NOT ADD PUSH2 0x19E2 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1A88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1AA0 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x1AD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A88 DUP2 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B06 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B11 DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B31 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x1B3C DUP2 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B5E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B74 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BA1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1BB8 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1BC4 DUP9 DUP4 DUP10 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BDC JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1BE9 DUP8 DUP3 DUP9 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C06 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C1F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1C31 DUP2 PUSH2 0x238A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C50 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1C62 DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C87 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1CA0 DUP2 PUSH2 0x238A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CBC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1A88 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP3 ADD MSTORE PUSH1 0x74 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x1D96 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x235A JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1DD3 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x235A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1E69 JUMPI DUP3 CALLDATALOAD PUSH2 0x1E4E DUP2 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E3B JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EB5 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1E90 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x235A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420676175676500000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077686974656C6973742042524942455F5641554C5400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F742077686974656C69737465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x417272617973206C656E677468206D69736D6174636800000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207465616D4D656D6265720000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C72656164792077686974656C697374656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206761756765735F0000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F742077686974656C69737465640000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x446561646C696E65206D75737420626520696E20746865206675747572650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646561646C696E65206861732070617373656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x427269626520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F706F73616C00000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2375 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x235D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2384 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x239F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBA 0xDC SLOAD 0x23 CODESIZE PUSH9 0x84A50D60F102741E32 DUP15 LOG4 PUSH10 0x639176FD37D09FC3FF5F ADDMOD 0xEF CREATE2 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
                "sourceMap": "28825:1646:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10422:202;;;;;;;;;;-1:-1:-1;10422:202:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19003:51;;;;;;;;;;-1:-1:-1;19003:51:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;18860:52::-;;;;;;;;;;-1:-1:-1;18860:52:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11794:121::-;;;;;;;;;;-1:-1:-1;11794:121:0;;;;;:::i;:::-;;:::i;12165:145::-;;;;;;;;;;-1:-1:-1;12165:145:0;;;;;:::i;:::-;;:::i;:::-;;27262:1044;;;;;;:::i;:::-;;:::i;13182:214::-;;;;;;;;;;-1:-1:-1;13182:214:0;;;;;:::i;:::-;;:::i;28896:47::-;;;;;;;;;;-1:-1:-1;28896:47:0;;;;;:::i;:::-;;:::i;24285:306::-;;;;;;;;;;-1:-1:-1;24285:306:0;;;;;:::i;:::-;;:::i;24849:230::-;;;;;;;;;;-1:-1:-1;24849:230:0;;;;;:::i;:::-;;:::i;18652:58::-;;;;;;;;;;;;;:::i;30377:92::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;20850:266::-;;;;;;;;;;-1:-1:-1;20850:266:0;;;;;:::i;:::-;;:::i;29903:417::-;;;;;;;;;;-1:-1:-1;29903:417:0;;;;;:::i;:::-;;:::i;29218:497::-;;;;;;;;;;-1:-1:-1;29218:497:0;;;;;:::i;:::-;;:::i;19094:58::-;;;;;;;;;;-1:-1:-1;19094:58:0;;;;;:::i;:::-;;:::i;18777:33::-;;;;;;;;;;;;;:::i;10711:137::-;;;;;;;;;;-1:-1:-1;10711:137:0;;;;;:::i;:::-;;:::i;9829:49::-;;;;;;;;;;;;;:::i;25973:1158::-;;;;;;;;;;-1:-1:-1;25973:1158:0;;;;;:::i;:::-;;:::i;21475:274::-;;;;;;;;;;-1:-1:-1;21475:274:0;;;;;:::i;:::-;;:::i;28867:23::-;;;;;;;;;;-1:-1:-1;28867:23:0;;;;;:::i;:::-;;:::i;22703:797::-;;;;;;;;;;-1:-1:-1;22703:797:0;;;;;:::i;:::-;;:::i;18610:36::-;;;;;;;;;;;;;:::i;12544:147::-;;;;;;;;;;-1:-1:-1;12544:147:0;;;;;:::i;:::-;;:::i;21211:117::-;;;;;;;;;;;;;:::i;21870:704::-;;;;;;;;;;-1:-1:-1;21870:704:0;;;;;:::i;:::-;;:::i;19158:37::-;;;;;;;;;;-1:-1:-1;19158:37:0;;;;;:::i;:::-;;:::i;20443:257::-;;;;;;;;;;-1:-1:-1;20443:257:0;;;;;:::i;:::-;;:::i;25418:335::-;;;;;;;;;;-1:-1:-1;25418:335:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;28607:151::-;;;;;;;;;;-1:-1:-1;28607:151:0;;;;;:::i;:::-;;:::i;10422:202::-;10507:4;10530:47;;;10545:32;10530:47;;:87;;;10581:36;10605:11;10581:23;:36::i;:::-;10523:94;;10422:202;;;;:::o;19003:51::-;;;;;;;;;;;;-1:-1:-1;;;;;19003:51:0;;:::o;18860:52::-;;;;;;;;;;;;;:::o;11794:121::-;11860:7;11886:12;;;;;;;;;;:22;;;;11794:121::o;12165:145::-;12248:18;12261:4;12248:12;:18::i;:::-;10307:30;10318:4;10324:12;:10;:12::i;:::-;10307:10;:30::i;:::-;12278:25:::1;12289:4;12295:7;12278:10;:25::i;:::-;12165:145:::0;;;:::o;27262:1044::-;17018:1;17599:7;;:19;;17591:63;;;;-1:-1:-1;;;17591:63:0;;;;;;;:::i;:::-;;;;;;;;;17018:1;17729:7;:18;;;27342:24:::1;27369:27:::0;;;::::1;::::0;;;;;;;;27457:15:::1;27427:45:::0;::::1;27406:120;;;;-1:-1:-1::0;;;27406:120:0::1;;;;;;;:::i;:::-;27544:9;27536:62;;;;-1:-1:-1::0;;;27536:62:0::1;;;;;;;:::i;:::-;27609:23;27635:115;27677:8;27699:16;27729:11;27635:28;:115::i;:::-;27609:141;;27760:24;27787:89;27825:16;27855:11;27787:24;:89::i;:::-;27760:116;;27972:11;-1:-1:-1::0;;;;;27960:37:0::1;;28005:9;28029:15;28058:16;28088:10;27960:148;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;28279:10;-1:-1:-1::0;;;;;28124:175:0::1;28172:11;-1:-1:-1::0;;;;;28124:175:0::1;28150:8;28124:175;28197:9;28220:15;28249:16;28124:175;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;16975:1:0;17902:22;;-1:-1:-1;;27262:1044:0:o;13182:214::-;13288:12;:10;:12::i;:::-;-1:-1:-1;;;;;13277:23:0;:7;-1:-1:-1;;;;;13277:23:0;;13269:83;;;;-1:-1:-1;;;13269:83:0;;;;;;;:::i;:::-;13363:26;13375:4;13381:7;13363:11;:26::i;:::-;13182:214;;:::o;28896:47::-;;;;;;;;;;;;;:::o;24285:306::-;24433:18;24526:8;24536;24546:16;24564:5;24509:61;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24482:102;;;;;;24463:121;;24285:306;;;;;:::o;24849:230::-;24969:18;25037:8;25047:16;25065:5;25020:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25010:62;;;;;;25003:69;;24849:230;;;;:::o;18652:58::-;18688:22;18652:58;:::o;30377:92::-;30421:16;30456:6;30449:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30449:13:0;;;;;;;;;;;;;;;;;;;;;;;30377:92;:::o;20850:266::-;9874:4;10307:30;9874:4;10324:12;:10;:12::i;10307:30::-;20970::::1;18688:22;20989:10;20970:7;:30::i;:::-;20962:61;;;;-1:-1:-1::0;;;20962:61:0::1;;;;;;;:::i;:::-;21033:34;18688:22;21056:10;21033:11;:34::i;:::-;21083:26;21098:10;21083:26;;;;;;:::i;:::-;;;;;;;;20850:266:::0;;:::o;29903:417::-;20150:39;9874:4;20178:10;20150:7;:39::i;:::-;:89;;;;20209:30;18688:22;20228:10;20209:7;:30::i;:::-;20129:150;;;;-1:-1:-1;;;20129:150:0;;;;;;;:::i;:::-;30063:7;30095:13;30087:41:::1;;;;-1:-1:-1::0;;;30087:41:0::1;;;;;;;:::i;:::-;30146:28:::0;;::::1;30138:63;;;;-1:-1:-1::0;;;30138:63:0::1;;;;;;;:::i;:::-;30217:9;30212:102;30232:8;30228:1;:12;30212:102;;;30261:42;30278:7;;30286:1;30278:10;;;;;;;;;;;;;;;;;;;;:::i;:::-;30290:9;;30300:1;30290:12;;;;;;;;;;;;;30261:16;:42::i;:::-;30242:3;;30212:102;;;;20289:1;29903:417:::0;;;;:::o;29218:497::-;20150:39;9874:4;20178:10;20150:7;:39::i;:::-;:89;;;;20209:30;18688:22;20228:10;20209:7;:30::i;:::-;20129:150;;;;-1:-1:-1;;;20129:150:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;29337:19:0;::::1;29329:45;;;;-1:-1:-1::0;;;29329:45:0::1;;;;;;;:::i;:::-;29451:6;:13:::0;:18;;:82:::1;;-1:-1:-1::0;;;;;;29486:19:0;::::1;;::::0;;;:12:::1;:19;::::0;;;;;:24;:46;::::1;;;;29527:5;-1:-1:-1::0;;;;;29514:18:0::1;:6;29521:1;29514:9;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;29514:9:0::1;:18;;29486:46;29434:206;;;29558:6;:18:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;29558:18:0::1;-1:-1:-1::0;;;;;29558:18:0;::::1;::::0;;::::1;::::0;;;29612:13;;-1:-1:-1;29590:19:0;;;:12:::1;29558:18;29590:19:::0;;;;;-1:-1:-1;;29612:17:0;;;29590:39;;29434:206:::1;29650:58;29690:5;29673:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;29663:34;;;;;;29699:8;29650:12;:58::i;19094:::-:0;;;;;;;;;;;;;:::o;18777:33::-;;;:::o;10711:137::-;10789:4;10812:12;;;;;;;;;;;-1:-1:-1;;;;;10812:29:0;;;;;;;;;;;;;;;10711:137::o;9829:49::-;9874:4;9829:49;:::o;25973:1158::-;17018:1;17599:7;;:19;;17591:63;;;;-1:-1:-1;;;17591:63:0;;;;;;;:::i;:::-;17018:1;17729:7;:18;;;26111:24:::1;26138:27:::0;;;::::1;::::0;;;;;;;;26226:15:::1;26196:45:::0;::::1;26175:120;;;;-1:-1:-1::0;;;26175:120:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;26313:19:0;::::1;26305:45;;;;-1:-1:-1::0;;;26305:45:0::1;;;;;;;:::i;:::-;26368:25;26387:5;26368:18;:25::i;:::-;26360:62;;;;-1:-1:-1::0;;;26360:62:0::1;;;;;;;:::i;:::-;26440:11:::0;26432:59:::1;;;;-1:-1:-1::0;;;26432:59:0::1;;;;;;;:::i;:::-;26502:23;26528:109;26570:8;26592:16;26622:5;26528:28;:109::i;:::-;26502:135;;26647:24;26674:83;26712:16;26742:5;26674:24;:83::i;:::-;26768:174;::::0;;;;26647:110;;-1:-1:-1;;;;;;26780:11:0::1;26768:42;::::0;::::1;::::0;:174:::1;::::0;26824:15;;26647:110;;26883:5;;26902:6;;26922:10:::1;::::0;26768:174:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;27104:10;-1:-1:-1::0;;;;;26958:166:0::1;27006:5;-1:-1:-1::0;;;;;26958:166:0::1;26984:8;26958:166;27025:6;27045:15;27074:16;26958:166;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;16975:1:0;17902:22;;-1:-1:-1;;;;25973:1158:0:o;21475:274::-;21559:20;:27;21539:4;;21555:75;;-1:-1:-1;21614:5:0;21607:12;;21555:75;-1:-1:-1;;;;;21659:30:0;;;;;;:23;:30;;;;;;:35;;;:83;;;21737:5;-1:-1:-1;;;;;21710:32:0;:20;21731:1;21710:23;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21710:23:0;:32;;21475:274;-1:-1:-1;;21475:274:0:o;28867:23::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28867:23:0;;-1:-1:-1;28867:23:0;:::o;22703:797::-;20150:39;9874:4;20178:10;20150:7;:39::i;:::-;:89;;;;20209:30;18688:22;20228:10;20209:7;:30::i;:::-;20129:150;;;;-1:-1:-1;;;20129:150:0;;;;;;;:::i;:::-;22820:9:::1;22815:634;22831:17:::0;;::::1;22815:634;;;22877:29;22896:6;;22903:1;22896:9;;;;;;;;;;;;;;;;;;;;:::i;22877:29::-;22869:63;;;;-1:-1:-1::0;;;22869:63:0::1;;;;;;;:::i;:::-;23080:13;23096:23;:34;23120:6;;23127:1;23120:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;23096:34:0::1;-1:-1:-1::0;;;;;23096:34:0::1;;;;;;;;;;;;;23080:50;;23144:12;23159:20;23227:1;23197:20;:27;;;;:31;23159:83;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;23257:20:::1;:27:::0;;-1:-1:-1;;;;;23159:83:0;;::::1;::::0;-1:-1:-1;23159:83:0;;23278:5;;23257:27;::::1;;;;;;::::0;;;::::1;::::0;;;;;;::::1;:34:::0;;-1:-1:-1;;23257:34:0::1;-1:-1:-1::0;;;;;23257:34:0;;::::1;;::::0;;23305:29;;::::1;::::0;;:23:::1;:29:::0;;;;;;;:37;;;23388:6;;23395:1;23388:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;23364:34:0::1;-1:-1:-1::0;;;;;23364:34:0::1;;;;;;;;;;;;23357:41;;;23412:20;:26;;;;;;;;::::0;;;::::1;::::0;;;;-1:-1:-1;;23412:26:0;;;;;-1:-1:-1;;23412:26:0::1;::::0;;;;;-1:-1:-1;;23412:26:0::1;22850:3;22815:634;;;;23464:29;23486:6;;23464:29;;;;;;;:::i;18610:36::-:0;;;:::o;12544:147::-;12628:18;12641:4;12628:12;:18::i;:::-;10307:30;10318:4;10324:12;:10;:12::i;10307:30::-;12658:26:::1;12670:4;12676:7;12658:11;:26::i;21211:117::-:0;21266:16;21301:20;21294:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21294:27:0;;;;;;;;;;;;;;;;;;;;;;21211:117;:::o;21870:704::-;20150:39;9874:4;20178:10;20150:7;:39::i;:::-;:89;;;;20209:30;18688:22;20228:10;20209:7;:30::i;:::-;20129:150;;;;-1:-1:-1;;;20129:150:0;;;;;;;:::i;:::-;21984:9:::1;21979:547;21995:17:::0;;::::1;21979:547;;;22062:1;22041:6:::0;;22048:1;22041:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22041:23:0::1;;;22033:49;;;;-1:-1:-1::0;;;22033:49:0::1;;;;;;;:::i;:::-;22117:11;-1:-1:-1::0;;;;;22104:24:0::1;:6;;22111:1;22104:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22104:24:0::1;;;22096:65;;;;-1:-1:-1::0;;;22096:65:0::1;;;;;;;:::i;:::-;22201:29;22220:6;;22227:1;22220:9;;;;;;22201:29;22200:30;22175:114;;;;-1:-1:-1::0;;;22175:114:0::1;;;;;;;:::i;:::-;22365:20;22391:6;;22398:1;22391:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;22365:36:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;22365:36:0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;22365:36:0::1;-1:-1:-1::0;;;;;22365:36:0;;;::::1;::::0;;;::::1;::::0;;22468:20:::1;:27:::0;-1:-1:-1;;22468:47:0;;22415:23:::1;::::0;22439:6;;22446:1;22439:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22415:34:0::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;22415:34:0;:100;22014:3:::1;;21979:547;;;;22541:26;22560:6;;22541:26;;;;;;;:::i;19158:37::-:0;;;;;;;;;;20443:257;9874:4;10307:30;9874:4;10324:12;:10;:12::i;10307:30::-;-1:-1:-1;;;;;20562:24:0;::::1;20554:55;;;;-1:-1:-1::0;;;20554:55:0::1;;;;;;;:::i;:::-;20619:33;18688:22;20641:10;20619;:33::i;:::-;20668:25;20682:10;20668:25;;;;;;:::i;25418:335::-:0;25548:18;25568:19;25630:11;-1:-1:-1;;;;;25618:33:0;;25669:63;25698:8;25708:16;25726:5;25669:28;:63::i;:::-;25618:128;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25599:147;;;;25418:335;;;;;;:::o;28607:151::-;28684:10;28667:28;;;;:16;:28;;;;;;;:33;;-1:-1:-1;;28667:33:0;-1:-1:-1;;;;;28667:33:0;;;;;28716:35;;;;;28667:33;;28716:35;:::i;:::-;;;;;;;;28607:151;:::o;7758:155::-;7866:40;;;7881:25;7866:40;7758:155;;;:::o;3751:96::-;3830:10;3751:96;:::o;11129:484::-;11209:22;11217:4;11223:7;11209;:22::i;:::-;11204:403;;11392:41;11420:7;-1:-1:-1;;;;;11392:41:0;11430:2;11392:19;:41::i;:::-;11504:38;11532:4;11539:2;11504:19;:38::i;:::-;11299:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11299:265:0;;;;;;;;;;-1:-1:-1;;;11247:349:0;;;;;;;:::i;14639:233::-;14722:22;14730:4;14736:7;14722;:22::i;:::-;14717:149;;14760:6;:12;;;;;;;;;;;-1:-1:-1;;;;;14760:29:0;;;;;;;;;:36;;-1:-1:-1;;14760:36:0;14792:4;14760:36;;;14842:12;:10;:12::i;:::-;-1:-1:-1;;;;;14815:40:0;14833:7;-1:-1:-1;;;;;14815:40:0;14827:4;14815:40;;;;;;;;;;14639:233;;:::o;14997:234::-;15080:22;15088:4;15094:7;15080;:22::i;:::-;15076:149;;;15150:5;15118:12;;;;;;;;;;;-1:-1:-1;;;;;15118:29:0;;;;;;;;;:37;;-1:-1:-1;;15118:37:0;;;15201:12;:10;:12::i;:::-;-1:-1:-1;;;;;15174:40:0;15192:7;-1:-1:-1;;;;;15174:40:0;15186:4;15174:40;;;;;;;;;;14997:234;;:::o;23657:310::-;23742:22;23734:51;;;;-1:-1:-1;;;23734:51:0;;;;;;;:::i;:::-;23814:15;23803:8;:26;23795:69;;;;-1:-1:-1;;;23795:69:0;;;;;;;:::i;:::-;23875:27;;;;:17;:27;;;;;;;:38;;;23929:31;23893:8;;23929:31;;;;23905:8;;23929:31;:::i;:::-;;;;;;;;23657:310;;:::o;5572:441::-;5647:13;5672:19;5708:6;5704:1;:10;5717:1;5704:14;5694:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5694:25:0;;5672:47;;5729:15;:6;5736:1;5729:9;;;;;;;;;;;:15;;;;;;;;;;;5754;:6;5761:1;5754:9;;;;;;;;;;;:15;;;;;;;;;;-1:-1:-1;5809:1:0;5796;:10;;:14;5779:132;5816:1;5812;:5;5779:132;;;5850:12;5863:5;5871:3;5863:11;5850:25;;;;;;;;;;5838:6;5845:1;5838:9;;;;;;;;;;;:37;;;;;;;;;;-1:-1:-1;5899:1:0;5889:11;;;;;-1:-1:-1;;5819:3:0;5779:132;;;-1:-1:-1;5928:10:0;;5920:55;;;;-1:-1:-1;;;5920:55:0;;;;;;;:::i;:::-;5999:6;5572:441;-1:-1:-1;;;5572:441:0:o;301:352:-1:-;;;431:3;424:4;416:6;412:17;408:27;398:2;;-1:-1;;439:12;398:2;-1:-1;469:20;;509:18;498:30;;495:2;;;-1:-1;;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;575:4;;610:6;606:17;567:6;592:32;;589:41;586:2;;;643:1;;633:12;586:2;391:262;;;;;:::o;1589:241::-;;1693:2;1681:9;1672:7;1668:23;1664:32;1661:2;;;-1:-1;;1699:12;1661:2;85:6;72:20;97:33;124:5;97:33;:::i;1837:366::-;;;1958:2;1946:9;1937:7;1933:23;1929:32;1926:2;;;-1:-1;;1964:12;1926:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2016:63;2116:2;2155:22;;;;1378:20;;-1:-1;;;1920:283::o;2210:399::-;;;2342:2;2330:9;2321:7;2317:23;2313:32;2310:2;;;-1:-1;;2348:12;2310:2;226:6;220:13;238:33;265:5;238:33;:::i;:::-;2511:2;2561:22;;;;1526:13;2400:74;;1526:13;;-1:-1;;;2304:305::o;2616:397::-;;;2755:2;2743:9;2734:7;2730:23;2726:32;2723:2;;;-1:-1;;2761:12;2723:2;2819:17;2806:31;2857:18;2849:6;2846:30;2843:2;;;-1:-1;;2879:12;2843:2;2917:80;2989:7;2980:6;2969:9;2965:22;2917:80;:::i;:::-;2899:98;;;;-1:-1;2717:296;-1:-1;;;;2717:296::o;3020:678::-;;;;;3211:2;3199:9;3190:7;3186:23;3182:32;3179:2;;;-1:-1;;3217:12;3179:2;3275:17;3262:31;3313:18;;3305:6;3302:30;3299:2;;;-1:-1;;3335:12;3299:2;3373:80;3445:7;3436:6;3425:9;3421:22;3373:80;:::i;:::-;3355:98;;-1:-1;3355:98;-1:-1;3518:2;3503:18;;3490:32;;-1:-1;3531:30;;;3528:2;;;-1:-1;;3564:12;3528:2;;3602:80;3674:7;3665:6;3654:9;3650:22;3602:80;:::i;:::-;3173:525;;;;-1:-1;3584:98;-1:-1;;;;3173:525::o;3705:241::-;;3809:2;3797:9;3788:7;3784:23;3780:32;3777:2;;;-1:-1;;3815:12;3777:2;-1:-1;1106:20;;3771:175;-1:-1;3771:175::o;3953:366::-;;;4074:2;4062:9;4053:7;4049:23;4045:32;4042:2;;;-1:-1;;4080:12;4042:2;1119:6;1106:20;4132:63;;4232:2;4275:9;4271:22;72:20;97:33;124:5;97:33;:::i;:::-;4240:63;;;;4036:283;;;;;:::o;4326:491::-;;;;4464:2;4452:9;4443:7;4439:23;4435:32;4432:2;;;-1:-1;;4470:12;4432:2;1119:6;1106:20;4522:63;;4622:2;4665:9;4661:22;72:20;97:33;124:5;97:33;:::i;:::-;4426:391;;4630:63;;-1:-1;;;4730:2;4769:22;;;;1378:20;;4426:391::o;4824:491::-;;;;4962:2;4950:9;4941:7;4937:23;4933:32;4930:2;;;-1:-1;;4968:12;4930:2;1119:6;1106:20;5020:63;;5120:2;5163:9;5159:22;1378:20;5128:63;;5228:2;5271:9;5267:22;72:20;97:33;124:5;97:33;:::i;:::-;5236:63;;;;4924:391;;;;;:::o;5322:239::-;;5425:2;5413:9;5404:7;5400:23;5396:32;5393:2;;;-1:-1;;5431:12;5393:2;1255:6;1242:20;31914:66;33756:5;31903:78;33732:5;33729:34;33719:2;;-1:-1;;33767:12;16201:253;33395:2;33391:14;;;;-1:-1;;33391:14;6839:58;;16426:2;16417:12;;16317:137::o;16461:670::-;8524:37;;;16770:2;16761:12;;8524:37;;;;16872:12;;;8524:37;16983:12;33391:14;;;-1:-1;;33391:14;16983:12;;;6839:58;17094:12;;;16661:470::o;17138:531::-;8524:37;;;17419:2;17410:12;;8524:37;;;;33395:2;33391:14;-1:-1;;33391:14;17521:12;;;6839:58;17632:12;;;17310:359::o;17676:970::-;;13390:25;13377:11;13370:46;9249:5;30530:12;9361:52;9406:6;13354:2;13439:3;13435:12;9394:4;9387:5;9383:16;9361:52;:::i;:::-;15141:19;13354:2;9425:16;;;;;;15121:40;30530:12;;9361:52;30530:12;15180;;;9394:4;9383:16;;9361:52;:::i;:::-;9425:16;15180:12;9425:16;;18062:584;-1:-1;;;;18062:584::o;18653:222::-;-1:-1;;;;;32055:54;;;;6581:37;;18780:2;18765:18;;18751:124::o;18882:349::-;-1:-1;;;;;32055:54;;;6450:58;;32055:54;;19217:2;19202:18;;6581:37;19045:2;19030:18;;19016:215::o;19238:333::-;-1:-1;;;;;32055:54;;;;6581:37;;19557:2;19542:18;;8524:37;19393:2;19378:18;;19364:207::o;19578:390::-;19765:2;19779:47;;;19750:18;;;31051:19;;;19578:390;;7265:21;31091:14;;;19578:390;7292:291;7317:6;7314:1;7311:13;7292:291;;;85:6;72:20;97:33;124:5;97:33;:::i;:::-;-1:-1;;;;;32055:54;6581:37;;31546:12;;;;6343:14;;;;7339:1;7332:9;7292:291;;;-1:-1;19832:126;19736:232;-1:-1;;;;;;19736:232::o;19975:370::-;20152:2;20166:47;;;30530:12;;20137:18;;;31051:19;;;19975:370;;20152:2;30384:14;;;;31091;;;;19975:370;8052:260;8077:6;8074:1;8071:13;8052:260;;;8138:13;;-1:-1;;;;;32055:54;6581:37;;30791:14;;;;6343;;;;8099:1;8092:9;8052:260;;;-1:-1;20219:116;;20123:222;-1:-1;;;;;;20123:222::o;20352:210::-;31737:13;;31730:21;8407:34;;20473:2;20458:18;;20444:118::o;20569:222::-;8524:37;;;20696:2;20681:18;;20667:124::o;20798:460::-;8524:37;;;21153:2;21138:18;;8524:37;;;;-1:-1;;;;;32055:54;21244:2;21229:18;;6450:58;20989:2;20974:18;;20960:298::o;21265:684::-;8524:37;;;21677:2;21662:18;;8524:37;;;;-1:-1;;;;;32055:54;;;21760:2;21745:18;;6581:37;21843:2;21828:18;;8524:37;32055:54;21934:3;21919:19;;6450:58;21512:3;21497:19;;21483:466::o;21956:310::-;;22103:2;22124:17;22117:47;8877:5;30530:12;31063:6;22103:2;22092:9;22088:18;31051:19;8971:52;9016:6;31091:14;22092:9;31091:14;22103:2;8997:5;8993:16;8971:52;:::i;:::-;33300:7;33284:14;-1:-1;;33280:28;9035:39;;;;31091:14;9035:39;;22074:192;-1:-1;;22074:192::o;22273:416::-;22473:2;22487:47;;;22458:18;;;31051:19;9714:34;31091:14;;;9694:55;9768:12;;;22444:245::o;22696:416::-;22896:2;22910:47;;;10019:2;22881:18;;;31051:19;10055:15;31091:14;;;10035:36;10090:12;;;22867:245::o;23119:416::-;23319:2;23333:47;;;10341:2;23304:18;;;31051:19;10377:30;31091:14;;;10357:51;10427:12;;;23290:245::o;23542:416::-;23742:2;23756:47;;;10678:2;23727:18;;;31051:19;10714:26;31091:14;;;10694:47;10760:12;;;23713:245::o;23965:416::-;24165:2;24179:47;;;11011:2;24150:18;;;31051:19;11047:24;31091:14;;;11027:45;11091:12;;;24136:245::o;24388:416::-;24588:2;24602:47;;;11342:2;24573:18;;;31051:19;11378:15;31091:14;;;11358:36;11413:12;;;24559:245::o;24811:416::-;25011:2;25025:47;;;11664:2;24996:18;;;31051:19;11700:20;31091:14;;;11680:41;11740:12;;;24982:245::o;25234:416::-;25434:2;25448:47;;;11991:2;25419:18;;;31051:19;12027:27;31091:14;;;12007:48;12074:12;;;25405:245::o;25657:416::-;25857:2;25871:47;;;12325:2;25842:18;;;31051:19;12361:17;31091:14;;;12341:38;12398:12;;;25828:245::o;26080:416::-;26280:2;26294:47;;;12649:2;26265:18;;;31051:19;12685:23;31091:14;;;12665:44;12728:12;;;26251:245::o;26503:416::-;26703:2;26717:47;;;12979:2;26688:18;;;31051:19;13015:32;31091:14;;;12995:53;13067:12;;;26674:245::o;26926:416::-;27126:2;27140:47;;;13686:2;27111:18;;;31051:19;13722:30;31091:14;;;13702:51;13772:12;;;27097:245::o;27349:416::-;27549:2;27563:47;;;14023:2;27534:18;;;31051:19;14059:33;31091:14;;;14039:54;14112:12;;;27520:245::o;27772:416::-;27972:2;27986:47;;;14363:2;27957:18;;;31051:19;14399:34;31091:14;;;14379:55;14468:5;14454:12;;;14447:27;14493:12;;;27943:245::o;28195:416::-;28395:2;28409:47;;;14744:2;28380:18;;;31051:19;14780:18;31091:14;;;14760:39;14818:12;;;28366:245::o;28618:416::-;28818:2;28832:47;;;15431:2;28803:18;;;31051:19;15467:16;31091:14;;;15447:37;15503:12;;;28789:245::o;29041:416::-;29241:2;29255:47;;;15754:2;29226:18;;;31051:19;15790:34;31091:14;;;15770:55;15859:17;15845:12;;;15838:39;15896:12;;;29212:245::o;29693:444::-;8524:37;;;30040:2;30025:18;;8524:37;;;;30123:2;30108:18;;8524:37;29876:2;29861:18;;29847:290::o;32580:268::-;32645:1;32652:101;32666:6;32663:1;32660:13;32652:101;;;32733:11;;;32727:18;32714:11;;;32707:39;32688:2;32681:10;32652:101;;;32768:6;32765:1;32762:13;32759:2;;;32645:1;32824:6;32819:3;32815:16;32808:27;32759:2;;32629:219;;;:::o;33423:117::-;-1:-1;;;;;33510:5;32055:54;33485:5;33482:35;33472:2;;33531:1;;33521:12;33472:2;33466:74;:::o"
              },
              "methodIdentifiers": {
                "BRIBE_VAULT()": "be309bca",
                "DEFAULT_ADMIN_ROLE()": "a217fddf",
                "PROTOCOL()": "91b9b827",
                "TEAM_ROLE()": "49d5e604",
                "addWhitelistTokens(address[])": "e3113df9",
                "allWhitelistedTokens(uint256)": "e468baf0",
                "depositBribe(bytes32)": "2f476003",
                "depositBribeERC20(bytes32,address,uint256)": "a602d140",
                "gauges(uint256)": "b0539187",
                "generateBribeVaultIdentifier(bytes32,uint256,address)": "3eeed1a5",
                "generateRewardIdentifier(uint256,address)": "40c58189",
                "getBribe(bytes32,uint256,address)": "f7e6b46b",
                "getGauges()": "5574f46d",
                "getRoleAdmin(bytes32)": "248a9ca3",
                "getWhitelistedTokens()": "e26f7900",
                "grantRole(bytes32,address)": "2f2ff15d",
                "grantTeamRole(address)": "f52c395a",
                "hasRole(bytes32,address)": "91d14854",
                "indexOfGauge(address)": "3d105030",
                "indexOfWhitelistedToken(address)": "8e8efaee",
                "isWhitelistedToken(address)": "ab37f486",
                "proposalDeadlines(bytes32)": "21298310",
                "removeWhitelistTokens(address[])": "b25706f3",
                "renounceRole(bytes32,address)": "36568abe",
                "revokeRole(bytes32,address)": "d547741f",
                "revokeTeamRole(address)": "5699fbad",
                "rewardForwarding(address)": "07cd2ffe",
                "setGaugeProposal(address,uint256)": "7bb4dbb9",
                "setGaugeProposals(address[],uint256[])": "7a422d2f",
                "setRewardForwarding(address)": "f96258c4",
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_BRIBE_VAULT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"AddWhitelistTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bribeIdentifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"rewardIdentifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"briber\",\"type\":\"address\"}],\"name\":\"DepositBribe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"GrantTeamRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"RemoveWhitelistTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"RevokeTeamRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"SetProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SetRewardForwarding\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BRIBE_VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTOCOL\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"addWhitelistTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"}],\"name\":\"depositBribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositBribeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gauges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"generateBribeVaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"generateRewardIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBribe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bribeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bribeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGauges\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"grantTeamRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfGauge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfWhitelistedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWhitelistedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposalDeadlines\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"removeWhitelistTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"revokeTeamRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardForwarding\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"setGaugeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"gauges_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deadlines\",\"type\":\"uint256[]\"}],\"name\":\"setGaugeProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"setRewardForwarding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addWhitelistTokens(address[])\":{\"params\":{\"tokens\":\"address[]  Tokens to add to whitelist\"}},\"depositBribe(bytes32)\":{\"params\":{\"proposal\":\"bytes32  Proposal\"}},\"depositBribeERC20(bytes32,address,uint256)\":{\"params\":{\"amount\":\"uint256  Token amount\",\"proposal\":\"bytes32  Proposal\",\"token\":\"address  Token\"}},\"generateBribeVaultIdentifier(bytes32,uint256,address)\":{\"params\":{\"proposal\":\"bytes32  Proposal\",\"proposalDeadline\":\"uint256  Proposal deadline\",\"token\":\"address  Token\"},\"returns\":{\"identifier\":\"       bytes32  BribeVault identifier\"}},\"generateRewardIdentifier(uint256,address)\":{\"params\":{\"proposalDeadline\":\"uint256  Proposal deadline\",\"token\":\"address  Token\"},\"returns\":{\"identifier\":\"       bytes32  Reward identifier\"}},\"getBribe(bytes32,uint256,address)\":{\"params\":{\"proposal\":\"bytes32  Proposal\",\"proposalDeadline\":\"uint256  Proposal deadline\",\"token\":\"address  Token\"},\"returns\":{\"bribeAmount\":\"      address  Token amount\",\"bribeToken\":\"       address  Token address\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"grantTeamRole(address)\":{\"params\":{\"teamMember\":\"address  Address to grant the teamMember role\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isWhitelistedToken(address)\":{\"params\":{\"token\":\"address Token address to be checked\"}},\"removeWhitelistTokens(address[])\":{\"params\":{\"tokens\":\"address[]  Tokens to remove from whitelist\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"revokeTeamRole(address)\":{\"params\":{\"teamMember\":\"address  Address to revoke the teamMember role\"}},\"setGaugeProposal(address,uint256)\":{\"params\":{\"deadline\":\"uint256  Proposal deadline\",\"gauge\":\"address  Gauge address\"}},\"setGaugeProposals(address[],uint256[])\":{\"params\":{\"deadlines\":\"uint256[]  Proposal deadlines\",\"gauges_\":\"address[]  Gauge addresses\"}},\"setRewardForwarding(address)\":{\"params\":{\"to\":\"address  Account that rewards will be sent to\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addWhitelistTokens(address[])\":{\"notice\":\"Add whitelist tokens\"},\"depositBribe(bytes32)\":{\"notice\":\"Deposit bribe for a proposal (native token only)\"},\"depositBribeERC20(bytes32,address,uint256)\":{\"notice\":\"Deposit bribe for a proposal (ERC20 tokens only)\"},\"generateBribeVaultIdentifier(bytes32,uint256,address)\":{\"notice\":\"Generate the BribeVault identifier based on a scheme\"},\"generateRewardIdentifier(uint256,address)\":{\"notice\":\"Generate the reward identifier based on a scheme\"},\"getBribe(bytes32,uint256,address)\":{\"notice\":\"Get bribe from BribeVault\"},\"getGauges()\":{\"notice\":\"Get list of gauges\"},\"getWhitelistedTokens()\":{\"notice\":\"Return the list of currently whitelisted token addresses\"},\"grantTeamRole(address)\":{\"notice\":\"Grant the team role to an address\"},\"isWhitelistedToken(address)\":{\"notice\":\"Return whether the specified token is whitelisted\"},\"removeWhitelistTokens(address[])\":{\"notice\":\"Remove whitelist tokens\"},\"revokeTeamRole(address)\":{\"notice\":\"Revoke the team role from an address\"},\"setGaugeProposal(address,uint256)\":{\"notice\":\"Set a single proposal for a liquidity gauge\"},\"setGaugeProposals(address[],uint256[])\":{\"notice\":\"Set multiple proposals for many gauges\"},\"setRewardForwarding(address)\":{\"notice\":\"Voters can opt in or out of reward-forwardingOpt-in: A voter sets another address to forward rewards toOpt-out: A voter sets their own address or the zero address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"BalancerBribe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "BribeBase": {
            "abi": [
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "_BRIBE_VAULT",
                    "type": "address"
                  },
                  {
                    "internalType": "string",
                    "name": "_PROTOCOL",
                    "type": "string"
                  }
                ],
                "stateMutability": "nonpayable",
                "type": "constructor"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "tokens",
                    "type": "address[]"
                  }
                ],
                "name": "AddWhitelistTokens",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "bribeIdentifier",
                    "type": "bytes32"
                  },
                  {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "rewardIdentifier",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "briber",
                    "type": "address"
                  }
                ],
                "name": "DepositBribe",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address",
                    "name": "teamMember",
                    "type": "address"
                  }
                ],
                "name": "GrantTeamRole",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "tokens",
                    "type": "address[]"
                  }
                ],
                "name": "RemoveWhitelistTokens",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address",
                    "name": "teamMember",
                    "type": "address"
                  }
                ],
                "name": "RevokeTeamRole",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                  }
                ],
                "name": "RoleAdminChanged",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  }
                ],
                "name": "RoleGranted",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  }
                ],
                "name": "RoleRevoked",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                  }
                ],
                "name": "SetProposal",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": false,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                  },
                  {
                    "indexed": false,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  }
                ],
                "name": "SetRewardForwarding",
                "type": "event"
              },
              {
                "inputs": [],
                "name": "BRIBE_VAULT",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "DEFAULT_ADMIN_ROLE",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "PROTOCOL",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "TEAM_ROLE",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address[]",
                    "name": "tokens",
                    "type": "address[]"
                  }
                ],
                "name": "addWhitelistTokens",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "name": "allWhitelistedTokens",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  }
                ],
                "name": "depositBribe",
                "outputs": [],
                "stateMutability": "payable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "name": "depositBribeERC20",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint256",
                    "name": "proposalDeadline",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  }
                ],
                "name": "generateBribeVaultIdentifier",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "identifier",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "uint256",
                    "name": "proposalDeadline",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  }
                ],
                "name": "generateRewardIdentifier",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "identifier",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "proposal",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint256",
                    "name": "proposalDeadline",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  }
                ],
                "name": "getBribe",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "bribeToken",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "bribeAmount",
                    "type": "uint256"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  }
                ],
                "name": "getRoleAdmin",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [],
                "name": "getWhitelistedTokens",
                "outputs": [
                  {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "grantRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "teamMember",
                    "type": "address"
                  }
                ],
                "name": "grantTeamRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "hasRole",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "name": "indexOfWhitelistedToken",
                "outputs": [
                  {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  }
                ],
                "name": "isWhitelistedToken",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "name": "proposalDeadlines",
                "outputs": [
                  {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address[]",
                    "name": "tokens",
                    "type": "address[]"
                  }
                ],
                "name": "removeWhitelistTokens",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "renounceRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "revokeRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "teamMember",
                    "type": "address"
                  }
                ],
                "name": "revokeTeamRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "name": "rewardForwarding",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  }
                ],
                "name": "setRewardForwarding",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                  }
                ],
                "name": "supportsInterface",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              }
            ],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "60c06040523480156200001157600080fd5b506040516200212038038062002120833981016040819052620000349162000198565b600180556001600160a01b0382166200006a5760405162461bcd60e51b81526004016200006190620002a5565b60405180910390fd5b6001600160601b0319606083901b1660805280516200009d5760405162461bcd60e51b815260040162000061906200027a565b80604051602001620000b091906200025c565b60408051601f19818403018152919052805160209091012060a052620000d8600033620000e0565b50506200030f565b620000ec82826200016b565b62000167576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200012662000194565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3390565b60008060408385031215620001ab578182fd5b82516001600160a01b0381168114620001c2578283fd5b60208401519092506001600160401b0380821115620001df578283fd5b818501915085601f830112620001f3578283fd5b81518181111562000202578384fd5b604051601f8201601f19168101602001838111828210171562000223578586fd5b6040528181528382016020018810156200023b578485fd5b6200024e826020830160208701620002dc565b809450505050509250929050565b6000825162000270818460208701620002dc565b9190910192915050565b602080825260119082015270125b9d985b1a590817d41493d513d0d3d3607a1b604082015260600190565b60208082526014908201527f496e76616c6964205f42524942455f5641554c54000000000000000000000000604082015260600190565b60005b83811015620002f9578181015183820152602001620002df565b8381111562000309576000848401525b50505050565b60805160601c60a051611dbd62000363600039806107db52806108335280610975525080610640528061066e528061069652806107235280610ad45280610e365280610f8752806111bc5250611dbd6000f3fe6080604052600436106101a15760003560e01c806391d14854116100e1578063d547741f1161008a578063e468baf011610064578063e468baf014610461578063f52c395a14610481578063f7e6b46b146104a1578063f96258c4146104cf576101a1565b8063d547741f146103ff578063e26f79001461041f578063e3113df914610441576101a1565b8063ab37f486116100bb578063ab37f486146103aa578063b25706f3146103ca578063be309bca146103ea576101a1565b806391d1485414610355578063a217fddf14610375578063a602d1401461038a576101a1565b806336568abe1161014e57806349d5e6041161012857806349d5e604146102eb5780635699fbad146103005780638e8efaee1461032057806391b9b82714610340576101a1565b806336568abe1461028b5780633eeed1a5146102ab57806340c58189146102cb576101a1565b8063248a9ca31161017f578063248a9ca3146102365780632f2ff15d146102565780632f47600314610278576101a1565b806301ffc9a7146101a657806307cd2ffe146101dc5780632129831014610209575b600080fd5b3480156101b257600080fd5b506101c66101c13660046117c0565b6104ef565b6040516101d391906119b9565b60405180910390f35b3480156101e857600080fd5b506101fc6101f7366004611652565b61054d565b6040516101d391906118d7565b34801561021557600080fd5b5061022961022436600461170a565b610568565b6040516101d391906119c4565b34801561024257600080fd5b5061022961025136600461170a565b61057a565b34801561026257600080fd5b50610276610271366004611722565b61058f565b005b61027661028636600461170a565b6105b8565b34801561029757600080fd5b506102766102a6366004611722565b610791565b3480156102b757600080fd5b506102296102c6366004611788565b6107d7565b3480156102d757600080fd5b506102296102e6366004611722565b61082f565b3480156102f757600080fd5b50610229610884565b34801561030c57600080fd5b5061027661031b366004611652565b6108a8565b34801561032c57600080fd5b5061022961033b366004611652565b610961565b34801561034c57600080fd5b50610229610973565b34801561036157600080fd5b506101c6610370366004611722565b610997565b34801561038157600080fd5b506102296109c0565b34801561039657600080fd5b506102766103a5366004611751565b6109c5565b3480156103b657600080fd5b506101c66103c5366004611652565b610b9f565b3480156103d657600080fd5b506102766103e536600461169b565b610c06565b3480156103f657600080fd5b506101fc610e34565b34801561040b57600080fd5b5061027661041a366004611722565b610e58565b34801561042b57600080fd5b50610434610e77565b6040516101d3919061196c565b34801561044d57600080fd5b5061027661045c36600461169b565b610ed9565b34801561046d57600080fd5b506101fc61047c36600461170a565b611103565b34801561048d57600080fd5b5061027661049c366004611652565b61112a565b3480156104ad57600080fd5b506104c16104bc366004611788565b6111b7565b6040516101d3929190611905565b3480156104db57600080fd5b506102766104ea366004611652565b61126b565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806105455750610545826112db565b90505b919050565b6003602052600090815260409020546001600160a01b031681565b60026020526000908152604090205481565b60009081526020819052604090206001015490565b6105988261057a565b6105a9816105a4611325565b611329565b6105b3838361138d565b505050565b600260015414156105e45760405162461bcd60e51b81526004016105db90611c01565b60405180910390fd5b600260018190556000828152602091909152604090205442811161061a5760405162461bcd60e51b81526004016105db90611bca565b346106375760405162461bcd60e51b81526004016105db90611c38565b600061066483837f00000000000000000000000000000000000000000000000000000000000000006107d7565b90506000610692837f000000000000000000000000000000000000000000000000000000000000000061082f565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631933a4eb348484336040518563ffffffff1660e01b81526004016106e5939291906119cd565b6000604051808303818588803b1580156106fe57600080fd5b505af1158015610712573d6000803e3d6000fd5b5050505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316857f6f1e998489da0152047f9f97b3c6f21b503848ef7d66c815ebd247b87066e90b34868660405161077f93929190611d29565b60405180910390a45050600180555050565b610799611325565b6001600160a01b0316816001600160a01b0316146107c95760405162461bcd60e51b81526004016105db90611ccc565b6107d38282611412565b5050565b60007f00000000000000000000000000000000000000000000000000000000000000008484846040516020016108109493929190611800565b6040516020818303038152906040528051906020012090509392505050565b60007f000000000000000000000000000000000000000000000000000000000000000083836040516020016108669392919061182e565b60405160208183030381529060405280519060200120905092915050565b7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3381565b60006108b6816105a4611325565b6108e07f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3383610997565b6108fc5760405162461bcd60e51b81526004016105db90611b25565b6109267f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3383611412565b7f708bd40f8f4d2ad60032caea0582161d35c50177cc0b2c575b5d483bd2902caa8260405161095591906118d7565b60405180910390a15050565b60046020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b600260015414156109e85760405162461bcd60e51b81526004016105db90611c01565b6002600181905560008481526020919091526040902054428111610a1e5760405162461bcd60e51b81526004016105db90611bca565b6001600160a01b038316610a445760405162461bcd60e51b81526004016105db90611aee565b610a4d83610b9f565b610a695760405162461bcd60e51b81526004016105db90611ab7565b81610a865760405162461bcd60e51b81526004016105db90611c38565b6000610a938583866107d7565b90506000610aa1838661082f565b6040517f69b999340000000000000000000000000000000000000000000000000000000081529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369b9993490610b1190859085908a908a9033906004016119ec565b600060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b50505050336001600160a01b0316856001600160a01b0316877f6f1e998489da0152047f9f97b3c6f21b503848ef7d66c815ebd247b87066e90b878686604051610b8b93929190611d29565b60405180910390a450506001805550505050565b600554600090610bb157506000610548565b6001600160a01b0382166000908152600460205260409020541515806105455750816001600160a01b03166005600081548110610bea57fe5b6000918252602090912001546001600160a01b03161492915050565b610c11600033610997565b80610c415750610c417f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610997565b610c5d5760405162461bcd60e51b81526004016105db90611c95565b60005b81811015610e0257610c8c838383818110610c7757fe5b90506020020160208101906103c59190611652565b610ca85760405162461bcd60e51b81526004016105db90611b93565b600060046000858585818110610cba57fe5b9050602002016020810190610ccf9190611652565b6001600160a01b03166001600160a01b031681526020019081526020016000205490506000600560016005805490500381548110610d0957fe5b600091825260209091200154600580546001600160a01b039092169250829184908110610d3257fe5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03948516179055918316815260049182905260408120849055868686818110610d8557fe5b9050602002016020810190610d9a9190611652565b6001600160a01b03166001600160a01b03168152602001908152602001600020600090556005805480610dc957fe5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555050600101610c60565b507faf397cf4dd9b218aa8392d733be436eca6dc865d9fef8bddc37ff3cce5a58326828260405161095592919061191e565b7f000000000000000000000000000000000000000000000000000000000000000081565b610e618261057a565b610e6d816105a4611325565b6105b38383611412565b60606005805480602002602001604051908101604052809291908181526020018280548015610ecf57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610eb1575b5050505050905090565b610ee4600033610997565b80610f145750610f147f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610997565b610f305760405162461bcd60e51b81526004016105db90611c95565b60005b818110156110d1576000838383818110610f4957fe5b9050602002016020810190610f5e9190611652565b6001600160a01b03161415610f855760405162461bcd60e51b81526004016105db90611aee565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316838383818110610fbb57fe5b9050602002016020810190610fd09190611652565b6001600160a01b03161415610ff75760405162461bcd60e51b81526004016105db90611a80565b611006838383818110610c7757fe5b156110235760405162461bcd60e51b81526004016105db90611b5c565b600583838381811061103157fe5b90506020020160208101906110469190611652565b815460018101835560009283526020832001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055600554600019019060049085858581811061109a57fe5b90506020020160208101906110af9190611652565b6001600160a01b03168152602081019190915260400160002055600101610f33565b507fee3f29a31e91df914992dacfb3a9feb176d6cb3c1e35a4ebbe186aeb4827a60b828260405161095592919061191e565b6005818154811061111057fe5b6000918252602090912001546001600160a01b0316905081565b6000611138816105a4611325565b6001600160a01b03821661115e5760405162461bcd60e51b81526004016105db90611b25565b6111887f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b338361138d565b7fd36b0989e598a1b05388150a9a8c84925e2710d91910406b8735e01f3ed028178260405161095591906118d7565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c4ef0d56111f48787876107d7565b6040518263ffffffff1660e01b815260040161121091906119c4565b604080518083038186803b15801561122757600080fd5b505afa15801561123b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125f919061166e565b91509150935093915050565b3360008181526003602052604090819020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516179055517fbbd6eb1e2586cc8ea8e80aa1ccf25590beffdd2cb73367b5ac49214505bb48c4916112d09184906118eb565b60405180910390a150565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3390565b6113338282610997565b6107d35761134b816001600160a01b03166014611495565b611356836020611495565b604051602001611367929190611856565b60408051601f198184030181529082905262461bcd60e51b82526105db91600401611a18565b6113978282610997565b6107d3576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556113ce611325565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61141c8282610997565b156107d3576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055611451611325565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6060808260020260020167ffffffffffffffff811180156114b557600080fd5b506040519080825280601f01601f1916602001820160405280156114e0576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061151157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061156e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600160028402015b600181111561162c577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106115dd57fe5b1a60f81b8282815181106115ed57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93600019016115a5565b50831561164b5760405162461bcd60e51b81526004016105db90611a4b565b9392505050565b600060208284031215611663578081fd5b813561164b81611d6f565b60008060408385031215611680578081fd5b825161168b81611d6f565b6020939093015192949293505050565b600080602083850312156116ad578182fd5b823567ffffffffffffffff808211156116c4578384fd5b818501915085601f8301126116d7578384fd5b8135818111156116e5578485fd5b86602080830285010111156116f8578485fd5b60209290920196919550909350505050565b60006020828403121561171b578081fd5b5035919050565b60008060408385031215611734578182fd5b82359150602083013561174681611d6f565b809150509250929050565b600080600060608486031215611765578081fd5b83359250602084013561177781611d6f565b929592945050506040919091013590565b60008060006060848603121561179c578283fd5b833592506020840135915060408401356117b581611d6f565b809150509250925092565b6000602082840312156117d1578081fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461164b578182fd5b93845260208401929092526040830152606090811b6bffffffffffffffffffffffff19169082015260740190565b928352602083019190915260601b6bffffffffffffffffffffffff1916604082015260540190565b60007f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008252835161188e816017850160208801611d3f565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516118cb816028840160208801611d3f565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60208082528181018390526000908460408401835b8681101561196157823561194681611d6f565b6001600160a01b031682529183019190830190600101611933565b509695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156119ad5783516001600160a01b031683529284019291840191600101611988565b50909695505050505050565b901515815260200190565b90815260200190565b92835260208301919091526001600160a01b0316604082015260600190565b94855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b6000602082528251806020840152611a37816040850160208701611d3f565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252601c908201527f43616e6e6f742077686974656c6973742042524942455f5641554c5400000000604082015260600190565b60208082526018908201527f546f6b656e206973206e6f742077686974656c69737465640000000000000000604082015260600190565b6020808252600d908201527f496e76616c696420746f6b656e00000000000000000000000000000000000000604082015260600190565b60208082526012908201527f496e76616c6964207465616d4d656d6265720000000000000000000000000000604082015260600190565b60208082526019908201527f546f6b656e20616c72656164792077686974656c697374656400000000000000604082015260600190565b60208082526015908201527f546f6b656e206e6f742077686974656c69737465640000000000000000000000604082015260600190565b6020808252601c908201527f50726f706f73616c20646561646c696e65206861732070617373656400000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526023908201527f427269626520616d6f756e74206d75737420626520677265617465722074686160408201527f6e20300000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252600e908201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b9283526020830191909152604082015260600190565b60005b83811015611d5a578181015183820152602001611d42565b83811115611d69576000848401525b50505050565b6001600160a01b0381168114611d8457600080fd5b5056fea26469706673582212204d52916f1228e92b9f925dee966d976455e5041f8067b850b46b9bad1f18c71a64736f6c63430007010033",
                "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2120 CODESIZE SUB DUP1 PUSH3 0x2120 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x198 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x61 SWAP1 PUSH3 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE DUP1 MLOAD PUSH3 0x9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x61 SWAP1 PUSH3 0x27A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xB0 SWAP2 SWAP1 PUSH3 0x25C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xA0 MSTORE PUSH3 0xD8 PUSH1 0x0 CALLER PUSH3 0xE0 JUMP JUMPDEST POP POP PUSH3 0x30F JUMP JUMPDEST PUSH3 0xEC DUP3 DUP3 PUSH3 0x16B JUMP JUMPDEST PUSH3 0x167 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x126 PUSH3 0x194 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1AB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1C2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1DF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1F3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x202 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x223 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP9 LT ISZERO PUSH3 0x23B JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x24E DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x2DC JUMP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x270 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x2DC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A590817D41493D513D0D3D3 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205F42524942455F5641554C54000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2DF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x309 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0x1DBD PUSH3 0x363 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x7DB MSTORE DUP1 PUSH2 0x833 MSTORE DUP1 PUSH2 0x975 MSTORE POP DUP1 PUSH2 0x640 MSTORE DUP1 PUSH2 0x66E MSTORE DUP1 PUSH2 0x696 MSTORE DUP1 PUSH2 0x723 MSTORE DUP1 PUSH2 0xAD4 MSTORE DUP1 PUSH2 0xE36 MSTORE DUP1 PUSH2 0xF87 MSTORE DUP1 PUSH2 0x11BC MSTORE POP PUSH2 0x1DBD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE468BAF0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE468BAF0 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xF52C395A EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF7E6B46B EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xF96258C4 EQ PUSH2 0x4CF JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xE26F7900 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xE3113DF9 EQ PUSH2 0x441 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0xAB37F486 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xAB37F486 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xB25706F3 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xBE309BCA EQ PUSH2 0x3EA JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xA602D140 EQ PUSH2 0x38A JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x14E JUMPI DUP1 PUSH4 0x49D5E604 GT PUSH2 0x128 JUMPI DUP1 PUSH4 0x49D5E604 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x5699FBAD EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x8E8EFAEE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x91B9B827 EQ PUSH2 0x340 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x3EEED1A5 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x40C58189 EQ PUSH2 0x2CB JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x2F476003 EQ PUSH2 0x278 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x7CD2FFE EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x21298310 EQ PUSH2 0x209 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x18D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x884 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x973 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x9C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x9C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x169B JUMP JUMPDEST PUSH2 0xC06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0xE34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x169B JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH2 0x4BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x126B JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x545 JUMPI POP PUSH2 0x545 DUP3 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x57A JUMP JUMPDEST PUSH2 0x5A9 DUP2 PUSH2 0x5A4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x5B3 DUP4 DUP4 PUSH2 0x138D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1BCA JUMP JUMPDEST CALLVALUE PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 DUP4 DUP4 PUSH32 0x0 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x692 DUP4 PUSH32 0x0 PUSH2 0x82F JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1933A4EB CALLVALUE DUP5 DUP5 CALLER PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x6F1E998489DA0152047F9F97B3C6F21B503848EF7D66C815EBD247B87066E90B CALLVALUE DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x77F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x799 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x7D3 DUP3 DUP3 PUSH2 0x1412 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x810 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x866 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B6 DUP2 PUSH2 0x5A4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x8E0 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x8FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x926 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x1412 JUMP JUMPDEST PUSH32 0x708BD40F8F4D2AD60032CAEA0582161D35C50177CC0B2C575B5D483BD2902CAA DUP3 PUSH1 0x40 MLOAD PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0xA4D DUP4 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1AB7 JUMP JUMPDEST DUP2 PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA93 DUP6 DUP4 DUP7 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAA1 DUP4 DUP7 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x69B9993400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x69B99934 SWAP1 PUSH2 0xB11 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP11 SWAP1 DUP11 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH32 0x6F1E998489DA0152047F9F97B3C6F21B503848EF7D66C815EBD247B87066E90B DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBB1 JUMPI POP PUSH1 0x0 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x545 JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xBEA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC11 PUSH1 0x0 CALLER PUSH2 0x997 JUMP JUMPDEST DUP1 PUSH2 0xC41 JUMPI POP PUSH2 0xC41 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0x997 JUMP JUMPDEST PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE02 JUMPI PUSH2 0xC8C DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xC77 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xCBA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCCF SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT PUSH2 0xD09 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0xD32 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0xD85 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD9A SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0xDC9 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0xC60 JUMP JUMPDEST POP PUSH32 0xAF397CF4DD9B218AA8392D733BE436ECA6DC865D9FEF8BDDC37FF3CCE5A58326 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x955 SWAP3 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xE61 DUP3 PUSH2 0x57A JUMP JUMPDEST PUSH2 0xE6D DUP2 PUSH2 0x5A4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x5B3 DUP4 DUP4 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xECF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEB1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE4 PUSH1 0x0 CALLER PUSH2 0x997 JUMP JUMPDEST DUP1 PUSH2 0xF14 JUMPI POP PUSH2 0xF14 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0x997 JUMP JUMPDEST PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10D1 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xF49 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xFBB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFD0 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x1006 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xC77 JUMPI INVALID JUMPDEST ISZERO PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x5 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1031 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH1 0x4 SWAP1 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x109A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0xF33 JUMP JUMPDEST POP PUSH32 0xEE3F29A31E91DF914992DACFB3A9FEB176D6CB3C1E35A4EBBE186AEB4827A60B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x955 SWAP3 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1110 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 DUP2 PUSH2 0x5A4 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x1188 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x138D JUMP JUMPDEST PUSH32 0xD36B0989E598A1B05388150A9A8C84925E2710D91910406B8735E01F3ED02817 DUP3 PUSH1 0x40 MLOAD PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2C4EF0D5 PUSH2 0x11F4 DUP8 DUP8 DUP8 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE MLOAD PUSH32 0xBBD6EB1E2586CC8EA8E80AA1CCF25590BEFFDD2CB73367B5AC49214505BB48C4 SWAP2 PUSH2 0x12D0 SWAP2 DUP5 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1333 DUP3 DUP3 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x7D3 JUMPI PUSH2 0x134B DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x1356 DUP4 PUSH1 0x20 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1367 SWAP3 SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x5DB SWAP2 PUSH1 0x4 ADD PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x1397 DUP3 DUP3 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x13CE PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x141C DUP3 DUP3 PUSH2 0x997 JUMP JUMPDEST ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1451 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x2 MUL PUSH1 0x2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1511 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x156E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 PUSH1 0x2 DUP5 MUL ADD JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x162C JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x15DD JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15ED JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH1 0x0 NOT ADD PUSH2 0x15A5 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1A4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1663 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x164B DUP2 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1680 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x168B DUP2 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AD JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16C4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16D7 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16E5 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x16F8 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1734 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1746 DUP2 PUSH2 0x1D6F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1765 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1777 DUP2 PUSH2 0x1D6F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x179C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x17B5 DUP2 PUSH2 0x1D6F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x164B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP3 ADD MSTORE PUSH1 0x74 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x188E DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D3F JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x18CB DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D3F JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1961 JUMPI DUP3 CALLDATALOAD PUSH2 0x1946 DUP2 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1933 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19AD JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1988 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A37 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077686974656C6973742042524942455F5641554C5400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F742077686974656C69737465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207465616D4D656D6265720000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C72656164792077686974656C697374656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F742077686974656C69737465640000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646561646C696E65206861732070617373656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x427269626520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D5A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D42 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D69 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MSTORE SWAP2 PUSH16 0x1228E92B9F925DEE966D976455E5041F DUP1 PUSH8 0xB850B46B9BAD1F18 0xC7 BYTE PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
                "sourceMap": "18551:10209:0:-:0;;;19735:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16975:1;17080:22;;-1:-1:-1;;;;;19812:26:0;;19804:59;;;;-1:-1:-1;;;19804:59:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;19873:26:0;;;;;;;19918:23;;19910:58;;;;-1:-1:-1;;;19910:58:0;;;;;;;:::i;:::-;20016:9;19999:27;;;;;;;;:::i;:::-;;;;-1:-1:-1;;19999:27:0;;;;;;;;;19989:38;;19999:27;19989:38;;;;19978:49;;20038:42;9874:4;20069:10;20038;:42::i;:::-;19735:352;;18551:10209;;14639:233;14722:22;14730:4;14736:7;14722;:22::i;:::-;14717:149;;14760:6;:12;;;;;;;;;;;-1:-1:-1;;;;;14760:29:0;;;;;;;;;:36;;-1:-1:-1;;14760:36:0;14792:4;14760:36;;;14842:12;:10;:12::i;:::-;-1:-1:-1;;;;;14815:40:0;14833:7;-1:-1:-1;;;;;14815:40:0;14827:4;14815:40;;;;;;;;;;14717:149;14639:233;;:::o;10711:137::-;10789:4;10812:12;;;;;;;;;;;-1:-1:-1;;;;;10812:29:0;;;;;;;;;;;;;;;10711:137::o;3751:96::-;3830:10;3751:96;:::o;599:498:-1:-;;;741:2;729:9;720:7;716:23;712:32;709:2;;;-1:-1;;747:12;709:2;83:13;;-1:-1;;;;;4461:54;;4863:35;;4853:2;;-1:-1;;4902:12;4853:2;931;916:18;;910:25;799:74;;-1:-1;;;;;;944:30;;;941:2;;;-1:-1;;977:12;941:2;1064:6;1053:9;1049:22;;;260:3;253:4;245:6;241:17;237:27;227:2;;-1:-1;;268:12;227:2;308:6;302:13;955:18;3653:6;3650:30;3647:2;;;-1:-1;;3683:12;3647:2;741;3310:9;3756;3737:17;;-1:-1;;3733:33;3342:17;;931:2;3342:17;3402:34;;;3438:22;;;3399:62;3396:2;;;-1:-1;;3464:12;3396:2;741;3483:22;401:21;;;501:16;;;931:2;501:16;498:25;-1:-1;495:2;;;-1:-1;;526:12;495:2;546:39;578:6;931:2;477:5;473:16;931:2;443:6;439:17;546:39;:::i;:::-;997:84;;;;;;;703:394;;;;;:::o;2126:275::-;;1267:5;3934:12;1379:52;1424:6;1419:3;1412:4;1405:5;1401:16;1379:52;:::i;:::-;1443:16;;;;;2262:139;-1:-1;;2262:139::o;2408:416::-;2608:2;2622:47;;;1696:2;2593:18;;;4079:19;-1:-1;;;4119:14;;;1712:40;1771:12;;;2579:245::o;2831:416::-;3031:2;3045:47;;;2022:2;3016:18;;;4079:19;2058:22;4119:14;;;2038:43;2100:12;;;3002:245::o;4528:268::-;4593:1;4600:101;4614:6;4611:1;4608:13;4600:101;;;4681:11;;;4675:18;4662:11;;;4655:39;4636:2;4629:10;4600:101;;;4716:6;4713:1;4710:13;4707:2;;;4593:1;4772:6;4767:3;4763:16;4756:27;4707:2;;4577:219;;;:::o;:::-;18551:10209:0;;;;;;;;;;;;;;"
              },
              "deployedBytecode": {
                "immutableReferences": {
                  "711": [
                    {
                      "length": 32,
                      "start": 1600
                    },
                    {
                      "length": 32,
                      "start": 1646
                    },
                    {
                      "length": 32,
                      "start": 1686
                    },
                    {
                      "length": 32,
                      "start": 1827
                    },
                    {
                      "length": 32,
                      "start": 2772
                    },
                    {
                      "length": 32,
                      "start": 3638
                    },
                    {
                      "length": 32,
                      "start": 3975
                    },
                    {
                      "length": 32,
                      "start": 4540
                    }
                  ],
                  "718": [
                    {
                      "length": 32,
                      "start": 2011
                    },
                    {
                      "length": 32,
                      "start": 2099
                    },
                    {
                      "length": 32,
                      "start": 2421
                    }
                  ]
                },
                "linkReferences": {},
                "object": "6080604052600436106101a15760003560e01c806391d14854116100e1578063d547741f1161008a578063e468baf011610064578063e468baf014610461578063f52c395a14610481578063f7e6b46b146104a1578063f96258c4146104cf576101a1565b8063d547741f146103ff578063e26f79001461041f578063e3113df914610441576101a1565b8063ab37f486116100bb578063ab37f486146103aa578063b25706f3146103ca578063be309bca146103ea576101a1565b806391d1485414610355578063a217fddf14610375578063a602d1401461038a576101a1565b806336568abe1161014e57806349d5e6041161012857806349d5e604146102eb5780635699fbad146103005780638e8efaee1461032057806391b9b82714610340576101a1565b806336568abe1461028b5780633eeed1a5146102ab57806340c58189146102cb576101a1565b8063248a9ca31161017f578063248a9ca3146102365780632f2ff15d146102565780632f47600314610278576101a1565b806301ffc9a7146101a657806307cd2ffe146101dc5780632129831014610209575b600080fd5b3480156101b257600080fd5b506101c66101c13660046117c0565b6104ef565b6040516101d391906119b9565b60405180910390f35b3480156101e857600080fd5b506101fc6101f7366004611652565b61054d565b6040516101d391906118d7565b34801561021557600080fd5b5061022961022436600461170a565b610568565b6040516101d391906119c4565b34801561024257600080fd5b5061022961025136600461170a565b61057a565b34801561026257600080fd5b50610276610271366004611722565b61058f565b005b61027661028636600461170a565b6105b8565b34801561029757600080fd5b506102766102a6366004611722565b610791565b3480156102b757600080fd5b506102296102c6366004611788565b6107d7565b3480156102d757600080fd5b506102296102e6366004611722565b61082f565b3480156102f757600080fd5b50610229610884565b34801561030c57600080fd5b5061027661031b366004611652565b6108a8565b34801561032c57600080fd5b5061022961033b366004611652565b610961565b34801561034c57600080fd5b50610229610973565b34801561036157600080fd5b506101c6610370366004611722565b610997565b34801561038157600080fd5b506102296109c0565b34801561039657600080fd5b506102766103a5366004611751565b6109c5565b3480156103b657600080fd5b506101c66103c5366004611652565b610b9f565b3480156103d657600080fd5b506102766103e536600461169b565b610c06565b3480156103f657600080fd5b506101fc610e34565b34801561040b57600080fd5b5061027661041a366004611722565b610e58565b34801561042b57600080fd5b50610434610e77565b6040516101d3919061196c565b34801561044d57600080fd5b5061027661045c36600461169b565b610ed9565b34801561046d57600080fd5b506101fc61047c36600461170a565b611103565b34801561048d57600080fd5b5061027661049c366004611652565b61112a565b3480156104ad57600080fd5b506104c16104bc366004611788565b6111b7565b6040516101d3929190611905565b3480156104db57600080fd5b506102766104ea366004611652565b61126b565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806105455750610545826112db565b90505b919050565b6003602052600090815260409020546001600160a01b031681565b60026020526000908152604090205481565b60009081526020819052604090206001015490565b6105988261057a565b6105a9816105a4611325565b611329565b6105b3838361138d565b505050565b600260015414156105e45760405162461bcd60e51b81526004016105db90611c01565b60405180910390fd5b600260018190556000828152602091909152604090205442811161061a5760405162461bcd60e51b81526004016105db90611bca565b346106375760405162461bcd60e51b81526004016105db90611c38565b600061066483837f00000000000000000000000000000000000000000000000000000000000000006107d7565b90506000610692837f000000000000000000000000000000000000000000000000000000000000000061082f565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631933a4eb348484336040518563ffffffff1660e01b81526004016106e5939291906119cd565b6000604051808303818588803b1580156106fe57600080fd5b505af1158015610712573d6000803e3d6000fd5b5050505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316857f6f1e998489da0152047f9f97b3c6f21b503848ef7d66c815ebd247b87066e90b34868660405161077f93929190611d29565b60405180910390a45050600180555050565b610799611325565b6001600160a01b0316816001600160a01b0316146107c95760405162461bcd60e51b81526004016105db90611ccc565b6107d38282611412565b5050565b60007f00000000000000000000000000000000000000000000000000000000000000008484846040516020016108109493929190611800565b6040516020818303038152906040528051906020012090509392505050565b60007f000000000000000000000000000000000000000000000000000000000000000083836040516020016108669392919061182e565b60405160208183030381529060405280519060200120905092915050565b7f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3381565b60006108b6816105a4611325565b6108e07f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3383610997565b6108fc5760405162461bcd60e51b81526004016105db90611b25565b6109267f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3383611412565b7f708bd40f8f4d2ad60032caea0582161d35c50177cc0b2c575b5d483bd2902caa8260405161095591906118d7565b60405180910390a15050565b60046020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b600260015414156109e85760405162461bcd60e51b81526004016105db90611c01565b6002600181905560008481526020919091526040902054428111610a1e5760405162461bcd60e51b81526004016105db90611bca565b6001600160a01b038316610a445760405162461bcd60e51b81526004016105db90611aee565b610a4d83610b9f565b610a695760405162461bcd60e51b81526004016105db90611ab7565b81610a865760405162461bcd60e51b81526004016105db90611c38565b6000610a938583866107d7565b90506000610aa1838661082f565b6040517f69b999340000000000000000000000000000000000000000000000000000000081529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369b9993490610b1190859085908a908a9033906004016119ec565b600060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b50505050336001600160a01b0316856001600160a01b0316877f6f1e998489da0152047f9f97b3c6f21b503848ef7d66c815ebd247b87066e90b878686604051610b8b93929190611d29565b60405180910390a450506001805550505050565b600554600090610bb157506000610548565b6001600160a01b0382166000908152600460205260409020541515806105455750816001600160a01b03166005600081548110610bea57fe5b6000918252602090912001546001600160a01b03161492915050565b610c11600033610997565b80610c415750610c417f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610997565b610c5d5760405162461bcd60e51b81526004016105db90611c95565b60005b81811015610e0257610c8c838383818110610c7757fe5b90506020020160208101906103c59190611652565b610ca85760405162461bcd60e51b81526004016105db90611b93565b600060046000858585818110610cba57fe5b9050602002016020810190610ccf9190611652565b6001600160a01b03166001600160a01b031681526020019081526020016000205490506000600560016005805490500381548110610d0957fe5b600091825260209091200154600580546001600160a01b039092169250829184908110610d3257fe5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03948516179055918316815260049182905260408120849055868686818110610d8557fe5b9050602002016020810190610d9a9190611652565b6001600160a01b03166001600160a01b03168152602001908152602001600020600090556005805480610dc957fe5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555050600101610c60565b507faf397cf4dd9b218aa8392d733be436eca6dc865d9fef8bddc37ff3cce5a58326828260405161095592919061191e565b7f000000000000000000000000000000000000000000000000000000000000000081565b610e618261057a565b610e6d816105a4611325565b6105b38383611412565b60606005805480602002602001604051908101604052809291908181526020018280548015610ecf57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610eb1575b5050505050905090565b610ee4600033610997565b80610f145750610f147f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b3333610997565b610f305760405162461bcd60e51b81526004016105db90611c95565b60005b818110156110d1576000838383818110610f4957fe5b9050602002016020810190610f5e9190611652565b6001600160a01b03161415610f855760405162461bcd60e51b81526004016105db90611aee565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316838383818110610fbb57fe5b9050602002016020810190610fd09190611652565b6001600160a01b03161415610ff75760405162461bcd60e51b81526004016105db90611a80565b611006838383818110610c7757fe5b156110235760405162461bcd60e51b81526004016105db90611b5c565b600583838381811061103157fe5b90506020020160208101906110469190611652565b815460018101835560009283526020832001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055600554600019019060049085858581811061109a57fe5b90506020020160208101906110af9190611652565b6001600160a01b03168152602081019190915260400160002055600101610f33565b507fee3f29a31e91df914992dacfb3a9feb176d6cb3c1e35a4ebbe186aeb4827a60b828260405161095592919061191e565b6005818154811061111057fe5b6000918252602090912001546001600160a01b0316905081565b6000611138816105a4611325565b6001600160a01b03821661115e5760405162461bcd60e51b81526004016105db90611b25565b6111887f5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b338361138d565b7fd36b0989e598a1b05388150a9a8c84925e2710d91910406b8735e01f3ed028178260405161095591906118d7565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c4ef0d56111f48787876107d7565b6040518263ffffffff1660e01b815260040161121091906119c4565b604080518083038186803b15801561122757600080fd5b505afa15801561123b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125f919061166e565b91509150935093915050565b3360008181526003602052604090819020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516179055517fbbd6eb1e2586cc8ea8e80aa1ccf25590beffdd2cb73367b5ac49214505bb48c4916112d09184906118eb565b60405180910390a150565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3390565b6113338282610997565b6107d35761134b816001600160a01b03166014611495565b611356836020611495565b604051602001611367929190611856565b60408051601f198184030181529082905262461bcd60e51b82526105db91600401611a18565b6113978282610997565b6107d3576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556113ce611325565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61141c8282610997565b156107d3576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055611451611325565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6060808260020260020167ffffffffffffffff811180156114b557600080fd5b506040519080825280601f01601f1916602001820160405280156114e0576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061151157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061156e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600160028402015b600181111561162c577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106115dd57fe5b1a60f81b8282815181106115ed57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93600019016115a5565b50831561164b5760405162461bcd60e51b81526004016105db90611a4b565b9392505050565b600060208284031215611663578081fd5b813561164b81611d6f565b60008060408385031215611680578081fd5b825161168b81611d6f565b6020939093015192949293505050565b600080602083850312156116ad578182fd5b823567ffffffffffffffff808211156116c4578384fd5b818501915085601f8301126116d7578384fd5b8135818111156116e5578485fd5b86602080830285010111156116f8578485fd5b60209290920196919550909350505050565b60006020828403121561171b578081fd5b5035919050565b60008060408385031215611734578182fd5b82359150602083013561174681611d6f565b809150509250929050565b600080600060608486031215611765578081fd5b83359250602084013561177781611d6f565b929592945050506040919091013590565b60008060006060848603121561179c578283fd5b833592506020840135915060408401356117b581611d6f565b809150509250925092565b6000602082840312156117d1578081fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461164b578182fd5b93845260208401929092526040830152606090811b6bffffffffffffffffffffffff19169082015260740190565b928352602083019190915260601b6bffffffffffffffffffffffff1916604082015260540190565b60007f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008252835161188e816017850160208801611d3f565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516118cb816028840160208801611d3f565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60208082528181018390526000908460408401835b8681101561196157823561194681611d6f565b6001600160a01b031682529183019190830190600101611933565b509695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156119ad5783516001600160a01b031683529284019291840191600101611988565b50909695505050505050565b901515815260200190565b90815260200190565b92835260208301919091526001600160a01b0316604082015260600190565b94855260208501939093526001600160a01b039182166040850152606084015216608082015260a00190565b6000602082528251806020840152611a37816040850160208701611d3f565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252601c908201527f43616e6e6f742077686974656c6973742042524942455f5641554c5400000000604082015260600190565b60208082526018908201527f546f6b656e206973206e6f742077686974656c69737465640000000000000000604082015260600190565b6020808252600d908201527f496e76616c696420746f6b656e00000000000000000000000000000000000000604082015260600190565b60208082526012908201527f496e76616c6964207465616d4d656d6265720000000000000000000000000000604082015260600190565b60208082526019908201527f546f6b656e20616c72656164792077686974656c697374656400000000000000604082015260600190565b60208082526015908201527f546f6b656e206e6f742077686974656c69737465640000000000000000000000604082015260600190565b6020808252601c908201527f50726f706f73616c20646561646c696e65206861732070617373656400000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526023908201527f427269626520616d6f756e74206d75737420626520677265617465722074686160408201527f6e20300000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252600e908201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b9283526020830191909152604082015260600190565b60005b83811015611d5a578181015183820152602001611d42565b83811115611d69576000848401525b50505050565b6001600160a01b0381168114611d8457600080fd5b5056fea26469706673582212204d52916f1228e92b9f925dee966d976455e5041f8067b850b46b9bad1f18c71a64736f6c63430007010033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE468BAF0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE468BAF0 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xF52C395A EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF7E6B46B EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xF96258C4 EQ PUSH2 0x4CF JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xE26F7900 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xE3113DF9 EQ PUSH2 0x441 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0xAB37F486 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xAB37F486 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xB25706F3 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xBE309BCA EQ PUSH2 0x3EA JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xA602D140 EQ PUSH2 0x38A JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x14E JUMPI DUP1 PUSH4 0x49D5E604 GT PUSH2 0x128 JUMPI DUP1 PUSH4 0x49D5E604 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x5699FBAD EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x8E8EFAEE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x91B9B827 EQ PUSH2 0x340 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x3EEED1A5 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x40C58189 EQ PUSH2 0x2CB JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x2F476003 EQ PUSH2 0x278 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x7CD2FFE EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x21298310 EQ PUSH2 0x209 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x18D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x884 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x973 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x9C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x9C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x169B JUMP JUMPDEST PUSH2 0xC06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0xE34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x169B JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH2 0x4BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x126B JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x545 JUMPI POP PUSH2 0x545 DUP3 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x57A JUMP JUMPDEST PUSH2 0x5A9 DUP2 PUSH2 0x5A4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x5B3 DUP4 DUP4 PUSH2 0x138D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1BCA JUMP JUMPDEST CALLVALUE PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 DUP4 DUP4 PUSH32 0x0 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x692 DUP4 PUSH32 0x0 PUSH2 0x82F JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1933A4EB CALLVALUE DUP5 DUP5 CALLER PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x6F1E998489DA0152047F9F97B3C6F21B503848EF7D66C815EBD247B87066E90B CALLVALUE DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x77F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x799 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x7D3 DUP3 DUP3 PUSH2 0x1412 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x810 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x866 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B6 DUP2 PUSH2 0x5A4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x8E0 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x8FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x926 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x1412 JUMP JUMPDEST PUSH32 0x708BD40F8F4D2AD60032CAEA0582161D35C50177CC0B2C575B5D483BD2902CAA DUP3 PUSH1 0x40 MLOAD PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0xA4D DUP4 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1AB7 JUMP JUMPDEST DUP2 PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA93 DUP6 DUP4 DUP7 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAA1 DUP4 DUP7 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x69B9993400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x69B99934 SWAP1 PUSH2 0xB11 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP11 SWAP1 DUP11 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH32 0x6F1E998489DA0152047F9F97B3C6F21B503848EF7D66C815EBD247B87066E90B DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBB1 JUMPI POP PUSH1 0x0 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x545 JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xBEA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC11 PUSH1 0x0 CALLER PUSH2 0x997 JUMP JUMPDEST DUP1 PUSH2 0xC41 JUMPI POP PUSH2 0xC41 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0x997 JUMP JUMPDEST PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE02 JUMPI PUSH2 0xC8C DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xC77 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xCBA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCCF SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT PUSH2 0xD09 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0xD32 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0xD85 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD9A SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0xDC9 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0xC60 JUMP JUMPDEST POP PUSH32 0xAF397CF4DD9B218AA8392D733BE436ECA6DC865D9FEF8BDDC37FF3CCE5A58326 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x955 SWAP3 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xE61 DUP3 PUSH2 0x57A JUMP JUMPDEST PUSH2 0xE6D DUP2 PUSH2 0x5A4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x5B3 DUP4 DUP4 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xECF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEB1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE4 PUSH1 0x0 CALLER PUSH2 0x997 JUMP JUMPDEST DUP1 PUSH2 0xF14 JUMPI POP PUSH2 0xF14 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 CALLER PUSH2 0x997 JUMP JUMPDEST PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10D1 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xF49 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xFBB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFD0 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x1006 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xC77 JUMPI INVALID JUMPDEST ISZERO PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x5 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1031 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH1 0x4 SWAP1 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x109A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0xF33 JUMP JUMPDEST POP PUSH32 0xEE3F29A31E91DF914992DACFB3A9FEB176D6CB3C1E35A4EBBE186AEB4827A60B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x955 SWAP3 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1110 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 DUP2 PUSH2 0x5A4 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x1188 PUSH32 0x5146A08BAF902532D0EE2F909971144F12CA32651CD70CBEE1117CDDFB3B3B33 DUP4 PUSH2 0x138D JUMP JUMPDEST PUSH32 0xD36B0989E598A1B05388150A9A8C84925E2710D91910406B8735E01F3ED02817 DUP3 PUSH1 0x40 MLOAD PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2C4EF0D5 PUSH2 0x11F4 DUP8 DUP8 DUP8 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE MLOAD PUSH32 0xBBD6EB1E2586CC8EA8E80AA1CCF25590BEFFDD2CB73367B5AC49214505BB48C4 SWAP2 PUSH2 0x12D0 SWAP2 DUP5 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1333 DUP3 DUP3 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x7D3 JUMPI PUSH2 0x134B DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x1356 DUP4 PUSH1 0x20 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1367 SWAP3 SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x5DB SWAP2 PUSH1 0x4 ADD PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x1397 DUP3 DUP3 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x13CE PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x141C DUP3 DUP3 PUSH2 0x997 JUMP JUMPDEST ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1451 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x2 MUL PUSH1 0x2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1511 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x156E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 PUSH1 0x2 DUP5 MUL ADD JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x162C JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x15DD JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15ED JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH1 0x0 NOT ADD PUSH2 0x15A5 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x1A4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1663 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x164B DUP2 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1680 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x168B DUP2 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AD JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16C4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16D7 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16E5 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x16F8 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1734 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1746 DUP2 PUSH2 0x1D6F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1765 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1777 DUP2 PUSH2 0x1D6F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x179C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x17B5 DUP2 PUSH2 0x1D6F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x164B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP3 ADD MSTORE PUSH1 0x74 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x188E DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D3F JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x18CB DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D3F JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1961 JUMPI DUP3 CALLDATALOAD PUSH2 0x1946 DUP2 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1933 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19AD JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1988 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A37 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077686974656C6973742042524942455F5641554C5400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F742077686974656C69737465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207465616D4D656D6265720000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C72656164792077686974656C697374656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F742077686974656C69737465640000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646561646C696E65206861732070617373656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x427269626520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D5A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D42 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D69 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MSTORE SWAP2 PUSH16 0x1228E92B9F925DEE966D976455E5041F DUP1 PUSH8 0xB850B46B9BAD1F18 0xC7 BYTE PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
                "sourceMap": "18551:10209:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10422:202;;;;;;;;;;-1:-1:-1;10422:202:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19003:51;;;;;;;;;;-1:-1:-1;19003:51:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;18860:52::-;;;;;;;;;;-1:-1:-1;18860:52:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11794:121::-;;;;;;;;;;-1:-1:-1;11794:121:0;;;;;:::i;:::-;;:::i;12165:145::-;;;;;;;;;;-1:-1:-1;12165:145:0;;;;;:::i;:::-;;:::i;:::-;;27262:1044;;;;;;:::i;:::-;;:::i;13182:214::-;;;;;;;;;;-1:-1:-1;13182:214:0;;;;;:::i;:::-;;:::i;24285:306::-;;;;;;;;;;-1:-1:-1;24285:306:0;;;;;:::i;:::-;;:::i;24849:230::-;;;;;;;;;;-1:-1:-1;24849:230:0;;;;;:::i;:::-;;:::i;18652:58::-;;;;;;;;;;;;;:::i;20850:266::-;;;;;;;;;;-1:-1:-1;20850:266:0;;;;;:::i;:::-;;:::i;19094:58::-;;;;;;;;;;-1:-1:-1;19094:58:0;;;;;:::i;:::-;;:::i;18777:33::-;;;;;;;;;;;;;:::i;10711:137::-;;;;;;;;;;-1:-1:-1;10711:137:0;;;;;:::i;:::-;;:::i;9829:49::-;;;;;;;;;;;;;:::i;25973:1158::-;;;;;;;;;;-1:-1:-1;25973:1158:0;;;;;:::i;:::-;;:::i;21475:274::-;;;;;;;;;;-1:-1:-1;21475:274:0;;;;;:::i;:::-;;:::i;22703:797::-;;;;;;;;;;-1:-1:-1;22703:797:0;;;;;:::i;:::-;;:::i;18610:36::-;;;;;;;;;;;;;:::i;12544:147::-;;;;;;;;;;-1:-1:-1;12544:147:0;;;;;:::i;:::-;;:::i;21211:117::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;21870:704::-;;;;;;;;;;-1:-1:-1;21870:704:0;;;;;:::i;:::-;;:::i;19158:37::-;;;;;;;;;;-1:-1:-1;19158:37:0;;;;;:::i;:::-;;:::i;20443:257::-;;;;;;;;;;-1:-1:-1;20443:257:0;;;;;:::i;:::-;;:::i;25418:335::-;;;;;;;;;;-1:-1:-1;25418:335:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;28607:151::-;;;;;;;;;;-1:-1:-1;28607:151:0;;;;;:::i;:::-;;:::i;10422:202::-;10507:4;10530:47;;;10545:32;10530:47;;:87;;;10581:36;10605:11;10581:23;:36::i;:::-;10523:94;;10422:202;;;;:::o;19003:51::-;;;;;;;;;;;;-1:-1:-1;;;;;19003:51:0;;:::o;18860:52::-;;;;;;;;;;;;;:::o;11794:121::-;11860:7;11886:12;;;;;;;;;;:22;;;;11794:121::o;12165:145::-;12248:18;12261:4;12248:12;:18::i;:::-;10307:30;10318:4;10324:12;:10;:12::i;:::-;10307:10;:30::i;:::-;12278:25:::1;12289:4;12295:7;12278:10;:25::i;:::-;12165:145:::0;;;:::o;27262:1044::-;17018:1;17599:7;;:19;;17591:63;;;;-1:-1:-1;;;17591:63:0;;;;;;;:::i;:::-;;;;;;;;;17018:1;17729:7;:18;;;27342:24:::1;27369:27:::0;;;::::1;::::0;;;;;;;;27457:15:::1;27427:45:::0;::::1;27406:120;;;;-1:-1:-1::0;;;27406:120:0::1;;;;;;;:::i;:::-;27544:9;27536:62;;;;-1:-1:-1::0;;;27536:62:0::1;;;;;;;:::i;:::-;27609:23;27635:115;27677:8;27699:16;27729:11;27635:28;:115::i;:::-;27609:141;;27760:24;27787:89;27825:16;27855:11;27787:24;:89::i;:::-;27760:116;;27972:11;-1:-1:-1::0;;;;;27960:37:0::1;;28005:9;28029:15;28058:16;28088:10;27960:148;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;28279:10;-1:-1:-1::0;;;;;28124:175:0::1;28172:11;-1:-1:-1::0;;;;;28124:175:0::1;28150:8;28124:175;28197:9;28220:15;28249:16;28124:175;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;16975:1:0;17902:22;;-1:-1:-1;;27262:1044:0:o;13182:214::-;13288:12;:10;:12::i;:::-;-1:-1:-1;;;;;13277:23:0;:7;-1:-1:-1;;;;;13277:23:0;;13269:83;;;;-1:-1:-1;;;13269:83:0;;;;;;;:::i;:::-;13363:26;13375:4;13381:7;13363:11;:26::i;:::-;13182:214;;:::o;24285:306::-;24433:18;24526:8;24536;24546:16;24564:5;24509:61;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;24482:102;;;;;;24463:121;;24285:306;;;;;:::o;24849:230::-;24969:18;25037:8;25047:16;25065:5;25020:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25010:62;;;;;;25003:69;;24849:230;;;;:::o;18652:58::-;18688:22;18652:58;:::o;20850:266::-;9874:4;10307:30;9874:4;10324:12;:10;:12::i;10307:30::-;20970::::1;18688:22;20989:10;20970:7;:30::i;:::-;20962:61;;;;-1:-1:-1::0;;;20962:61:0::1;;;;;;;:::i;:::-;21033:34;18688:22;21056:10;21033:11;:34::i;:::-;21083:26;21098:10;21083:26;;;;;;:::i;:::-;;;;;;;;20850:266:::0;;:::o;19094:58::-;;;;;;;;;;;;;:::o;18777:33::-;;;:::o;10711:137::-;10789:4;10812:12;;;;;;;;;;;-1:-1:-1;;;;;10812:29:0;;;;;;;;;;;;;;;10711:137::o;9829:49::-;9874:4;9829:49;:::o;25973:1158::-;17018:1;17599:7;;:19;;17591:63;;;;-1:-1:-1;;;17591:63:0;;;;;;;:::i;:::-;17018:1;17729:7;:18;;;26111:24:::1;26138:27:::0;;;::::1;::::0;;;;;;;;26226:15:::1;26196:45:::0;::::1;26175:120;;;;-1:-1:-1::0;;;26175:120:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;26313:19:0;::::1;26305:45;;;;-1:-1:-1::0;;;26305:45:0::1;;;;;;;:::i;:::-;26368:25;26387:5;26368:18;:25::i;:::-;26360:62;;;;-1:-1:-1::0;;;26360:62:0::1;;;;;;;:::i;:::-;26440:11:::0;26432:59:::1;;;;-1:-1:-1::0;;;26432:59:0::1;;;;;;;:::i;:::-;26502:23;26528:109;26570:8;26592:16;26622:5;26528:28;:109::i;:::-;26502:135;;26647:24;26674:83;26712:16;26742:5;26674:24;:83::i;:::-;26768:174;::::0;;;;26647:110;;-1:-1:-1;;;;;;26780:11:0::1;26768:42;::::0;::::1;::::0;:174:::1;::::0;26824:15;;26647:110;;26883:5;;26902:6;;26922:10:::1;::::0;26768:174:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;27104:10;-1:-1:-1::0;;;;;26958:166:0::1;27006:5;-1:-1:-1::0;;;;;26958:166:0::1;26984:8;26958:166;27025:6;27045:15;27074:16;26958:166;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;16975:1:0;17902:22;;-1:-1:-1;;;;25973:1158:0:o;21475:274::-;21559:20;:27;21539:4;;21555:75;;-1:-1:-1;21614:5:0;21607:12;;21555:75;-1:-1:-1;;;;;21659:30:0;;;;;;:23;:30;;;;;;:35;;;:83;;;21737:5;-1:-1:-1;;;;;21710:32:0;:20;21731:1;21710:23;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21710:23:0;:32;;21475:274;-1:-1:-1;;21475:274:0:o;22703:797::-;20150:39;9874:4;20178:10;20150:7;:39::i;:::-;:89;;;;20209:30;18688:22;20228:10;20209:7;:30::i;:::-;20129:150;;;;-1:-1:-1;;;20129:150:0;;;;;;;:::i;:::-;22820:9:::1;22815:634;22831:17:::0;;::::1;22815:634;;;22877:29;22896:6;;22903:1;22896:9;;;;;;;;;;;;;;;;;;;;:::i;22877:29::-;22869:63;;;;-1:-1:-1::0;;;22869:63:0::1;;;;;;;:::i;:::-;23080:13;23096:23;:34;23120:6;;23127:1;23120:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;23096:34:0::1;-1:-1:-1::0;;;;;23096:34:0::1;;;;;;;;;;;;;23080:50;;23144:12;23159:20;23227:1;23197:20;:27;;;;:31;23159:83;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;23257:20:::1;:27:::0;;-1:-1:-1;;;;;23159:83:0;;::::1;::::0;-1:-1:-1;23159:83:0;;23278:5;;23257:27;::::1;;;;;;::::0;;;::::1;::::0;;;;;;::::1;:34:::0;;-1:-1:-1;;23257:34:0::1;-1:-1:-1::0;;;;;23257:34:0;;::::1;;::::0;;23305:29;;::::1;::::0;;:23:::1;:29:::0;;;;;;;:37;;;23388:6;;23395:1;23388:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;23364:34:0::1;-1:-1:-1::0;;;;;23364:34:0::1;;;;;;;;;;;;23357:41;;;23412:20;:26;;;;;;;;::::0;;;::::1;::::0;;;;-1:-1:-1;;23412:26:0;;;;;-1:-1:-1;;23412:26:0::1;::::0;;;;;-1:-1:-1;;23412:26:0::1;22850:3;22815:634;;;;23464:29;23486:6;;23464:29;;;;;;;:::i;18610:36::-:0;;;:::o;12544:147::-;12628:18;12641:4;12628:12;:18::i;:::-;10307:30;10318:4;10324:12;:10;:12::i;10307:30::-;12658:26:::1;12670:4;12676:7;12658:11;:26::i;21211:117::-:0;21266:16;21301:20;21294:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21294:27:0;;;;;;;;;;;;;;;;;;;;;;;21211:117;:::o;21870:704::-;20150:39;9874:4;20178:10;20150:7;:39::i;:::-;:89;;;;20209:30;18688:22;20228:10;20209:7;:30::i;:::-;20129:150;;;;-1:-1:-1;;;20129:150:0;;;;;;;:::i;:::-;21984:9:::1;21979:547;21995:17:::0;;::::1;21979:547;;;22062:1;22041:6:::0;;22048:1;22041:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22041:23:0::1;;;22033:49;;;;-1:-1:-1::0;;;22033:49:0::1;;;;;;;:::i;:::-;22117:11;-1:-1:-1::0;;;;;22104:24:0::1;:6;;22111:1;22104:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22104:24:0::1;;;22096:65;;;;-1:-1:-1::0;;;22096:65:0::1;;;;;;;:::i;:::-;22201:29;22220:6;;22227:1;22220:9;;;;;;22201:29;22200:30;22175:114;;;;-1:-1:-1::0;;;22175:114:0::1;;;;;;;:::i;:::-;22365:20;22391:6;;22398:1;22391:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;22365:36:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;22365:36:0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;22365:36:0::1;-1:-1:-1::0;;;;;22365:36:0;;;::::1;::::0;;;::::1;::::0;;22468:20:::1;:27:::0;-1:-1:-1;;22468:47:0;;22415:23:::1;::::0;22439:6;;22446:1;22439:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22415:34:0::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;22415:34:0;:100;22014:3:::1;;21979:547;;;;22541:26;22560:6;;22541:26;;;;;;;:::i;19158:37::-:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19158:37:0;;-1:-1:-1;19158:37:0;:::o;20443:257::-;9874:4;10307:30;9874:4;10324:12;:10;:12::i;10307:30::-;-1:-1:-1;;;;;20562:24:0;::::1;20554:55;;;;-1:-1:-1::0;;;20554:55:0::1;;;;;;;:::i;:::-;20619:33;18688:22;20641:10;20619;:33::i;:::-;20668:25;20682:10;20668:25;;;;;;:::i;25418:335::-:0;25548:18;25568:19;25630:11;-1:-1:-1;;;;;25618:33:0;;25669:63;25698:8;25708:16;25726:5;25669:28;:63::i;:::-;25618:128;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25599:147;;;;25418:335;;;;;;:::o;28607:151::-;28684:10;28667:28;;;;:16;:28;;;;;;;:33;;-1:-1:-1;;28667:33:0;-1:-1:-1;;;;;28667:33:0;;;;;28716:35;;;;;28667:33;;28716:35;:::i;:::-;;;;;;;;28607:151;:::o;7758:155::-;7866:40;;;7881:25;7866:40;7758:155;;;:::o;3751:96::-;3830:10;3751:96;:::o;11129:484::-;11209:22;11217:4;11223:7;11209;:22::i;:::-;11204:403;;11392:41;11420:7;-1:-1:-1;;;;;11392:41:0;11430:2;11392:19;:41::i;:::-;11504:38;11532:4;11539:2;11504:19;:38::i;:::-;11299:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11299:265:0;;;;;;;;;;-1:-1:-1;;;11247:349:0;;;;;;;:::i;14639:233::-;14722:22;14730:4;14736:7;14722;:22::i;:::-;14717:149;;14760:6;:12;;;;;;;;;;;-1:-1:-1;;;;;14760:29:0;;;;;;;;;:36;;-1:-1:-1;;14760:36:0;14792:4;14760:36;;;14842:12;:10;:12::i;:::-;-1:-1:-1;;;;;14815:40:0;14833:7;-1:-1:-1;;;;;14815:40:0;14827:4;14815:40;;;;;;;;;;14639:233;;:::o;14997:234::-;15080:22;15088:4;15094:7;15080;:22::i;:::-;15076:149;;;15150:5;15118:12;;;;;;;;;;;-1:-1:-1;;;;;15118:29:0;;;;;;;;;:37;;-1:-1:-1;;15118:37:0;;;15201:12;:10;:12::i;:::-;-1:-1:-1;;;;;15174:40:0;15192:7;-1:-1:-1;;;;;15174:40:0;15186:4;15174:40;;;;;;;;;;14997:234;;:::o;5572:441::-;5647:13;5672:19;5708:6;5704:1;:10;5717:1;5704:14;5694:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5694:25:0;;5672:47;;5729:15;:6;5736:1;5729:9;;;;;;;;;;;:15;;;;;;;;;;;5754;:6;5761:1;5754:9;;;;;;;;;;;:15;;;;;;;;;;-1:-1:-1;5809:1:0;5796;:10;;:14;5779:132;5816:1;5812;:5;5779:132;;;5850:12;5863:5;5871:3;5863:11;5850:25;;;;;;;;;;5838:6;5845:1;5838:9;;;;;;;;;;;:37;;;;;;;;;;-1:-1:-1;5899:1:0;5889:11;;;;;-1:-1:-1;;5819:3:0;5779:132;;;-1:-1:-1;5928:10:0;;5920:55;;;;-1:-1:-1;;;5920:55:0;;;;;;;:::i;:::-;5999:6;5572:441;-1:-1:-1;;;5572:441:0:o;1211:241:-1:-;;1315:2;1303:9;1294:7;1290:23;1286:32;1283:2;;;-1:-1;;1321:12;1283:2;85:6;72:20;97:33;124:5;97:33;:::i;1459:399::-;;;1591:2;1579:9;1570:7;1566:23;1562:32;1559:2;;;-1:-1;;1597:12;1559:2;226:6;220:13;238:33;265:5;238:33;:::i;:::-;1760:2;1810:22;;;;1148:13;1649:74;;1148:13;;-1:-1;;;1553:305::o;1865:397::-;;;2004:2;1992:9;1983:7;1979:23;1975:32;1972:2;;;-1:-1;;2010:12;1972:2;2068:17;2055:31;2106:18;;2098:6;2095:30;2092:2;;;-1:-1;;2128:12;2092:2;2229:6;2218:9;2214:22;;;431:3;424:4;416:6;412:17;408:27;398:2;;-1:-1;;439:12;398:2;482:6;469:20;2106:18;501:6;498:30;495:2;;;-1:-1;;531:12;495:2;626:3;2004:2;;610:6;606:17;567:6;592:32;;589:41;586:2;;;-1:-1;;633:12;586:2;2004;563:17;;;;;2148:98;;-1:-1;1966:296;;-1:-1;;;;1966:296::o;2269:241::-;;2373:2;2361:9;2352:7;2348:23;2344:32;2341:2;;;-1:-1;;2379:12;2341:2;-1:-1;728:20;;2335:175;-1:-1;2335:175::o;2517:366::-;;;2638:2;2626:9;2617:7;2613:23;2609:32;2606:2;;;-1:-1;;2644:12;2606:2;741:6;728:20;2696:63;;2796:2;2839:9;2835:22;72:20;97:33;124:5;97:33;:::i;:::-;2804:63;;;;2600:283;;;;;:::o;2890:491::-;;;;3028:2;3016:9;3007:7;3003:23;2999:32;2996:2;;;-1:-1;;3034:12;2996:2;741:6;728:20;3086:63;;3186:2;3229:9;3225:22;72:20;97:33;124:5;97:33;:::i;:::-;2990:391;;3194:63;;-1:-1;;;3294:2;3333:22;;;;1000:20;;2990:391::o;3388:491::-;;;;3526:2;3514:9;3505:7;3501:23;3497:32;3494:2;;;-1:-1;;3532:12;3494:2;741:6;728:20;3584:63;;3684:2;3727:9;3723:22;1000:20;3692:63;;3792:2;3835:9;3831:22;72:20;97:33;124:5;97:33;:::i;:::-;3800:63;;;;3488:391;;;;;:::o;3886:239::-;;3989:2;3977:9;3968:7;3964:23;3960:32;3957:2;;;-1:-1;;3995:12;3957:2;877:6;864:20;26462:66;28304:5;26451:78;28280:5;28277:34;28267:2;;-1:-1;;28315:12;13124:670;7088:37;;;13433:2;13424:12;;7088:37;;;;13535:12;;;7088:37;13646:12;27939:14;;;-1:-1;;27939:14;13646:12;;;5403:58;13757:12;;;13324:470::o;13801:531::-;7088:37;;;14082:2;14073:12;;7088:37;;;;27943:2;27939:14;-1:-1;;27939:14;14184:12;;;5403:58;14295:12;;;13973:359::o;14339:970::-;;10638:25;10625:11;10618:46;7813:5;25078:12;7925:52;7970:6;10602:2;10687:3;10683:12;7958:4;7951:5;7947:16;7925:52;:::i;:::-;12064:19;10602:2;7989:16;;;;;;12044:40;25078:12;;7925:52;25078:12;12103;;;7958:4;7947:16;;7925:52;:::i;:::-;7989:16;12103:12;7989:16;;14725:584;-1:-1;;;;14725:584::o;15316:222::-;-1:-1;;;;;26603:54;;;;5145:37;;15443:2;15428:18;;15414:124::o;15545:349::-;-1:-1;;;;;26603:54;;;5014:58;;26603:54;;15880:2;15865:18;;5145:37;15708:2;15693:18;;15679:215::o;15901:333::-;-1:-1;;;;;26603:54;;;;5145:37;;16220:2;16205:18;;7088:37;16056:2;16041:18;;16027:207::o;16241:390::-;16428:2;16442:47;;;16413:18;;;25599:19;;;16241:390;;5829:21;25639:14;;;16241:390;5856:291;5881:6;5878:1;5875:13;5856:291;;;85:6;72:20;97:33;124:5;97:33;:::i;:::-;-1:-1;;;;;26603:54;5145:37;;26094:12;;;;4907:14;;;;5903:1;5896:9;5856:291;;;-1:-1;16495:126;16399:232;-1:-1;;;;;;16399:232::o;16638:370::-;16815:2;16829:47;;;25078:12;;16800:18;;;25599:19;;;16638:370;;16815:2;24932:14;;;;25639;;;;16638:370;6616:260;6641:6;6638:1;6635:13;6616:260;;;6702:13;;-1:-1;;;;;26603:54;5145:37;;25339:14;;;;4907;;;;6663:1;6656:9;6616:260;;;-1:-1;16882:116;;16786:222;-1:-1;;;;;;16786:222::o;17015:210::-;26285:13;;26278:21;6971:34;;17136:2;17121:18;;17107:118::o;17232:222::-;7088:37;;;17359:2;17344:18;;17330:124::o;17461:460::-;7088:37;;;17816:2;17801:18;;7088:37;;;;-1:-1;;;;;26603:54;17907:2;17892:18;;5014:58;17652:2;17637:18;;17623:298::o;17928:684::-;7088:37;;;18340:2;18325:18;;7088:37;;;;-1:-1;;;;;26603:54;;;18423:2;18408:18;;5145:37;18506:2;18491:18;;7088:37;26603:54;18597:3;18582:19;;5014:58;18175:3;18160:19;;18146:466::o;18619:310::-;;18766:2;18787:17;18780:47;7441:5;25078:12;25611:6;18766:2;18755:9;18751:18;25599:19;7535:52;7580:6;25639:14;18755:9;25639:14;18766:2;7561:5;7557:16;7535:52;:::i;:::-;27848:7;27832:14;-1:-1;;27828:28;7599:39;;;;25639:14;7599:39;;18737:192;-1:-1;;18737:192::o;18936:416::-;19136:2;19150:47;;;19121:18;;;25599:19;8278:34;25639:14;;;8258:55;8332:12;;;19107:245::o;19359:416::-;19559:2;19573:47;;;8583:2;19544:18;;;25599:19;8619:30;25639:14;;;8599:51;8669:12;;;19530:245::o;19782:416::-;19982:2;19996:47;;;8920:2;19967:18;;;25599:19;8956:26;25639:14;;;8936:47;9002:12;;;19953:245::o;20205:416::-;20405:2;20419:47;;;9253:2;20390:18;;;25599:19;9289:15;25639:14;;;9269:36;9324:12;;;20376:245::o;20628:416::-;20828:2;20842:47;;;9575:2;20813:18;;;25599:19;9611:20;25639:14;;;9591:41;9651:12;;;20799:245::o;21051:416::-;21251:2;21265:47;;;9902:2;21236:18;;;25599:19;9938:27;25639:14;;;9918:48;9985:12;;;21222:245::o;21474:416::-;21674:2;21688:47;;;10236:2;21659:18;;;25599:19;10272:23;25639:14;;;10252:44;10315:12;;;21645:245::o;21897:416::-;22097:2;22111:47;;;10934:2;22082:18;;;25599:19;10970:30;25639:14;;;10950:51;11020:12;;;22068:245::o;22320:416::-;22520:2;22534:47;;;11271:2;22505:18;;;25599:19;11307:33;25639:14;;;11287:54;11360:12;;;22491:245::o;22743:416::-;22943:2;22957:47;;;11611:2;22928:18;;;25599:19;11647:34;25639:14;;;11627:55;11716:5;11702:12;;;11695:27;11741:12;;;22914:245::o;23166:416::-;23366:2;23380:47;;;12354:2;23351:18;;;25599:19;12390:16;25639:14;;;12370:37;12426:12;;;23337:245::o;23589:416::-;23789:2;23803:47;;;12677:2;23774:18;;;25599:19;12713:34;25639:14;;;12693:55;12782:17;12768:12;;;12761:39;12819:12;;;23760:245::o;24241:444::-;7088:37;;;24588:2;24573:18;;7088:37;;;;24671:2;24656:18;;7088:37;24424:2;24409:18;;24395:290::o;27128:268::-;27193:1;27200:101;27214:6;27211:1;27208:13;27200:101;;;27281:11;;;27275:18;27262:11;;;27255:39;27236:2;27229:10;27200:101;;;27316:6;27313:1;27310:13;27307:2;;;27193:1;27372:6;27367:3;27363:16;27356:27;27307:2;;27177:219;;;:::o;27971:117::-;-1:-1;;;;;28058:5;26603:54;28033:5;28030:35;28020:2;;28079:1;;28069:12;28020:2;28014:74;:::o"
              },
              "methodIdentifiers": {
                "BRIBE_VAULT()": "be309bca",
                "DEFAULT_ADMIN_ROLE()": "a217fddf",
                "PROTOCOL()": "91b9b827",
                "TEAM_ROLE()": "49d5e604",
                "addWhitelistTokens(address[])": "e3113df9",
                "allWhitelistedTokens(uint256)": "e468baf0",
                "depositBribe(bytes32)": "2f476003",
                "depositBribeERC20(bytes32,address,uint256)": "a602d140",
                "generateBribeVaultIdentifier(bytes32,uint256,address)": "3eeed1a5",
                "generateRewardIdentifier(uint256,address)": "40c58189",
                "getBribe(bytes32,uint256,address)": "f7e6b46b",
                "getRoleAdmin(bytes32)": "248a9ca3",
                "getWhitelistedTokens()": "e26f7900",
                "grantRole(bytes32,address)": "2f2ff15d",
                "grantTeamRole(address)": "f52c395a",
                "hasRole(bytes32,address)": "91d14854",
                "indexOfWhitelistedToken(address)": "8e8efaee",
                "isWhitelistedToken(address)": "ab37f486",
                "proposalDeadlines(bytes32)": "21298310",
                "removeWhitelistTokens(address[])": "b25706f3",
                "renounceRole(bytes32,address)": "36568abe",
                "revokeRole(bytes32,address)": "d547741f",
                "revokeTeamRole(address)": "5699fbad",
                "rewardForwarding(address)": "07cd2ffe",
                "setRewardForwarding(address)": "f96258c4",
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_BRIBE_VAULT\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_PROTOCOL\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"AddWhitelistTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bribeIdentifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"rewardIdentifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"briber\",\"type\":\"address\"}],\"name\":\"DepositBribe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"GrantTeamRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"RemoveWhitelistTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"RevokeTeamRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"SetProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SetRewardForwarding\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BRIBE_VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTOCOL\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"addWhitelistTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"}],\"name\":\"depositBribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositBribeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"generateBribeVaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"generateRewardIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBribe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bribeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bribeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"grantTeamRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfWhitelistedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWhitelistedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposalDeadlines\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"removeWhitelistTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"revokeTeamRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardForwarding\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"setRewardForwarding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addWhitelistTokens(address[])\":{\"params\":{\"tokens\":\"address[]  Tokens to add to whitelist\"}},\"depositBribe(bytes32)\":{\"params\":{\"proposal\":\"bytes32  Proposal\"}},\"depositBribeERC20(bytes32,address,uint256)\":{\"params\":{\"amount\":\"uint256  Token amount\",\"proposal\":\"bytes32  Proposal\",\"token\":\"address  Token\"}},\"generateBribeVaultIdentifier(bytes32,uint256,address)\":{\"params\":{\"proposal\":\"bytes32  Proposal\",\"proposalDeadline\":\"uint256  Proposal deadline\",\"token\":\"address  Token\"},\"returns\":{\"identifier\":\"       bytes32  BribeVault identifier\"}},\"generateRewardIdentifier(uint256,address)\":{\"params\":{\"proposalDeadline\":\"uint256  Proposal deadline\",\"token\":\"address  Token\"},\"returns\":{\"identifier\":\"       bytes32  Reward identifier\"}},\"getBribe(bytes32,uint256,address)\":{\"params\":{\"proposal\":\"bytes32  Proposal\",\"proposalDeadline\":\"uint256  Proposal deadline\",\"token\":\"address  Token\"},\"returns\":{\"bribeAmount\":\"      address  Token amount\",\"bribeToken\":\"       address  Token address\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"grantTeamRole(address)\":{\"params\":{\"teamMember\":\"address  Address to grant the teamMember role\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isWhitelistedToken(address)\":{\"params\":{\"token\":\"address Token address to be checked\"}},\"removeWhitelistTokens(address[])\":{\"params\":{\"tokens\":\"address[]  Tokens to remove from whitelist\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"revokeTeamRole(address)\":{\"params\":{\"teamMember\":\"address  Address to revoke the teamMember role\"}},\"setRewardForwarding(address)\":{\"params\":{\"to\":\"address  Account that rewards will be sent to\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addWhitelistTokens(address[])\":{\"notice\":\"Add whitelist tokens\"},\"depositBribe(bytes32)\":{\"notice\":\"Deposit bribe for a proposal (native token only)\"},\"depositBribeERC20(bytes32,address,uint256)\":{\"notice\":\"Deposit bribe for a proposal (ERC20 tokens only)\"},\"generateBribeVaultIdentifier(bytes32,uint256,address)\":{\"notice\":\"Generate the BribeVault identifier based on a scheme\"},\"generateRewardIdentifier(uint256,address)\":{\"notice\":\"Generate the reward identifier based on a scheme\"},\"getBribe(bytes32,uint256,address)\":{\"notice\":\"Get bribe from BribeVault\"},\"getWhitelistedTokens()\":{\"notice\":\"Return the list of currently whitelisted token addresses\"},\"grantTeamRole(address)\":{\"notice\":\"Grant the team role to an address\"},\"isWhitelistedToken(address)\":{\"notice\":\"Return whether the specified token is whitelisted\"},\"removeWhitelistTokens(address[])\":{\"notice\":\"Remove whitelist tokens\"},\"revokeTeamRole(address)\":{\"notice\":\"Revoke the team role from an address\"},\"setRewardForwarding(address)\":{\"notice\":\"Voters can opt in or out of reward-forwardingOpt-in: A voter sets another address to forward rewards toOpt-out: A voter sets their own address or the zero address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"BribeBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "Context": {
            "abi": [],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "methodIdentifiers": {}
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "ERC165": {
            "abi": [
              {
                "inputs": [
                  {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                  }
                ],
                "name": "supportsInterface",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              }
            ],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "methodIdentifiers": {
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "IAccessControl": {
            "abi": [
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                  }
                ],
                "name": "RoleAdminChanged",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  }
                ],
                "name": "RoleGranted",
                "type": "event"
              },
              {
                "anonymous": false,
                "inputs": [
                  {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  },
                  {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  }
                ],
                "name": "RoleRevoked",
                "type": "event"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  }
                ],
                "name": "getRoleAdmin",
                "outputs": [
                  {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "grantRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "hasRole",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "renounceRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                  }
                ],
                "name": "revokeRole",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              }
            ],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "methodIdentifiers": {
                "getRoleAdmin(bytes32)": "248a9ca3",
                "grantRole(bytes32,address)": "2f2ff15d",
                "hasRole(bytes32,address)": "91d14854",
                "renounceRole(bytes32,address)": "36568abe",
                "revokeRole(bytes32,address)": "d547741f"
              }
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"IAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "IBribeVault": {
            "abi": [
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "bribeIdentifier",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "rewardIdentifier",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "briber",
                    "type": "address"
                  }
                ],
                "name": "depositBribe",
                "outputs": [],
                "stateMutability": "payable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "bribeIdentifier",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "rewardIdentifier",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "briber",
                    "type": "address"
                  }
                ],
                "name": "depositBribeERC20",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
              },
              {
                "inputs": [
                  {
                    "internalType": "bytes32",
                    "name": "bribeIdentifier",
                    "type": "bytes32"
                  }
                ],
                "name": "getBribe",
                "outputs": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              }
            ],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "methodIdentifiers": {
                "depositBribe(bytes32,bytes32,address)": "1933a4eb",
                "depositBribeERC20(bytes32,bytes32,address,uint256,address)": "69b99934",
                "getBribe(bytes32)": "2c4ef0d5"
              }
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bribeIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"rewardIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"briber\",\"type\":\"address\"}],\"name\":\"depositBribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bribeIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"rewardIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"briber\",\"type\":\"address\"}],\"name\":\"depositBribeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bribeIdentifier\",\"type\":\"bytes32\"}],\"name\":\"getBribe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"IBribeVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "IERC165": {
            "abi": [
              {
                "inputs": [
                  {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                  }
                ],
                "name": "supportsInterface",
                "outputs": [
                  {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                  }
                ],
                "stateMutability": "view",
                "type": "function"
              }
            ],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "methodIdentifiers": {
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "ReentrancyGuard": {
            "abi": [],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "",
                "opcodes": "",
                "sourceMap": ""
              },
              "methodIdentifiers": {}
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          },
          "Strings": {
            "abi": [],
            "evm": {
              "bytecode": {
                "linkReferences": {},
                "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055df5bacbed5ce3df2beed267404b51664d753940ca893ed573973eb9c6fa7fa64736f6c63430007010033",
                "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xDF JUMPDEST 0xAC 0xBE 0xD5 0xCE RETURNDATASIZE CALLCODE 0xBE 0xED 0x26 PUSH21 0x4B51664D753940CA893ED573973EB9C6FA7FA6473 PUSH16 0x6C634300070100330000000000000000 ",
                "sourceMap": "4130:1885:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
              },
              "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055df5bacbed5ce3df2beed267404b51664d753940ca893ed573973eb9c6fa7fa64736f6c63430007010033",
                "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xDF JUMPDEST 0xAC 0xBE 0xD5 0xCE RETURNDATASIZE CALLCODE 0xBE 0xED 0x26 PUSH21 0x4B51664D753940CA893ED573973EB9C6FA7FA6473 PUSH16 0x6C634300070100330000000000000000 ",
                "sourceMap": "4130:1885:0:-:0;;;;;;;;"
              },
              "methodIdentifiers": {}
            },
            "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solace_swap/contracts/BalancerBribe.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"solace_swap/contracts/BalancerBribe.sol\":{\"keccak256\":\"0xff2f36fc2e839ab22c7f0dde4d0c352b8086a4fb2f3719a8e26c16397093f922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cf379bc76c5dfdddb2a5fedeb829159787c722a44ed0514130006244e90d15\",\"dweb:/ipfs/Qmbe4Kz6WUC8dsWiGR1FmjY7k625K5tu55duSTj7PZQsXo\"]}},\"version\":1}"
          }
        }
      }
    }
  }